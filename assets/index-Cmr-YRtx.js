(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();let X=null,Z=null,Q=null,Y=null,K=null,J=null;async function Se(){if(!(typeof window.dicomParser<"u"))return Z||(Z=new Promise((o,e)=>{const t=document.createElement("script");t.src="lib/dicomParser.min.js",t.onload=()=>{console.log("✓ dicomParser.js loaded successfully"),o()},t.onerror=()=>{console.error("✗ Failed to load dicomParser.js"),e(new Error("Failed to load dicomParser.js"))},document.head.appendChild(t)}),Z)}async function $e(){if(!(typeof window.tf<"u"))return X||(X=new Promise((o,e)=>{const t=document.createElement("script");t.src="lib/tf.min.js",t.onload=()=>{console.log("✓ TensorFlow.js loaded successfully"),o()},t.onerror=()=>{console.error("✗ Failed to load TensorFlow.js"),e(new Error("Failed to load TensorFlow.js"))},document.head.appendChild(t)}),X)}async function Ne(){if(!(typeof window.Plotly<"u"))return Q||(Q=new Promise((o,e)=>{const t=document.createElement("script");t.src="lib/plotly-cartesian.min.js",t.onload=()=>{console.log("✓ Plotly loaded successfully"),o()},t.onerror=()=>{console.error("✗ Failed to load Plotly"),e(new Error("Failed to load Plotly"))},document.head.appendChild(t)}),Q)}async function fe(){if(!(typeof window.niivue<"u"))return K||(K=new Promise((o,e)=>{const t=document.createElement("script");t.src="lib/niivue.umd.js",t.onload=()=>{console.log("✓ NiiVue loaded successfully"),o()},t.onerror=()=>{console.error("✗ Failed to load NiiVue"),e(new Error("Failed to load NiiVue"))},document.head.appendChild(t)}),K)}async function Oe(){if(!(typeof window.nifti<"u"))return Y||(Y=new Promise((o,e)=>{const t=document.createElement("script");t.src="lib/nifti-reader-global-min.js",t.onload=()=>{console.log("✓ nifti-reader.js loaded successfully"),o()},t.onerror=()=>{console.error("✗ Failed to load nifti-reader.js"),e(new Error("Failed to load nifti-reader.js"))},document.head.appendChild(t)}),Y)}async function re(){if(!(typeof window.itk<"u"))return J||(J=new Promise((o,e)=>{const t=document.createElement("script");t.src="lib/itk.js",t.onload=async()=>{console.log("✓ ITK.js loaded successfully");try{window.itk&&await window.itk.ready,o()}catch{console.error("✗ Failed to initialize ITK.js"),e(new Error("Failed to initialize ITK.js"))}},t.onerror=()=>{console.error("✗ Failed to load ITK.js"),e(new Error("Failed to load ITK.js"))},document.head.appendChild(t)}),J)}class Re{constructor(){this.volumes=new Map,this.volumeCounter=0}generateVolumeId(e="vol"){return`${e}_${this.volumeCounter++}`}async addFromFile(e,t=null,n=null){await re();try{const r=this.generateVolumeId("file");console.log(`Loading file ${e.name} for container: ${t} with new volume ID: ${r}`);const{image:s}=await itk.readImageFile(null,e);console.log("Volume loaded:",s);const l=n||{type:"file",name:e.name};return await this.addFromItkImage(s,r,l),r}catch(r){throw console.error(`Failed to add volume from file for container ${t}:`,r),r}}async addFromFilename(e,t=null){try{console.log(`Loading file from URL: ${e} for container: ${t}`);const n=await fetch(e);if(!n.ok)throw new Error(`Failed to fetch file: ${n.status} ${n.statusText}`);const r=await n.blob(),s=e.endsWith(".nii.gz")?"application/gzip":"image/nii",l=new File([r],e.split("/").pop(),{type:s}),i={type:"url",url:e};return await this.addFromFile(l,t,i)}catch(n){throw console.error(`Failed to add volume from filename for container ${t}:`,n),n}}async addFromDICOM(e,t=null){if(await Promise.all([re(),Se()]),typeof itk>"u"||typeof dicomParser>"u")throw console.error("ITK.js or dicom-parser.js is not loaded."),new Error("Required libraries not found.");let n=null;try{if(!e||e.length===0)return console.warn("No files provided for DICOM loading."),null;const r=Array.from(e).filter(a=>a&&a.size>0);if(r.length===0)throw new Error("No valid files found (all files are empty or corrupted).");r.length!==e.length&&console.warn(`Filtered out ${e.length-r.length} invalid/empty files.`),console.log(`Starting DICOM processing for ${r.length} files for container: ${t}.`),console.log(`Step 1/5: Reading DICOM metadata from ${r.length} files...`);const s=r.map(async(a,u)=>{let m=null,f=null,h=null;try{m=await a.arrayBuffer(),f=new Uint8Array(m),h=dicomParser.parseDicom(f,{untilTag:"x7fe00010"});const p=y=>(h.string(y)||"").trim();return{file:a,name:a.name,index:u,studyInstanceUID:p("x0020000d"),seriesDescription:p("x0008103e"),seriesInstanceUID:p("x0020000e"),temporalPosId:p("x00200100"),acquisitionNumber:p("x00200012"),triggerTime:p("x00181060"),acquisitionTime:p("x00080032"),instanceNumber:parseInt(p("x00200013"),10)||0,repetitionTime:parseFloat(p("x00180080"))||1,sliceLocation:parseFloat(p("x00201041"))||0,imagePosition:p("x00200032")}}catch(p){return console.warn(`Skipping file ${a.name}: ${p.message}`),null}finally{m&&(m=null),f&&(f=null),h&&(h=null)}}),l=(await Promise.all(s)).filter(a=>a&&a.studyInstanceUID);if(s.length=0,l.length===0)throw new Error("No files with valid DICOM metadata found.");console.log(`Successfully parsed ${l.length} DICOM files.`),l.sort((a,u)=>a.name.localeCompare(u.name,void 0,{numeric:!0})),console.log("Step 2/5: Grouping files by scan series...");const i=new Map;l.forEach(a=>{const u=`${a.studyInstanceUID}|${a.seriesDescription||"unknown"}`;i.has(u)||i.set(u,[]),i.get(u).push(a)}),l.length=0,console.log(`Found ${i.size} scan series to process.`),console.log("Step 3/5: Processing scan series...");let c=0;const d=i.size;for(const[a,u]of i.entries()){console.log(`Processing logical scan '${a}' with ${u.length} total files (${c+1}/${d}).`);const m=new Map;u.forEach(x=>{let F="defaultTimePoint";x.temporalPosId&&x.temporalPosId!==""?F=x.temporalPosId:x.acquisitionNumber&&x.acquisitionNumber!==""?F=x.acquisitionNumber:x.triggerTime&&x.triggerTime!==""?F=x.triggerTime:x.acquisitionTime&&x.acquisitionTime!==""&&(F=x.acquisitionTime),m.has(F)||m.set(F,[]),m.get(F).push(x)});const f=[],h=Array.from(m.keys()).sort((x,F)=>{const S=parseFloat(x),T=parseFloat(F);return!isNaN(S)&&!isNaN(T)?S-T:String(x).localeCompare(String(F),void 0,{numeric:!0})});if(h.length>1){console.log(`  Identified 4D dataset with ${h.length} time points.`);const x=h.map(T=>m.get(T).length),F=Math.min(...x),S=Math.max(...x);S!==F&&console.warn(`  Warning: Inconsistent slice counts (${F}-${S}) across time points`),console.log(`  Slice count validation: ${F} to ${S} slices per time point`)}else console.log("  Identified 3D dataset.");let p=0;const g=h.length;for(const x of h){const F=m.get(x);F.sort((T,B)=>{if(T.instanceNumber!==B.instanceNumber)return T.instanceNumber-B.instanceNumber;if(T.sliceLocation!==B.sliceLocation)return T.sliceLocation-B.sliceLocation;if(T.imagePosition&&B.imagePosition){const P=T.imagePosition.split("\\"),z=B.imagePosition.split("\\");if(P.length>=3&&z.length>=3){const M=parseFloat(P[2]),C=parseFloat(z[2]);if(!isNaN(M)&&!isNaN(C))return M-C}}return T.name.localeCompare(B.name,void 0,{numeric:!0})});const S=F.map(T=>T.file);console.log(`  Loading time point '${x}' (${p+1}/${g}) with ${S.length} files.`);try{const{image:T}=await itk.readImageDICOMFileSeries(S);f.push(T),S.length=0}catch(T){console.error(`  Failed to load 3D volume for time point ${x}:`,T)}p++,m.delete(x)}if(m.clear(),f.length===0){console.warn(`No 3D volumes loaded for scan '${a}'. Skipping.`);continue}if(f.length>1){const x=f[0].size;f.some((S,T)=>S.size[0]!==x[0]||S.size[1]!==x[1]||S.size[2]!==x[2])&&console.warn("  Warning: Some volumes have inconsistent dimensions for 4D assembly")}console.log("Step 4/5: Assembling final volume...");let y;if(f.length>1){console.log(`  Manually combining ${f.length} 3D volumes into a 4D image for scan '${a}'.`);const x=f[0],F=f.length,S=x.size[0],T=x.size[1],B=x.size[2],P=S*T*B;for(let $=1;$<F;$++){const L=f[$];if(L.size[0]!==S||L.size[1]!==T||L.size[2]!==B)throw f.forEach(V=>{V.data&&(V.data=null)}),new Error(`Image dimensions mismatch: time point ${$} has dimensions ${L.size}, expected ${[S,T,B]}`)}const z=new x.data.constructor(P*F);for(let $=0;$<F;$++)z.set(f[$].data,$*P),f[$].data=null;const M=x.direction,C=new Float64Array([M[0],M[1],M[2],0,M[3],M[4],M[5],0,M[6],M[7],M[8],0,0,0,0,1]),I=u[0]?.repetitionTime||1;y={imageType:{dimension:4,componentType:x.imageType.componentType,pixelType:x.imageType.pixelType,components:x.imageType.components},name:x.name||"4D-DICOM",origin:[...x.origin,0],spacing:[...x.spacing,I],direction:C,size:[S,T,B,F],data:z},f.forEach($=>{$&&($.data=null,$.direction=null,$.origin=null,$.spacing=null)}),f.length=0,console.log(`  Created 4D image with size [${y.size}] and time spacing ${I}`)}else y=f[0],f.length=0;console.log("  Final ITK Image Metadata:",{imageType:y.imageType,spacing:y.spacing,origin:y.origin,direction:y.direction,size:y.size}),console.log("Step 5/5: Adding volume to registry...");const w=a.replace(/[^a-zA-Z0-9]/g,"").slice(-12),v=this.generateVolumeId(`dicom_${w}`),[b,D]=a.split("|"),A={type:"dicom",files:u.length,seriesDescription:D,studyUID:b};await this.addFromItkImage(y,v,A);const E=y.imageType.dimension;console.log(`  Successfully added ${E}D volume (ID: ${v}) to the registry for container ${t}.`),n||(n=v),u.length=0,c++}if(i.clear(),!n)throw new Error("DICOM processing completed, but no volumes were successfully loaded.");return console.log("Finished processing all DICOM files."),n}catch(r){throw console.error("An error occurred during 4D DICOM processing:",r),r}finally{typeof window.gc=="function"&&window.gc(),console.log("Exiting addFromDICOM function.")}}async addFromDICOM_(e,t=null){try{const n=t||this.generateVolumeId("dicom");console.log(`Loading DICOM series with ${e.length} files, ID: ${n}`);const{image:r}=await itk.readImageDICOMFileSeries(e);console.log("DICOM volume loaded:",r);const s={type:"dicom",files:e.length};return await this.addFromItkImage(r,n,s),n}catch(n){throw console.error("Failed to add volume from DICOM files:",n),n}}async addFromItkImage(e,t=null,n=null){await re();try{const r=t||this.generateVolumeId("itk");console.log(`Adding ITK image with ID: ${r}`);const i=`${r}.${!1?"nii.gz":"nii"}`;console.time("createSafeImage");const c=await this._createSafeImageCopy(e);console.timeEnd("createSafeImage");const d=Array.isArray(c.direction[0])?c.direction.flat():c.direction,a={...c,direction:d};console.time("writeImageArrayBuffer");const{arrayBuffer:u}=await itk.writeImageArrayBuffer(null,a,i);if(console.timeEnd("writeImageArrayBuffer"),!u||u.byteLength===0)throw new Error("ArrayBuffer is empty or invalid");return this.volumes.set(r,{image:e,loadTime:new Date,buffer:u,source:n||{type:"itkImage",name:e.name||"unnamed"}}),r}catch(r){throw console.error("Failed to add volume from ITK image:",r),r}}async addFromArray(e,t,n=null){try{const r=n||this.generateVolumeId("array"),s={imageType:{dimension:t.dimensions.length||3,componentType:t.componentType||"float32",pixelType:t.pixelType||"Scalar",components:t.components||1},name:t.name||"ArrayVolume",origin:t.origin?[...t.origin]:[0,0,0],spacing:t.spacing?[...t.spacing]:[1,1,1],direction:t.direction?new Float64Array(t.direction):new Float64Array([1,0,0,0,1,0,0,0,1]),size:[...t.dimensions],data:e instanceof Float32Array?e:new Float32Array(e)},l={type:"array",dimensions:t.dimensions,componentType:t.componentType};return await this.addFromItkImage(s,r,l)}catch(r){throw console.error("Failed to add volume from array data:",r),r}}getVolume(e){return this.volumes.has(e)?this.volumes.get(e):null}getImageData(e){return this.volumes.has(e)?this.volumes.get(e).imageData:null}getVolumeIds(){return Array.from(this.volumes.keys())}getBuffer(e){const t=this.volumes.get(e);return t?t.buffer?t.buffer:(console.warn(`No buffer found for volume ${e}`),null):(console.warn(`Volume with ID ${e} not found`),null)}getMetaData(e){const t=this.volumes.get(e);if(!t)return console.warn(`Volume with ID ${e} not found`),null;if(!t.image)return console.warn(`No image data found for volume ${e}`),null;const{image:n,source:r}=t,{imageType:s,origin:l,spacing:i,direction:c,size:d}=n;return{dimensions:d?[...d]:null,spacing:i?[...i]:null,origin:l?[...l]:null,pixelType:s?s.componentType:null,components:s?s.components:null,dimensionality:s?s.dimension:null,voxelCount:d?d.reduce((u,m)=>u*m,1):null,direction:c?[...c]:null,name:t.fileName||e,source:r,loadTime:t.loadTime?t.loadTime.toISOString():null,hasBuffer:!!t.buffer,bufferSize:t.buffer?t.buffer.byteLength:null}}getVolumeSummaries(){return Array.from(this.volumes.entries()).map(([e,t])=>{const n=t.image;return{id:e,dimensions:n.size||[0,0,0],spacing:n.spacing||[1,1,1]}})}removeVolume(e){return this.volumes.delete(e)}cloneVolume(e,t=null){if(!this.volumes.has(e))return null;const n=this.volumes.get(e),r=t||this.generateVolumeId("clone"),s={...n.imageData,data:new n.imageData.data.constructor(n.imageData.data)};return this.volumes.set(r,{...n,imageData:s,clonedFrom:e,creationTime:new Date,source:{type:"clone",original:e}}),r}convertVolumeType(e,t,n=null){if(!this.volumes.has(e))return null;try{const r=this.volumes.get(e),s=n||this.generateVolumeId("converted"),l={int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,float32:Float32Array,float64:Float64Array};if(!l[t])throw new Error(`Unsupported component type: ${t}`);const i=l[t],c=new i(r.imageData.data.length);for(let a=0;a<r.imageData.data.length;a++)c[a]=r.imageData.data[a];const d={...r.imageData,data:c,imageType:{...r.imageData.imageType,componentType:t}};return this.volumes.set(s,{...r,image:this._createSafeImageCopy(r.image),imageData:d,convertedFrom:e,metadata:{...r.metadata,componentType:t},creationTime:new Date,source:{type:"converted",original:e}}),s}catch(r){return console.error("Failed to convert volume type:",r),null}}getVolumeStatistics(e){const t=this.getVolume(e);if(!t)throw new Error(`Volume with ID ${e} not found`);const n=t.image.data;n.length;let r=1/0,s=-1/0,l=0;for(let g=0;g<n.length;g++){const y=n[g];y<r&&(r=y),y>s&&(s=y),l+=y}const i=l/n.length;let c=0;for(let g=0;g<n.length;g++)c+=Math.pow(n[g]-i,2);c/=n.length;const d=Math.sqrt(c),a=[...n].sort((g,y)=>g-y),u=Math.floor(a.length/2);let m;a.length%2===0?m=(a[u-1]+a[u])/2:m=a[u];const f=this.calculatePercentile(a,25),h=this.calculatePercentile(a,75),p=h-f;return{min:this.roundValue(r),max:this.roundValue(s),mean:this.roundValue(i),median:this.roundValue(m),stdDev:this.roundValue(d),iqr:this.roundValue(p),q1:this.roundValue(f),q3:this.roundValue(h)}}calculatePercentile(e,t){const n=t/100*(e.length-1),r=Math.floor(n),s=n-r;return r>=e.length-1?e[e.length-1]:e[r]+s*(e[r+1]-e[r])}roundValue(e){return Math.round(e*100)/100}_createSafeImageCopy(e){return{imageType:{dimension:e.imageType.dimension,componentType:e.imageType.componentType,pixelType:e.imageType.pixelType,components:e.imageType.components},name:e.name,size:[...e.size],spacing:[...e.spacing],origin:[...e.origin],direction:Array.isArray(e.direction)?Array.isArray(e.direction[0])?e.direction.map(n=>[...n]):[...e.direction]:e.direction instanceof Float64Array?new Float64Array(e.direction):e.direction,data:new e.data.constructor(e.data)}}}const N=new Re;class _e{constructor(){this.controls=new Map,this.niivueInstance=null}createControlSection(e,t,n={}){const{showWindowingSliders:r=!1,showTimeframeSlider:s=!1,showVoxelCoordinates:l=!0,showWorldCoordinates:i=!0,showValue:c=!0}=n,d=document.createElement("div");if(d.className="control-section hidden",d.id=`control-section-${e}`,this.controls.set(e,d),this.niivueInstance=t,this.setupLocationHandler(e,t),this.setSectionVisibility(e,!1),s&&t.volumes.length>0&&t.volumes[0].hdr.dims[4]>1){const m=document.createElement("div");m.className="timeframe-slider-container";const h=t.volumes[0].hdr.dims[4]-1,p=this.createSlider("Time:",0,h,t.currentFrame,"timeframe"),g=()=>{const y=parseInt(p.input.value,10);p.valueDisplay.textContent=y,t.setFrame(y)};p.input.addEventListener("input",g),t.onFrameChange=y=>{p.input.value=y,p.valueDisplay.textContent=y},m.appendChild(p.wrapper),d.appendChild(m)}if(r){const m=document.createElement("div");m.className="windowing-slider-container";const f=t.volumes[0],h=f.hasOwnProperty("robust_min")?f.robust_min:f.global_min,p=f.hasOwnProperty("robust_max")?f.robust_max:f.global_max,g=f.cal_max-f.cal_min,y=(f.cal_max+f.cal_min)/2,w=this.createSlider("WW:",1,(p-h)*2,g,"windowing"),v=this.createSlider("WL:",h,p,y,"windowing"),b=()=>{const D=parseFloat(w.input.value),A=parseFloat(v.input.value),E=A-D/2,x=A+D/2;w.valueDisplay.textContent=D.toFixed(0),v.valueDisplay.textContent=A.toFixed(0),t.volumes[0]&&(t.volumes[0].cal_min=E,t.volumes[0].cal_max=x,t.updateGLVolume())};w.input.addEventListener("input",b),v.input.addEventListener("input",b),m.appendChild(w.wrapper),m.appendChild(v.wrapper),d.appendChild(m)}const a=document.createElement("div");a.className="status-panel",a.id=`status-panel-${e}`;let u="";return l&&(u+=`<span class="status-value" id="voxel-coords-${e}"></span>`),i&&(u+=`<span class="status-value" id="world-coords-${e}"></span>`),c&&(u+=`<span class="status-value" id="voxel-value-${e}"></span>`),a.innerHTML=u,d.appendChild(a),this.controls.set(e,d),d}createSlider(e,t,n,r,s){const l=document.createElement("div");l.className=`${s}-slider-wrapper`;const i=document.createElement("label");i.textContent=e;const c=document.createElement("input");c.type="range",c.min=t,c.max=n,c.value=r,c.step=(n-t)/100,c.className=`${s}-slider`;const d=document.createElement("span");return d.className=`${s}-value`,d.textContent=r.toFixed(0),l.appendChild(i),l.appendChild(c),l.appendChild(d),{wrapper:l,input:c,valueDisplay:d}}getControlSection(e){return this.controls.get(e)}clear(){for(const e of this.controls.keys())this.removeControlSection(e);this.controls.clear(),console.log("All control sections cleared.")}removeControlSection(e){const t=this.controls.get(e);t&&(t.remove(),this.controls.delete(e))}updateStatusPanel(e,t){if(!document.getElementById(`status-panel-${e}`))return;const r=k.getViewer(e);if(!r||!r.volumes||r.volumes.length===0){console.warn(`No volumes loaded for viewer ${e}`);return}const s=r.volumes[0],l=s.dims||[1,1,1];let i=[0,0,0];if(t.vox){const h=Array.isArray(t.vox)?t.vox:t.vox.length?Array.from(t.vox):[0,0,0];h.length>=3&&(i=[Math.round(h[0]),Math.round(h[1]),Math.round(h[2])])}const c=k.getViewer(e),d=c&&c.volumes.length>0?c.volumes[0].frame4D:0,a=c&&c.volumes.length>0&&c.volumes[0].dims.length>3&&c.volumes[0].dims[3]>1,u=document.getElementById(`voxel-coords-${e}`);u&&(a?u.textContent=`[${i[0]}, ${i[1]}, ${i[2]}, ${d}]`:u.textContent=`[${i[0]}, ${i[1]}, ${i[2]}]`);const m=document.getElementById(`world-coords-${e}`);if(m){let h=null;t.ras?h=Array.isArray(t.ras)?t.ras:t.ras.length?Array.from(t.ras):null:t.mm&&(h=Array.isArray(t.mm)?t.mm:t.mm.length?Array.from(t.mm):null),h&&h.length>=3?m.textContent=`(${h[0].toFixed(1)}, ${h[1].toFixed(1)}, ${h[2].toFixed(1)}) mm`:m.textContent="(0.0, 0.0, 0.0) mm"}const f=document.getElementById(`voxel-value-${e}`);if(f){let h="N/A";try{if(t.values&&t.values.length>0){const p=t.values[0];h=typeof p=="object"&&p!==null&&"value"in p?Number(p.value).toFixed(2):Number(p).toFixed(2)}else if(s.img&&l.length>=3&&i.every(Number.isFinite)){const[p,g,y]=i,[w,v,b]=l.slice(1,4),D=Math.max(0,Math.min(p,w-1)),A=Math.max(0,Math.min(g,v-1)),E=Math.max(0,Math.min(y,b-1)),x=w*v,F=x*b,S=d*F+E*x+A*w+D;if(S>=0&&S<s.img.length){const T=s.img[S];h=Number(T).toFixed(2)}}}catch(p){console.error("Error getting voxel value:",p),h="ERR"}f.textContent=h}}setupLocationHandler(e,t){if(!t||!t.gl)return;this.niivueInstance||(this.niivueInstance=t);const n=t.onLocationChange;t.onLocationChange=r=>{n&&typeof n=="function"&&n.call(t,r),r&&this.updateStatusPanel(e,r)}}setSectionVisibility(e,t){const n=this.controls.get(e);n&&n.classList.toggle("hidden",!t)}toggleAllControlSections(e=null){if(this.controls.size===0||["INPUT","TEXTAREA","SELECT"].includes(document.activeElement?.tagName))return;let t;if(e!==null)t=e;else{const n=this.controls.values().next().value;t=n?n.classList.contains("hidden"):!0}for(const[n,r]of this.controls){if(t){const s=k.getViewer(n);if(s){const l=s.getCurrentLocation?s.getCurrentLocation():null;l&&this.updateStatusPanel(n,l),s.updateGLVolume&&s.updateGLVolume()}}this.setSectionVisibility(n,t)}}}const R=new _e,He={ui:{sidebarWidth:"12%",minSidebarWidth:150,maxSidebarWidthRatio:.4,defaultPadding:"10px",borderRadius:"4px"},main:{initialGrid:{columns:"1fr",rows:"1fr"},initialPanel:{id:"panel-1",options:{enableDragDrop:!0}}},fileTypes:{nifti:[".nii",".nii.gz"],dicom:[".dcm",".dicom",".ima"],acceptedNifti:".nii,.nii.gz",acceptedDicom:".dcm"},fractal:{defaultDim:"2.5",defaultSize:"256",defaultWindow:"7",defaultScales:"1,2,3",defaultMethod:"0",fdRange:{min:2,max:3},histogramBins:50},plots:{heatmapSize:{width:400,height:300},histogramHeight:250,containerHeight:{plot:"300px",histogram:"250px",stats:"auto"},margins:{t:40,b:5,l:5,r:5},colors:{primary:"#4285f4",dragBorder:"#4a90e2",dragBackground:"rgba(74, 144, 226, 0.1)",histogram:"rgba(100, 100, 255, 0.7)",histogramLine:"rgba(0, 0, 200, 1)"}},fd4v:{defaultResolution:"1.5",defaultWindowSize:"9",defaultScales:"1,2,3,4",panelCount:4},classes:{statsTable:"stats-table",plotContainer:"plot-container",statsContainer:"stats-container",inputGroup:"input-group"},controls:{showWindowingSliders:!1,showTimeframeSlider:!1,showVoxelCoordinates:!0,showWorldCoordinates:!0,showValue:!0},timing:{dragDropDelay:100,containerIdSuffix:()=>Date.now()}},je="modulepreload",qe=function(o){return"/"+o},pe={},Ae=function(e,t,n){let r=Promise.resolve();if(t&&t.length>0){let c=function(d){return Promise.all(d.map(a=>Promise.resolve(a).then(u=>({status:"fulfilled",value:u}),u=>({status:"rejected",reason:u}))))};document.getElementsByTagName("link");const l=document.querySelector("meta[property=csp-nonce]"),i=l?.nonce||l?.getAttribute("nonce");r=c(t.map(d=>{if(d=qe(d),d in pe)return;pe[d]=!0;const a=d.endsWith(".css"),u=a?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${d}"]${u}`))return;const m=document.createElement("link");if(m.rel=a?"stylesheet":je,a||(m.as="script"),m.crossOrigin="",m.href=d,i&&m.setAttribute("nonce",i),document.head.appendChild(m),a)return new Promise((f,h)=>{m.addEventListener("load",f),m.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${d}`)))})}))}function s(l){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=l,window.dispatchEvent(i),!i.defaultPrevented)throw l}return r.then(l=>{for(const i of l||[])i.status==="rejected"&&s(i.reason);return e().catch(s)})},ne={async delay(o){if(typeof o!="number"||o<0)throw new Error("Delay must be a non-negative number");return new Promise(e=>setTimeout(e,o))},applyStyles(o,e){if(!o||!o.style){console.error("Invalid element provided to applyStyles");return}typeof e=="string"?o.style.cssText=e:typeof e=="object"&&e!==null&&Object.assign(o.style,e)},setupScrolling(){const o=document.getElementById("viewer-grid");return o?(this.enableViewerGridScroll(o),!0):(console.warn("Viewer grid element not found"),!1)},enableViewerGridScroll(o){if(!o){console.warn("No viewer grid element provided");return}o.style.paddingBottom="8px",o.style.overflow===""&&(o.style.overflow="auto")}},O={createElement(o,e={},t={}){const n=globalThis.document.createElement(o);return Object.entries(e).forEach(([r,s])=>{s!=null&&(n[r]=s)}),Object.keys(t).length>0&&ne.applyStyles(n,t),n},createInputField(o,e){if(!o||!o.name||!e)return console.error("Invalid field configuration or prefix"),this.createElement("div");const t=this.createElement("div",{className:"input-group"}),n=`${e}-${o.name.replace(/\s+/g,"-").toLowerCase()}`,r=this.createElement("label",{textContent:o.name+":",htmlFor:n},{display:"block",marginBottom:"3px",fontSize:"12px"}),s={type:o.type||"text",value:o.value||"",id:n};o.step&&(s.step=o.step),o.placeholder&&(s.placeholder=o.placeholder),o.required&&(s.required=!0);const l=this.createElement("input",s,{width:"100%",padding:"6px",fontSize:"12px",borderRadius:"4px",border:"1px solid #ccc"});return t.appendChild(r),t.appendChild(l),t},createInputRow(o,e){if(!Array.isArray(o)||o.length===0)return console.error("Invalid fieldsInRow array"),this.createElement("div");const t=this.createElement("div",{},{display:"flex",gap:"10px",marginBottom:"10px"});return o.forEach(n=>{const r=this.createInputField(n,e);ne.applyStyles(r,{flex:"1",minWidth:"0"}),t.appendChild(r)}),t},createParamsGrid(o,e){if(!Array.isArray(o)||o.length===0)return console.error("Invalid params array"),this.createElement("div");const t=this.createElement("div",{},{display:"grid",gridTemplateColumns:"repeat(2, 1fr)",gridTemplateRows:"repeat(2, auto)",gap:"10px",marginBottom:"20px"});return o.forEach(n=>{const r=this.createInputField(n,e);t.appendChild(r)}),t},createActionButton(o,e,t={}){if(!o||!e)return console.error("Button text and id are required"),this.createElement("button");const n={textContent:o,id:e,className:"action-button",type:t.type||"button"};return t.disabled&&(n.disabled=!0),this.createElement("button",n)},createSpacer(o="15px"){return this.createElement("div",{},{height:o})},createPanel(o,e={}){const{useMargin:t=!0,enableDragDrop:n=!1}=e,r=String(o||`panel-${Math.floor(Math.random()*1e3)}`),s=`niivue-container-${r.replace("panel-","")}`,l={width:t?"calc(100% - 20px)":"100%",height:t?"calc(100% - 20px)":"100%",overflow:"hidden",backgroundColor:"#ffffff",position:"relative",boxSizing:"border-box",display:"flex",flexDirection:"column"};t&&(l.margin="10px");const i=this.createElement("div",{id:r,className:"viewer-panel"},l),c=this.createElement("div",{className:"viewer-section"},{width:"100%",flex:"1",minHeight:"0",position:"relative",overflow:"hidden",backgroundColor:"#f8f9fa",display:"block"}),d=this.createElement("div",{id:s,className:"niivue-container"},{width:"100%",height:"100%",position:"relative",overflow:"hidden"});return c.appendChild(d),i.appendChild(c),n&&Ae(async()=>{const{addDragDropToPanel:a}=await import("./dragDrop-x4zc2jpM.js");return{addDragDropToPanel:a}},[]).then(({addDragDropToPanel:a})=>{a(i,r)}).catch(a=>{console.error("Failed to load drag and drop module:",a)}),{panel:i,container:d}}};function Me(o,e={}){const{columns:t="repeat(2, 1fr)",rows:n="repeat(2, 1fr)",gap:r="10px"}=e;if(!o)return console.error("Viewer grid not found"),null;o.innerHTML="",o.style.display="flex",o.style.flexDirection="column",o.style.height="100%",o.style.width="100%",o.style.flex="1";const s=document.createElement("div");return s.style.display="grid",s.style.gridTemplateColumns=t,s.style.gridTemplateRows=n,s.style.gap=r,s.style.width="100%",s.style.height="100%",s.style.padding="10px",s.style.boxSizing="border-box",s.style.overflow="hidden",o.appendChild(s),s}function W(){k&&k.clear(),R&&R.clear();const o=document.getElementById("viewer-grid");return o?(o.innerHTML="",o):(console.error("Viewer grid element not found"),null)}async function de(o,e={}){const{title:t,enableDragDrop:n=!1,useMargin:r=!1}=e,{panel:s,container:l}=O.createPanel(o,{enableDragDrop:n,useMargin:r});if(t){const i=document.createElement("div");i.className="panel-header",i.textContent=t,s.prepend(i)}return{panel:s,container:l}}async function ue(o={}){const e=W();if(!e)throw new Error("Failed to reset viewer grid");const t=Me(e,{columns:"1fr",rows:"1fr"});if(!t)throw new Error("Failed to create grid container.");const n={title:null,useMargin:!1,enableDragDrop:!0,...o},r=await de("panel-1",n);if(!r||!r.panel)throw new Error("Failed to create panel.");return t.appendChild(r.panel),r}async function Te(o={},e={}){const t=W();if(!t)throw new Error("Failed to reset viewer grid");const n={columns:"repeat(2, 1fr)",rows:"repeat(2, 1fr)",gap:"10px",...o},r=Me(t,n);if(!r)throw new Error("Failed to create grid container.");const s=[],l={title:null,useMargin:!1,enableDragDrop:!0,...e};for(let i=0;i<4;i++){const c=`panel-${i+1}`,d=await de(c,l);d&&(r.appendChild(d.panel),s.push(d))}return s}class Ge{constructor(){this.registry=new Map,this.viewers=new Map,this.lastLoggedPositions=new Map,this.debounceDelay=200,this.enableSyncVerification=!1,this.coordsAreEqual=(e,t,n=1e-5)=>{if(!e||!t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(Math.abs(e[r]-t[r])>n)return!1;return!0}}get(e){return this.registry.get(e)||null}async findAvailablePanel(){const e=document.getElementById("viewer-grid");if(!e)return console.error("viewer-grid not found!"),null;const t=e.querySelectorAll(".panel");for(const n of t){const r=n.querySelector(".niivue-container");if(r&&!this.registry.has(r.id))return n}if(window.uiUtils&&typeof window.uiUtils.createPanel=="function"){console.log("No available panel found, creating a new one.");const n=await de(`panel-${this.views.length+1}`,{enableDragDrop:!0});return n&&n.panel?(e.appendChild(n.panel),n.panel):null}return null}has(e){return this.registry.has(e)}synchronizeViewers(){const e=Array.from(this.registry.entries()).filter(([r,s])=>!!s);if(e.length<2)return;console.log(`Creating a bidirectional sync network among ${e.length} viewers`),e.forEach(([r,s])=>{s.id||(s.id=r)});const t=e.filter(([r,s])=>s.sliceType!==s.sliceTypeRender);console.log(`Found ${t.length} syncable viewers (excluding 3D render views)`);const n=this;for(let r=0;r<t.length;r++){const[s,l]=t[r],i=t.filter((c,d)=>d!==r).map(([c,d])=>d);if(l.volumes&&l.volumes.length>0?n.addBoundsCheckingToViewer(l):console.warn(`Viewer ${s} has no volumes loaded, skipping bounds checking`),l.syncWith(i),console.log(`Viewer ${s} synced with ${i.length} other viewers`),l.volumes&&l.volumes.length>0&&typeof l.volumes[0].frame4D<"u"&&l.volumes[0].nFrame4D>1){const c=(d,a)=>{i.forEach(u=>{try{if(!u||!u.volumes||!u.volumes[0])return;const m=u.volumes[0];typeof m.nFrame4D=="number"&&m.nFrame4D>1&&typeof m.frame4D=="number"&&a>=0&&a<m.nFrame4D&&m.frame4D!==a&&u.setFrame4D(m.id,a)}catch(m){console.error("Error in frame sync handler:",m)}})};l.onFrameChange=c}}console.log(`Bidirectional sync network established among ${t.length} syncable viewers`)}getVolumeIdForContainer(e){const t=typeof e=="string"?document.getElementById(e):e;if(!t)return console.warn("getVolumeIdForContainer: Panel element not found"),null;const n=t.querySelector(".niivue-container");if(!n)return console.warn("getVolumeIdForContainer: .niivue-container not found in panel"),null;if(!this.viewers||typeof this.viewers.entries!="function")return console.warn("ViewRegistry.viewers is not properly initialized"),null;for(const[r,s]of this.viewers.entries())if(Array.isArray(s)){for(const l of s)if(l&&l.container===n)return r}return null}async load(e,t,n={}){await fe();const r=typeof t=="string"?document.getElementById(t):t;if(!r)throw new Error("Panel container not found");const s=r.querySelector(".niivue-container");if(!s)throw new Error("NiiVue container (.niivue-container) not found within the panel");const l=r.id,i=Array.isArray(e)?e:[e],c=Array.isArray(n)?n:i.map(()=>({}));if(!Array.isArray(n)&&typeof n=="object"&&i.forEach((a,u)=>{c[u]={...n}}),c.length!==i.length)throw new Error("If providing an array of options, it must match the length of volumeIds array");this.viewers||(console.log("Initializing viewers map"),this.viewers=new Map);const d=a=>{a.innerHTML="";let u=this._findExistingCanvas(a);return u||(u=document.createElement("canvas"),u.width=a.clientWidth||400,u.height=a.clientHeight||400,u.style.width="100%",u.style.height="100%",u.style.background="none",u.setAttribute("data-niivue","true"),a.appendChild(u)),u};try{if(this.registry.has(l)){const w=this.registry.get(l);w&&typeof w.destroy=="function"&&w.destroy(),this.registry.delete(l)}const a=d(s),u={loadingText:null,show3Dcrosshair:!0,backColor:[248/255,248/255,248/255,1],isNearestInterpolation:!0,hideControlBar:!0,dragAndDropEnabled:!1,crosshairColor:[1,0,0,.5],isRadiologicalConvention:!0,isWorldSpace:!0,isResizeCanvas:!0,onImageLoaded:function(){const w=this,v=document.getElementById(l);if(!v){console.warn(`Container ${l} not found`);return}if(!v.querySelector(".control-section"))try{const b=Array.isArray(n)?n[0]:n;if(b&&b.controlSection===!1){console.log(`Skipping control section for ${l} as per options`);return}const D={...He.controls,...b,showVoxelCoordinates:!0,showWorldCoordinates:!0,showValue:!0};console.log(`Creating control section for ${l}`);const A=R.createControlSection(l,w,D);A&&(v.appendChild(A),console.log(`Control section created for ${l}`))}catch(b){console.error("Error creating control section:",b)}}},m=new window.niivue.Niivue(u),f=this,h=function(w){if(!w)return;const v=Date.now(),b=`[${new Date(v).toISOString()}] [${l}]`,D=f.lastLoggedPositions.get(l)||{mm:null,time:0};w.mm&&D.mm&&f.coordsAreEqual(Array.from(w.mm),D.mm)&&v-D.time<f.debounceDelay||(w.mm&&console.log(`${b} MM: [${Array.from(w.mm).map(E=>E.toFixed(2)).join(", ")}]`),w.vox&&console.log(`${b} Voxel: [${Array.from(w.vox).map(E=>Math.round(E)).join(", ")}]`),typeof w.frame<"u"&&console.log(`${b} Frame: ${w.frame}`),w.mm&&f.lastLoggedPositions.set(l,{mm:Array.from(w.mm),time:v})),f.enableSyncVerification&&f.verifySynchronization(this,w,v)};m.containerId=l,m.opts.isDebug=!0,m.onLocationChange=(function(w){try{h.call(this,w)}catch(v){console.error("Error in location change handler:",v)}}).bind(m),setTimeout(()=>{R.setupLocationHandler(l,m)},0),m.attachToCanvas(a),this.registry.set(l,m);const g=(c[0]||{}).sliceType||"axial";switch(m.setIsOrientationTextVisible(!1),m.setRadiologicalConvention(!0),g.toLowerCase()){case"axial":m.setSliceType(m.sliceTypeAxial);break;case"coronal":m.setSliceType(m.sliceTypeCoronal);break;case"sagittal":m.setSliceType(m.sliceTypeSagittal);break;case"render":case"3d":case"volume":m.setSliceType(m.sliceTypeRender);break;case"multi":case"multiplanar":m.setSliceType(m.sliceTypeMultiplanar);break;default:m.setSliceType(m.sliceTypeAxial)}const y=await Promise.all(i.map(async(w,v)=>{const b=N.getBuffer(w);if(!b||b.byteLength===0)throw new Error(`ArrayBuffer for volume ${w} is empty or invalid`);const E=`${w}.${!1?"nii.gz":"nii"}`,F={...{colormap:"gray",opacity:1,visible:!0},...c[v]};return{url:b,name:E,frame:0,interpolation:0,...F}}));return await m.loadVolumes(y),i.forEach((w,v)=>{const b={niivue:m,container:s,volumeId:w,options:c[v]};console.log(`Creating viewer entry for volume ${w} in container ${s.id}:`,{containerId:s.id,containerTagName:s.tagName,containerSize:`${s.clientWidth}x${s.clientHeight}`,volumeIndex:v}),this.viewers.has(w)||this.viewers.set(w,[]),this.viewers.get(w).push(b)}),console.log(`Associated ${i.length} volume(s) with container ${l}`),this.synchronizeViewersRobust({sync2d:!0,sync3d:!0,syncFrames:!0,validateBounds:!0}),m}catch(a){throw console.error("Error loading volumes:",a),a}}async add(e,t,n={}){await fe();const r=typeof t=="string"?document.getElementById(t):t;if(!r)throw new Error("Panel container not found");const s=r.id,l=this.getViewer(s);if(!l||l.volumes.length===0)return console.log(`No base image in ${s}, loading image...`),this.load(e,t,n);const i=N.getVolume(e);if(!i)throw new Error(`Volume ${e} not found in volumeManager.`);console.log(`Adding overlay ${i.name||e} to panel ${s}`);const c=i.data||i.buffer;if(!c)throw new Error(`No data or buffer found for volume ${e}`);console.log(`Adding overlay ${i.name} to panel ${s}`);try{const d=(i.name||e).endsWith(".nii")?i.name||e:`${i.name||e}.nii`;console.log("Loading volume with filename:",d);const a=new File([c],d,{type:"application/octet-stream"}),u={...n,isAdd:!0,url:d,colormap:"red",opacity:n.opacity||.7,cal_min:n.cal_min,cal_max:n.cal_max,colorbarVisible:!1,useNegativeCmap:!1,isOverlay:!0,frame4D:0,volume:{hdr:null,img:null}};return console.log("Loading with options:",u),await l.loadFromFile(a,u),l.updateGLVolume(),l}catch(d){throw console.error("Error loading volume from file:",d),d}}getViewer(e){return this.registry.get(e)||null}verifySynchronization(e,t,n){if(!e){console.warn("No source viewer provided for synchronization check.");return}if(!t){console.warn("No event data provided for synchronization check.");return}const r=.5;if(t&&typeof t.frame<"u"&&t.mm&&this.lastLoggedMm&&this.coordsAreEqual(Array.from(t.mm),this.lastLoggedMm)&&n-this.lastLogTime<500)return;if(e&&!e.id){for(const[i,c]of this.registry.entries())if(c===e){e.id=i;break}}const l=e&&e.id?e.id:"unknown";if(console.log(`[${n}] LocationChange event from viewer ID: ${l}`),t&&t.mm&&console.log(`  Source event position: [${t.mm[0].toFixed(2)}, ${t.mm[1].toFixed(2)}, ${t.mm[2].toFixed(2)}] mm`),t&&typeof t.frame<"u"&&console.log(`  Source viewer frame: ${t.frame}`),this.registry){console.log("  --- SYNC VERIFICATION - All viewer positions ---");const i=Array.from(this.registry.entries()).filter(([u,m])=>!!m);let c=0,d=0,a=[];if(i.forEach(([u,m])=>{const f=u||`viewer-${i.indexOf([u,m])}`,h=m.sliceType===m.sliceTypeRender;let p="unknown",g=!1,y=null;try{m.scene&&m.scene.crosshairPos&&(typeof m.frac2mm=="function"?(y=m.frac2mm(m.scene.crosshairPos),p=`[${y[0].toFixed(2)}, ${y[1].toFixed(2)}, ${y[2].toFixed(2)}] mm`,h?p+=" (render view - not synced)":(d++,a.push({viewerId:f,position:y}),g=!0)):p=`[${m.scene.crosshairPos[0].toFixed(3)}, ${m.scene.crosshairPos[1].toFixed(3)}, ${m.scene.crosshairPos[2].toFixed(3)}] (fractional)`)}catch(A){p=`Error: ${A.message}`}let w="N/A",v=!1;m.volumes&&m.volumes.length>0&&typeof m.volumes[0].frame4D<"u"&&(w=m.volumes[0].frame4D,t&&typeof t.frame<"u"&&m.volumes[0].frame4D===t.frame&&(v=!0));const b=g?"✓":h?"R":"✗",D=v?"✓":typeof t.frame>"u"?"-":"✗";console.log(`  ${b} Viewer ${f}: position ${p}, frame: ${w} ${D}${h?" (3D render)":""}`)}),a.length>1){const u=a[0].position;if(c=a.filter(f=>f.position.every((h,p)=>Math.abs(h-u[p])<r)).length,c===a.length)console.log(`  Cross-viewer sync: ✓ All ${a.length} viewers synchronized with each other`);else if(console.log(`  Cross-viewer sync: ✗ Only ${c}/${a.length} viewers synchronized with each other`),a.length===2){const f=a[0].position,h=a[1].position,p=[Math.abs(f[0]-h[0]),Math.abs(f[1]-h[1]),Math.abs(f[2]-h[2])];console.log(`  Position difference: [${p[0].toFixed(2)}, ${p[1].toFixed(2)}, ${p[2].toFixed(2)}] mm`)}}else a.length===1&&(c=1);console.log(`  Synchronization status: ${c}/${d} syncable viewers in sync`),console.log("  -------------------------------------------")}}_findExistingCanvas(e){const t=e.querySelector("canvas[data-niivue]");if(t)return t;const n=e.querySelectorAll("canvas");return n.length===1?n[0]:null}addBoundsCheckingToViewer(e){if(!e)return;if(e._boundsCheckingApplied){console.log(`Bounds checking already applied to viewer ${e.containerId||"unknown"}`);return}e._boundsCheckingApplied=!0;const t=e.onLocationChange,n=e.setVoxelPosition,r=e.setScene,s=1e3;e._boundsTracking||(e._boundsTracking={lastBoundsViolation:null,lastBoundsViolationTime:0});const l=(i,c)=>{if(!i.volumes||i.volumes.length===0||!c)return c;try{const d=i.volumes[0];if(!d.dims||d.dims.length<4)return c;let a;if(typeof d.mm2vox=="function")a=d.mm2vox(c);else if(typeof i.mm2frac=="function"&&typeof i.frac2vox=="function"){const g=i.mm2frac(c);g&&(a=[g[0]*d.dims[1],g[1]*d.dims[2],g[2]*d.dims[3]])}else return c;if(!a||a.length<3)return c;const u=d.dims,m=u[1]-1,f=u[2]-1,h=u[3]-1;if(a[0]<0||a[0]>m||a[1]<0||a[1]>f||a[2]<0||a[2]>h){const g=[Math.max(0,Math.min(Math.round(a[0]),m)),Math.max(0,Math.min(Math.round(a[1]),f)),Math.max(0,Math.min(Math.round(a[2]),h))];let y;if(typeof d.vox2mm=="function")y=d.vox2mm(g,d.matRAS);else if(typeof i.frac2mm=="function"){const D=[g[0]/u[1],g[1]/u[2],g[2]/u[3]];y=i.frac2mm(D)}else return c;const w=Date.now(),v=`${a[0].toFixed(1)},${a[1].toFixed(1)},${a[2].toFixed(1)}`,b=i._boundsTracking;return(b.lastBoundsViolation!==v||w-b.lastBoundsViolationTime>s)&&(console.warn(`Clamping out-of-bounds coordinates in viewer ${i.containerId||"unknown"}: [${a[0].toFixed(1)}, ${a[1].toFixed(1)}, ${a[2].toFixed(1)}] -> [${g[0]}, ${g[1]}, ${g[2]}] (max: [${m}, ${f}, ${h}])`),b.lastBoundsViolation=v,b.lastBoundsViolationTime=w),y}return c}catch(d){return console.warn("Error in validateWorldCoordinates:",d),c}};if(e.onLocationChange=function(i){if(!i){t&&t.call(this,i);return}try{if(i.mm&&i.mm.length>=3){const c=l(this,i.mm);if(c!==i.mm){let d=i.vox;if(typeof this.volumes[0].mm2vox=="function")d=this.volumes[0].mm2vox(c);else if(typeof this.mm2frac=="function"&&this.volumes&&this.volumes[0]){const a=this.mm2frac(c);if(a){const u=this.volumes[0].dims;d=[a[0]*u[1],a[1]*u[2],a[2]*u[3]]}}i={...i,mm:c,vox:d}}}t&&t.call(this,i)}catch(c){console.error("Error in bounds-checked onLocationChange:",c),t&&t.call(this,i)}},n&&typeof n=="function"&&(e.setVoxelPosition=function(i){if(!i||!this.volumes||this.volumes.length===0)return n.call(this,i);try{const d=this.volumes[0].dims;if(d&&d.length>=4){const a=d[1]-1,u=d[2]-1,m=d[3]-1,f=[Math.max(0,Math.min(Math.round(i[0]),a)),Math.max(0,Math.min(Math.round(i[1]),u)),Math.max(0,Math.min(Math.round(i[2]),m))];return n.call(this,f)}}catch(c){console.warn("Error in bounds-checked setVoxelPosition:",c)}return n.call(this,i)}),r&&typeof r=="function"&&(e.setScene=function(i){if(i&&i.crosshairPos&&this.volumes&&this.volumes.length>0)try{const c=this.frac2mm(i.crosshairPos),d=l(this,c);d!==c&&(i={...i,crosshairPos:this.mm2frac(d)})}catch(c){console.warn("Error validating crosshair position in setScene:",c)}return r.call(this,i)}),e.scene&&e.scene.crosshairPos){const i=e.scene.crosshairPos,c=new Proxy(i,{set:function(d,a,u){if(typeof a=="string"&&["0","1","2"].includes(a))try{if(e.volumes&&e.volumes.length>0){const m=e.volumes[0],f=m.dims;if(f&&f.length>=4){const h=parseInt(a);u=Math.max(0,Math.min(u,1));const p=Array.from(d);p[h]=u;const g=e.frac2mm(p),y=m.mm2vox(g);if(y){const w=f[h+1]-1;(y[h]<0||y[h]>w)&&(u=Math.max(0,Math.min(Math.round(y[h]),w))/f[h+1])}}}}catch{}return d[a]=u,!0}});e.scene.crosshairPos=c}console.log(`Comprehensive bounds checking applied to viewer ${e.containerId||"unknown"}`)}remove(e){if(typeof e!="string"||!e.trim())throw new Error("containerId must be a non-empty string");if(!this.registry.has(e))return console.warn(`Container ${e} not found in registry`),!1;try{const t=this.registry.get(e);if(!t)return console.warn(`No NiiVue instance found for container: ${e}`),this.registry.delete(e),!1;try{typeof t.destroy=="function"&&t.destroy();const n=document.getElementById(e);n&&n.querySelectorAll("canvas[data-niivue]").forEach(s=>{s.parentNode&&s.parentNode.removeChild(s)})}catch(n){console.error(`Error during cleanup for container ${e}:`,n)}this.registry.delete(e);for(const[n,r]of this.viewers.entries()){const s=r.filter(l=>l.container.id!==e);s.length===0?this.viewers.delete(n):s.length!==r.length&&this.viewers.set(n,s)}return console.log("Successfully removed NiiVue instance from container:",e),!0}catch(t){throw console.error(`Failed to remove container ${e}:`,t),new Error(`Failed to remove container ${e}: ${t.message}`)}}clear(){for(const[e,t]of this.registry.entries())try{typeof t.destroy=="function"&&t.destroy();const n=t.gl.canvas;if(n){const r=n.getContext("webgl")||n.getContext("experimental-webgl");if(r){const l=r.getExtension("WEBGL_lose_context");l&&l.loseContext()}const s=n.cloneNode(!1);n.parentNode?.replaceChild(s,n)}}catch(n){console.warn("Error cleaning up Niivue instance:",n)}window.gc&&window.gc(),this.registry.clear(),this.viewers.clear(),console.log("All Niivue instances and viewers cleared")}get count(){return this.registry.size}updateOptions(e,t={}){if(!this.registry.has(e))return!1;const n=this.registry.get(e);return t.interpolation!==void 0&&n.setInterpolation(t.interpolation),t.colormap!==void 0&&n.volumes.length>0&&(n.volumes[0].colormap=n.colormaps[t.colormap]),t.opacity!==void 0&&n.volumes.length>0&&(n.volumes[0].opacity=t.opacity),n.updateGLVolume(),!0}synchronizeViewers2(){const e=Array.from(this.registry.entries()).filter(([n,r])=>!!r);if(e.length<2)return;console.log(`Creating broadcastTo sync network among ${e.length} viewers`),e.forEach(([n,r])=>{r.id||(r.id=n)});const t=e.filter(([n,r])=>r.sliceType!==r.sliceTypeRender);console.log(`Found ${t.length} syncable viewers for broadcastTo sync`);for(let n=0;n<t.length;n++){const[r,s]=t[n],l=t.filter((i,c)=>c!==n).map(([i,c])=>c);s.volumes&&s.volumes.length>0?this.addBoundsCheckingToViewer(s):console.warn(`Viewer ${r} has no volumes loaded, skipping bounds checking`);try{s.broadcastTo(l,{"2d":!0,"3d":!0}),console.log(`Viewer ${r} broadcasting to ${l.length} other viewers`)}catch(i){console.error(`Error setting up broadcastTo for viewer ${r}:`,i),console.log(`Falling back to syncWith for viewer ${r}`),s.syncWith(l)}if(s.volumes&&s.volumes.length>0&&typeof s.volumes[0].frame4D<"u"&&s.volumes[0].nFrame4D>1){const i=(c,d)=>{l.forEach(a=>{try{if(!a||!a.volumes||!a.volumes[0])return;const u=a.volumes[0];typeof u.nFrame4D=="number"&&u.nFrame4D>1&&typeof u.frame4D=="number"&&d>=0&&d<u.nFrame4D&&u.frame4D!==d&&a.setFrame4D(u.id,d)}catch(u){console.error("Error in frame sync handler:",u)}})};s.onFrameChange=i}}console.log(`BroadcastTo sync network established among ${t.length} syncable viewers`)}synchronizeViewersAdvanced(e={}){const{sync2d:t=!0,sync3d:n=!0,syncFrames:r=!0}=e,s=Array.from(this.registry.entries()).filter(([i,c])=>!!c);if(s.length<2)return;console.log(`Creating configurable broadcastTo sync network among ${s.length} viewers`),console.log(`Sync options: 2D=${t}, 3D=${n}, Frames=${r}`),s.forEach(([i,c])=>{c.id||(c.id=i)});let l=s;n||(l=s.filter(([i,c])=>c.sliceType!==c.sliceTypeRender)),console.log(`Found ${l.length} syncable viewers for configurable sync`);for(let i=0;i<l.length;i++){const[c,d]=l[i],a=l.filter((u,m)=>m!==i).map(([u,m])=>m);d.volumes&&d.volumes.length>0?this.addBoundsCheckingToViewer(d):console.warn(`Viewer ${c} has no volumes loaded, skipping bounds checking`);try{d.broadcastTo(a,{"2d":t,"3d":n}),console.log(`Viewer ${c} broadcasting to ${a.length} other viewers (2D: ${t}, 3D: ${n})`)}catch(u){console.error(`Error setting up broadcastTo for viewer ${c}:`,u),console.log(`Falling back to syncWith for viewer ${c}`),d.syncWith(a)}if(r&&d.volumes&&d.volumes.length>0&&typeof d.volumes[0].frame4D<"u"&&d.volumes[0].nFrame4D>1){const u=(m,f)=>{a.forEach(h=>{try{if(!h||!h.volumes||!h.volumes[0])return;const p=h.volumes[0];typeof p.nFrame4D=="number"&&p.nFrame4D>1&&typeof p.frame4D=="number"&&f>=0&&f<p.nFrame4D&&p.frame4D!==f&&h.setFrame4D(p.id,f)}catch(p){console.error("Error in frame sync handler:",p)}})};d.onFrameChange=u}}console.log(`Configurable broadcastTo sync network established among ${l.length} syncable viewers`)}disableSynchronization(){const e=Array.from(this.registry.entries()).filter(([t,n])=>!!n);console.log(`Disabling synchronization for ${e.length} viewers`),e.forEach(([t,n])=>{try{n.broadcastTo([],{"2d":!1,"3d":!1}),n.onFrameChange&&(n.onFrameChange=null),console.log(`Synchronization disabled for viewer ${t}`)}catch(r){console.error(`Error disabling synchronization for viewer ${t}:`,r)}}),console.log("Synchronization disabled for all viewers")}synchronizeViewersRobust(e={}){const{sync2d:t=!0,sync3d:n=!0,syncFrames:r=!0,validateBounds:s=!0}=e,l=Array.from(this.registry.entries()).filter(([c,d])=>!!d);if(l.length<2)return;console.log(`Creating robust sync network among ${l.length} viewers with bounds validation`),console.log(`Sync options: 2D=${t}, 3D=${n}, Frames=${r}, ValidateBounds=${s}`),l.forEach(([c,d])=>{d.id||(d.id=c)});let i=l;n||(i=l.filter(([c,d])=>d.sliceType!==d.sliceTypeRender)),console.log(`Found ${i.length} syncable viewers for robust sync`);for(let c=0;c<i.length;c++){const[d,a]=i[c],u=i.filter((h,p)=>p!==c).map(([h,p])=>p),m=a.onLocationChange;a.volumes&&a.volumes.length>0&&this.addBoundsCheckingToViewer(a);const f=a.onLocationChange;if(a.onLocationChange=function(h){if(!h){f&&f.call(this,h);return}try{if(f&&f.call(this,h),h._syncTriggered)return;if(s&&h.mm&&h.mm.length>=3)u.forEach(p=>{try{if(!p.volumes||p.volumes.length===0)return;const g=p.volumes[0];let y;if(typeof g.mm2vox=="function")y=g.mm2vox(h.mm);else if(typeof p.mm2frac=="function"){const v=p.mm2frac(h.mm);if(v&&g.dims){const b=g.dims;y=[v[0]*b[1],v[1]*b[2],v[2]*b[3]]}}if(!y)return;const w=g.dims;if(w&&w.length>=4){const v=w[1]-1,b=w[2]-1,D=w[3]-1;if(y[0]>=0&&y[0]<=v&&y[1]>=0&&y[1]<=b&&y[2]>=0&&y[2]<=D){if(t&&p.sliceType!==p.sliceTypeRender){const E=p.mm2frac(h.mm);if(E){p.scene.crosshairPos=E,p.drawScene();const x=p._originalLocationHandler;x&&x.call(p,{mm:h.mm,vox:y,frac:E,frame:h.frame,_syncTriggered:!0});try{R.updateStatusPanel(p.containerId,{mm:h.mm,vox:y,frac:E,frame:h.frame})}catch(F){console.warn("Error updating status panel for synchronized viewer:",F)}}}}else{const E=[Math.max(0,Math.min(Math.round(y[0]),v)),Math.max(0,Math.min(Math.round(y[1]),b)),Math.max(0,Math.min(Math.round(y[2]),D))];let x;if(typeof g.vox2mm=="function")x=g.vox2mm(E,g.matRAS);else if(typeof p.frac2mm=="function"){const F=[E[0]/w[1],E[1]/w[2],E[2]/w[3]];x=p.frac2mm(F)}if(x&&t&&p.sliceType!==p.sliceTypeRender){const F=p.mm2frac(x);if(F){p.scene.crosshairPos=F,p.drawScene();const S=p._originalLocationHandler;S&&S.call(p,{mm:x,vox:E,frac:F,frame:h.frame,_syncTriggered:!0});try{R.updateStatusPanel(p.containerId,{mm:x,vox:E,frac:F,frame:h.frame})}catch(T){console.warn("Error updating status panel for synchronized viewer:",T)}}}}}}catch(g){console.warn(`Error syncing to viewer ${p.containerId||"unknown"}:`,g)}});else try{this.broadcastTo(u,{"2d":t,"3d":n})}catch(p){console.warn(`Error using broadcastTo for viewer ${d}:`,p),this.syncWith(u)}}catch(p){console.error("Error in robust sync handler:",p)}},a._originalLocationHandler=m,r&&a.volumes&&a.volumes.length>0&&typeof a.volumes[0].frame4D<"u"&&a.volumes[0].nFrame4D>1){const h=(p,g)=>{u.forEach(y=>{try{if(!y||!y.volumes||!y.volumes[0])return;const w=y.volumes[0];typeof w.nFrame4D=="number"&&w.nFrame4D>1&&typeof w.frame4D=="number"&&g>=0&&g<w.nFrame4D&&w.frame4D!==g&&y.setFrame4D(w.id,g)}catch(w){console.error("Error in robust frame sync handler:",w)}})};a.onFrameChange=h}}console.log(`Robust sync network established among ${i.length} syncable viewers`)}}const k=new Ge;async function Ue(o,e,t={}){const{sliceType:n="axial",...r}=t;try{let s,l;if(typeof e=="string"){if(s=document.getElementById(e),!s)throw new Error(`Panel with ID '${e}' not found`)}else if(e instanceof HTMLElement)s=e.classList.contains("viewer-panel")?e:e.closest(".viewer-panel"),s||(s=e);else throw new Error("Invalid target. Expected an HTMLElement or panel ID string.");s.id||(s.id=`panel-${Date.now()}`);const i=s.id;if(l=s.querySelector(".niivue-container"),!l){l=document.createElement("div"),l.className="niivue-container",l.style.width="100%",l.style.height="100%";const d=s.querySelector(".viewer-section");d?d.appendChild(l):s.appendChild(l)}const c=await N.addFromFile(o,i);return await k.load(c,s,{sliceType:n,...r}),c}catch(s){throw console.error("Error loading NIfTI file:",s),s}}async function We(o,e,t={}){const{sliceType:n="axial",...r}=t;try{const s=Array.isArray(o)?o:[o];let l,i;if(typeof e=="string"){if(l=document.getElementById(e),!l)throw new Error(`Panel with ID '${e}' not found`)}else if(e instanceof HTMLElement)l=e.classList.contains("viewer-panel")?e:e.closest(".viewer-panel"),l||(l=e);else throw new Error("Invalid target. Expected an HTMLElement or panel ID string.");l.id||(l.id=`panel-${Date.now()}`);const c=l.id;if(i=l.querySelector(".niivue-container"),!i){i=document.createElement("div"),i.className="niivue-container",i.style.width="100%",i.style.height="100%";const a=l.querySelector(".viewer-section");a?a.appendChild(i):l.appendChild(i)}const d=await N.addFromDICOM(s,c);return await k.load(d,l,{sliceType:n,...r}),d}catch(s){throw console.error("Error loading DICOM files:",s),s}}function Pe(o,e,t=!1,n,r){if((!Array.isArray(o)||!o.length)&&console.warn("No acceptTypes provided, allowing all file types"),typeof n!="function")throw new Error("Callback must be a function");const s=document.createElement("input");s.type="file",o&&o.length>0&&(s.accept=o.join(","));const l="webkitdirectory"in s||"mozdirectory"in s||"msdirectory"in s;t&&l?(s.webkitdirectory=!0,s.mozdirectory=!0,s.msdirectory=!0,s.directory=!0,s.multiple=!0):s.multiple=e,r&&(s.id=r),s.style.display="none",document.body.appendChild(s);const i=()=>{try{s.files&&s.files.length>0?n(Array.from(s.files)):n(null)}catch(a){console.error("Error handling file selection:",a),n(null,a)}finally{s.removeEventListener("change",i),document.body.contains(s)&&document.body.removeChild(s)}},c=()=>{setTimeout(()=>{document.activeElement!==s&&(n(null),d())},300)},d=()=>{window.removeEventListener("blur",c),document.body.contains(s)&&document.body.removeChild(s)};return s.addEventListener("change",i),window.addEventListener("blur",c),s.click(),d}async function Xe(o){try{const e=await ue({title:null});await k.load(o,e.panel.id,{sliceType:"multiplanar",colormap:"gray",opacity:1})}catch(e){console.error(`Error displaying volume ${o}:`,e),alert(`Failed to display volume: ${e.message}`)}}const Ze={async loadSampleImage(o){if(!o||!o.id){console.error("loadSampleImage requires a valid panel argument.");return}const e=o.id,t="./data/sample-image.nii.gz";try{const n=await N.addFromFilename(t,e);if(n){await k.load(n,e,{sliceType:"multiplanar",colormap:"gray",opacity:1});const r=await N.getVolumeStatistics(n);console.log("Volume Statistics:",r)}}catch(n){console.error("Error loading sample image:",n),alert("Failed to load sample image. Please check the console for details.")}},async listVolumes(){const o=document.getElementById("viewer-grid");if(!o){console.error("Could not find the viewer-grid element.");return}try{o.innerHTML="",o.classList.remove("grid-mode");const e=[{text:"ID",width:"20%"},{text:"Geometry",width:"60%"},{text:"Actions",width:"20%"}],{container:t,tbody:n}=Be(e),r=N.getVolumeSummaries();if(r.length>0)for(const s of r)try{const l=et(s);n.appendChild(l)}catch(l){console.error(`Error creating row for volume ${s.id}:`,l)}else n.appendChild(ze("No volumes loaded.",e.length));o.appendChild(t)}catch(e){console.error("Error listing volumes:",e),o.innerHTML='<div style="padding: 20px; color: red; text-align: center;">An error occurred while displaying volumes.</div>'}}},{loadSampleImage:Qe,listVolumes:Ye}=Ze;function he(o){if(!Array.isArray(o)||o.length===0)return null;const e=[...o].sort((d,a)=>d-a),t=e.length,n=4,s=e.reduce((d,a)=>d+a,0)/t,l=e.reduce((d,a)=>d+Math.pow(a-s,2),0)/t,i=d=>{const a=Math.floor(t*d);return e[Math.min(a,t-1)]},c=t%2===0?(e[t/2-1]+e[t/2])/2:e[Math.floor(t/2)];return{mean:s.toFixed(n),stdDev:Math.sqrt(l).toFixed(n),min:e[0].toFixed(n),max:e[t-1].toFixed(n),median:c.toFixed(n),p25:i(.25).toFixed(n),p75:i(.75).toFixed(n)}}function ae(o,e={}){const t=document.createElement("td");return t.style.padding=e.padding||"12px 8px",t.style.borderBottom=e.borderBottom||"1px solid #ddd",t.style.textAlign=e.textAlign||"left",t.style.fontSize=e.fontSize||"14px",t.style.lineHeight=e.lineHeight||"1.4",t.style.verticalAlign=e.verticalAlign||"top",e.width&&(t.style.width=e.width),typeof o=="string"||typeof o=="number"?t.textContent=o:o&&t.appendChild(o),t}function Be(o,e){const t=document.createElement("div");t.style.width="100%",t.style.marginBottom="20px";const n=document.createElement("table");n.style.width="100%",n.style.borderCollapse="collapse",n.style.backgroundColor="#ffffff";const r=Ke(o);n.appendChild(r);const s=document.createElement("tbody");return n.appendChild(s),t.appendChild(n),{container:t,table:n,tbody:s}}function Ke(o){const e=document.createElement("thead"),t=document.createElement("tr");return o.forEach(n=>{const r=document.createElement("th");r.textContent=n.text,r.style.padding="10px 8px",r.style.backgroundColor="#f0f0f0",r.style.textAlign="left",r.style.fontSize="14px",r.style.fontWeight="600",r.style.borderBottom="1px solid #ddd",n.width&&(r.style.width=n.width),t.appendChild(r)}),e.appendChild(t),e}function Je(o,e,t){const n=l=>{if(!l){const c=document.createElement("div");return c.textContent="No data available",c.style.padding="20px",c.style.textAlign="center",c.style.color="#666",c}const i=document.createElement("table");i.className="stats-table",i.style.width="100%",i.style.borderCollapse="separate",i.style.borderSpacing="0 2px";for(const[c,d]of Object.entries(l)){const a=document.createElement("tr"),u=document.createElement("td");u.textContent=c.charAt(0).toUpperCase()+c.slice(1).replace(/([A-Z])/g," $1"),u.style.padding="2px 30px 2px 0",u.style.whiteSpace="nowrap",u.style.width="1%",u.style.fontSize="14px";const m=document.createElement("td");m.textContent=d,m.style.padding="2px 0",m.style.textAlign="left",m.style.width="auto",m.style.fontSize="14px",a.appendChild(u),a.appendChild(m),i.appendChild(a)}return i},r=he(t.fd1Values),s=he(t.fd2Values);try{o&&o.appendChild(n(r)),e&&e.appendChild(n(s))}catch(l){console.error("Error creating statistics tables:",l)}}function ze(o,e,t=!1){const n=document.createElement("tr"),r=document.createElement("td");return r.colSpan=e,r.textContent=o,r.style.textAlign="center",r.style.padding="20px",r.style.fontStyle="italic",t&&(r.style.color="red"),n.appendChild(r),n}function et(o){if(!o||!o.id)return console.warn("Invalid volume data provided to createVolumeTableRow"),null;const e=document.createElement("tr");e.style.borderBottom="1px solid #ddd",e.style.height="40px",e.style.fontSize="14px",e.style.lineHeight="1.4",e.style.verticalAlign="top";const t=l=>l?`${l[0]} × ${l[1]} × ${l[2]}`:"N/A",n=l=>l&&Array.isArray(l)&&l.length>=3?`${l[0].toFixed(2)} × ${l[1].toFixed(2)} × ${l[2].toFixed(2)}`:"N/A";e.appendChild(ae(o.id,{width:"20%"}));const r=`${t(o.dimensions)} | ${n(o.spacing)}`;e.appendChild(ae(r,{width:"60%"}));const s=tt(o,e);return s&&e.appendChild(s),e}function tt(o,e){if(!o||!e)return console.warn("Invalid parameters provided to createActionCell"),null;const t=ae("",{width:"20%"}),n=document.createElement("div");n.style.display="flex",n.style.gap="4px",n.style.justifyContent="flex-start";const r=(s,l)=>{const i=O.createActionButton(s,`action-${s.toLowerCase()}-${Math.random().toString(36).substr(2,9)}`);return i.classList.add("compact-action-button"),l&&(i.onclick=l),i};try{const s=r("View",()=>{Xe(o.id)}),l=r("Remove",()=>{N.removeVolume(o.id),e.remove()});n.appendChild(s),n.appendChild(l),t.appendChild(n)}catch(s){console.error("Error creating action buttons:",s),t.textContent="Error"}return t}function U(o){const e=n=>{console.warn("parseScalesString:",n),alert(n)};if(!o||!o.trim())return e('Please enter valid scales (e.g., "1,2,4,8,16", "1 2 4 8 16", or "#5")'),null;const t=o.trim();if(t.startsWith("#")){const n=parseInt(t.substring(1),10);return!isNaN(n)&&n>0?Array.from({length:n},(r,s)=>s+1):(e("Invalid format for # notation. Use #N where N is a positive integer (e.g., #5)."),null)}try{const n=t.split(/[\s,]+/).filter(r=>r.trim()!=="").map(r=>parseInt(r.trim(),10)).filter(r=>!isNaN(r)&&r>0);return n.length===0?(e("Please enter at least one valid positive scale value"),null):n}catch(n){return e("Error parsing scales: "+n.message),null}}function nt(o,e,t){if(!t)return console.error("Container element is required"),null;t.innerHTML="",t.style.display="block",t.style.whiteSpace="normal",t.classList.remove("grid-mode"),t.style.padding="10px";const n=ot(o,e);return t.appendChild(n),ne&&ne.enableViewerGridScroll(t),n}function ot(o=[],e=[]){const t=[{text:"File/Series",width:"35%"},{text:"Dimensions",width:"12%"},{text:"Spacing",width:"12%"},{text:"Details",width:"41%"}],{container:n,tbody:r}=Be(t),s=[...o].sort((i,c)=>(i.filename||"").localeCompare(c.filename||"")),l=[...e].sort((i,c)=>{const d=`${i.patientId||""} | ${i.seriesNumber||""} | ${i.seriesDescription||""}`,a=`${c.patientId||""} | ${c.seriesNumber||""} | ${c.seriesDescription||""}`;return d.localeCompare(a)});return s.length===0&&l.length===0?r.appendChild(ze("No NIFTI or DICOM files found.",t.length)):(s.length>0&&(r.appendChild(ge(`NIfTI Files (${s.length})`)),s.forEach(i=>r.appendChild(rt(i)))),l.length>0&&(r.appendChild(ge(`DICOM Series (${l.length})`)),l.forEach(i=>r.appendChild(it(i))))),n}function rt(o){const e=document.createElement("tr"),t=H(),n=o.filename||o.path||"N/A";t.textContent=n,e.appendChild(t);const r=H();r.textContent=o.dimensions||"N/A",e.appendChild(r);const s=H();s.textContent=o.spacing||"N/A",e.appendChild(s);const l=H(),i=[];return o.size&&i.push(o.size),o.dataType&&i.push(`Type: ${o.dataType}`),o.bitDepth&&i.push(`${o.bitDepth}bit`),l.textContent=i.join(" | "),e.appendChild(l),e}function it(o){const e=document.createElement("tr"),t=H(),n=(o.path||"").split("/"),r=n.length>0?n[n.length-1]:o.path||"N/A";t.textContent=r,e.appendChild(t);const s=H();s.textContent=o.dimensions||"N/A",e.appendChild(s);const l=H();l.textContent=o.spacing||"N/A",e.appendChild(l);const i=H(),c=[];return o.size&&c.push(o.size),o.fileCount&&c.push(`${o.fileCount} files`),o.patientId&&o.patientId!=="N/A"&&c.push(`Patient: ${o.patientId}`),o.seriesNumber&&o.seriesNumber!=="N/A"&&c.push(`Series: ${o.seriesNumber}`),o.seriesDescription&&o.seriesDescription!=="N/A"&&c.push(o.seriesDescription),i.textContent=c.join(" | "),e.appendChild(i),e}function ge(o){const e=document.createElement("tr"),t=document.createElement("td");return t.colSpan=4,t.textContent=o,t.style.padding="12px 8px",t.style.backgroundColor="#f0f0f0",t.style.fontWeight="600",t.style.fontSize="14px",t.style.borderTop="1px solid #ddd",t.style.borderBottom="1px solid #ddd",e.appendChild(t),e}function H(){const o=document.createElement("td");return o.style.padding="12px 8px",o.style.borderBottom="1px solid #ddd",o.style.textAlign="left",o.style.fontSize="14px",o.style.lineHeight="1.4",o.style.verticalAlign="top",o}let j=!1;async function Le(o,e={}){return new Promise((t,n)=>{Pe([".nii",".nii.gz"],!1,!1,async(r,s)=>{if(s)return console.error("Error selecting NIfTI file:",s),n(s);if(!r||r.length===0)return t(null);try{const l=r[0];if(!o)throw new Error("No panel provided to load NIfTI file into.");const i={sliceType:"multiplanar",colormap:"gray",opacity:1,...e};await Ue(l,o,i),t(l)}catch(l){console.error("Error loading NIfTI file:",l),n(l)}},"nifti-loader")})}async function ke(o,e={}){return new Promise((t,n)=>{Pe([".dcm"],!0,!0,async(r,s)=>{if(s)return console.error("Error selecting DICOM files:",s),n(s);if(!r||r.length===0)return t(null);try{if(!o)throw new Error("No panel provided to load DICOM files into.");const l={sliceType:"multiplanar",colormap:"gray",opacity:1,...e};await We(r,o,l),t(r)}catch(l){console.error("Error loading DICOM files:",l),n(l)}},"dicom-loader")})}function st(){const o=document.getElementById("scan-files");o&&at(o)}function at(o){if(j)return;j=!0;const e=document.createElement("input");e.type="file",e.webkitdirectory=!0,e.multiple=!0,e.style.display="none",e.addEventListener("change",async t=>{const n=t.target.files;if(!n||n.length===0){j=!1,document.body.removeChild(e);return}const s=n[0].webkitRelativePath.split("/"),l=s.length>0?s[0]:null;o.textContent=`Scanning: ${l}...`,o.disabled=!0;try{await lt(n)}catch(i){console.error("Error scanning files:",i)}finally{o.textContent="Scan Files",o.disabled=!1,j=!1,document.body.removeChild(e)}}),document.body.appendChild(e),e.click(),setTimeout(()=>{j&&document.body.contains(e)||document.body.contains(e)&&(document.body.removeChild(e),j=!1)},1e3)}async function lt(o){if(!o||o.length===0)return;const e=performance.now(),t=document.getElementById("viewer-grid");if(!t)return;t.innerHTML="",t.style.padding="20px",t.style.height="100%",t.style.overflow="auto",t.style.display="block",t.style.whiteSpace="normal";const n=Array.from(o||[]),r=await ct(n),s=await dt(n),i=((performance.now()-e)/1e3).toFixed(1);console.log(`📊 Scan completed in ${i}s - Found ${r.length} NIfTI files and ${s.length} DICOM series`),nt(r,s,t)}async function ct(o){const e=o.filter(r=>/(\.nii(\.gz)?$)|(\.hdr(\.gz)?$)/i.test(r.name));if(e.length===0)return[];await Oe();const t=[],n=10;console.log(`Processing ${e.length} NIfTI files...`);for(let r=0;r<e.length;r+=n){const s=e.slice(r,r+n),l=await Promise.all(s.map(async i=>{try{let d=await te(i,4096);if(window.nifti.isCompressed(d))try{const a=await te(i,262144),u=await window.nifti.readHeaderAsync(a);if(!u)throw new Error("Failed to read compressed NIfTI header");const m=[u.dims[1],u.dims[2],u.dims[3]],f=[u.pixDims[1],u.pixDims[2],u.pixDims[3]];return{type:"nifti",path:i.webkitRelativePath||i.name,filename:i.name,dimensions:m.join(" × "),spacing:f.map(h=>h.toFixed(2)).join(" × "),size:`${(i.size/1024/1024).toFixed(1)}MB`,dataType:u.datatypeCode,bitDepth:u.numBitsPerVoxel,compressed:!0}}catch{if(i.size<50*1024*1024){const u=await te(i,i.size),m=window.nifti.decompress(u),f=window.nifti.readHeader(m);if(!f)throw new Error("Failed to read NIfTI header after full decompression");const h=[f.dims[1],f.dims[2],f.dims[3]],p=[f.pixDims[1],f.pixDims[2],f.pixDims[3]];return{type:"nifti",path:i.webkitRelativePath||i.name,filename:i.name,dimensions:h.join(" × "),spacing:p.map(g=>g.toFixed(2)).join(" × "),size:`${(i.size/1024/1024).toFixed(1)}MB`,dataType:f.datatypeCode,bitDepth:f.numBitsPerVoxel,compressed:!0}}else throw new Error("Compressed file too large for header-only reading")}else{if(!window.nifti.isNIFTI(d))throw new Error("Not a valid NIfTI file");const a=window.nifti.readHeader(d);if(!a)throw new Error("Failed to read NIfTI header");const u=[a.dims[1],a.dims[2],a.dims[3]],m=[a.pixDims[1],a.pixDims[2],a.pixDims[3]];return{type:"nifti",path:i.webkitRelativePath||i.name,filename:i.name,dimensions:u.join(" × "),spacing:m.map(f=>f.toFixed(2)).join(" × "),size:`${(i.size/1024/1024).toFixed(1)}MB`,dataType:a.datatypeCode,bitDepth:a.numBitsPerVoxel,compressed:!1}}}catch(c){return console.warn(`Skipping NIfTI file ${i.name}: ${c.message}`),null}}));t.push(...l.filter(Boolean)),r+n<e.length&&await new Promise(i=>setTimeout(i,5))}return t}async function dt(o){await Se();const e=new Map,t=o.filter(r=>/(\.dcm$)|(\.dicom$)|(\.ima$)/i.test(r.name)||!r.name.includes("."));if(t.length===0)return[];t.forEach(r=>{const s=r.webkitRelativePath||r.name,l=s.includes("/")?s.substring(0,s.lastIndexOf("/")):"";e.has(l)||e.set(l,[]),e.get(l).push(r)}),console.log(`Processing ${t.length} DICOM files in ${e.size} series...`);const n=[];for(const[r,s]of e.entries())if(s?.length)try{let l=null,i=null;for(const h of s)try{const p=await te(h,131072),g=new Uint8Array(p);if(!ut(g))continue;const y={untilTag:"x00281050"},w=dicomParser.parseDicom(g,y);if(w.uint16("x00280010")&&w.uint16("x00280011")){l=w,i=h;break}}catch{continue}if(!l||!i){console.warn(`Could not find a parsable DICOM file in series ${r}`);continue}const c={patientId:(l.string("x00100020")||"N/A").trim(),seriesDescription:(l.string("x0008103e")||"N/A").trim(),seriesNumber:(l.string("x00200011")||"N/A").trim(),rows:l.uint16("x00280010")||0,columns:l.uint16("x00280011")||0,pixelSpacing:l.string("x00280030")||"",sliceThickness:l.string("x00180050")||"0"},d=c.pixelSpacing.split("\\"),a=d[0]?parseFloat(d[0]):0,u=d[1]?parseFloat(d[1]):0,m=parseFloat(c.sliceThickness)||0,f=s.reduce((h,p)=>h+p.size,0);n.push({type:"dicom",path:r||i.name,dimensions:`${c.columns} × ${c.rows} × ${s.length}`,spacing:[u.toFixed(2),a.toFixed(2),m.toFixed(2)].join(" × "),patientId:c.patientId,seriesDescription:c.seriesDescription,seriesNumber:c.seriesNumber,size:`${(f/1024/1024).toFixed(1)}MB`,fileCount:s.length})}catch(l){console.warn(`Error processing DICOM series ${r||"root"}:`,l.message);continue}return n}async function te(o,e){return await o.slice(0,Math.min(e,o.size)).arrayBuffer()}function ut(o){return o.length>132?String.fromCharCode(o[128])==="D"&&String.fromCharCode(o[129])==="I"&&String.fromCharCode(o[130])==="C"&&String.fromCharCode(o[131])==="M":!1}function mt(o,e,t,n,r,s,l="clamp",i="nearest"){const c=r>1?e/r:e/2,d=s>1?t/s:t/2,a=i==="nearest"||i==="nearestNeighbor";for(let u=0;u<s;u++)for(let m=0;m<r;m++){const f=(m+.5)*c-.5,h=(u+.5)*d-.5;let p;if(a){const g=Math.round(f),y=Math.round(h);p=G(o,g,y,e,t,l)}else{const g=Math.floor(f),y=Math.floor(h),w=G(o,g,y,e,t,l),v=G(o,g+1,y,e,t,l),b=G(o,g,y+1,e,t,l),D=G(o,g+1,y+1,e,t,l),A=f-g,E=h-y;p=(1-A)*(1-E)*w+A*(1-E)*v+(1-A)*E*b+A*E*D}n[m+u*r]=p}}function G(o,e,t,n,r,s){if(e>=0&&e<n&&t>=0&&t<r)return o[e+t*n];let l=e,i=t;switch(s){case"clamp":l=Math.max(0,Math.min(n-1,e)),i=Math.max(0,Math.min(r-1,t));break;case"mirror":e<0?l=-e-1:e>=n&&(l=2*n-e-1),t<0?i=-t-1:t>=r&&(i=2*r-t-1),l=Math.max(0,Math.min(n-1,l)),i=Math.max(0,Math.min(r-1,i));break;case"wrap":l=(e%n+n)%n,i=(t%r+r)%r;break;case"zero":return 0;default:l=Math.max(0,Math.min(n-1,e)),i=Math.max(0,Math.min(r-1,t))}return o[l+i*n]}async function ie(o,e){if(e<=0)throw new Error("Resolution must be positive");const[t,n,r]=o.size,s=o.spacing,l=o.data,i=Math.max(1,Math.round(t*s[0]/e)),c=Math.max(1,Math.round(n*s[1]/e)),d=t*n,a=i*c,u={imageType:{dimension:o.imageType.dimension,componentType:"float32",pixelType:o.imageType.pixelType,components:o.imageType.components},name:"ResampledImage",origin:[...o.origin],spacing:[e,e,s[2]],direction:new Float64Array(o.direction),size:[i,c,r],data:new Float32Array(a*r)},m=new Float32Array(a);for(let f=0;f<r;f++){const h=f*d,p=l.subarray(h,h+d),g=f*a;m.fill(0),mt(p,t,n,m,i,c),u.data.set(m,g)}return u}async function le(o,e,t,n={}){const{windowSize:r=7,scales:s=[1,2,3],method:l=0,backend:i="webgl"}=n;performance.now();let c;switch(l){case 1:c=await ht(o,e,t,n);break;case 2:c=await gt(o,e,t,n);break;case 0:default:c=await ft(o,e,t,n);break}return performance.now(),c}async function ft(o,e,t,n={}){await $e();const{windowSize:r=7,scales:s=[1,2,3],backend:l="webgl"}=n;return tf.setBackend(l),tf.tidy(()=>{const i=tf.tensor2d(o,[t,e],"float32");if(i.rank!==2)throw new Error("Input image must be 2D.");const c=i.expandDims(0).expandDims(-1),d=s[s.length-1],a=tf.log(tf.tensor1d(s,"float32")),u={},m={};let f=c.clone(),h=c.clone();u[0]=f.clone(),m[0]=h.clone(),tf.ones([3,3,1],"bool");const p=3,g=1,y="valid",w=[[0,0],[1,1],[1,1],[0,0]];for(let P=1;P<=d;P++){const z=f,M=h;f=tf.tidy(()=>{const C=tf.pad(z,w,"reflect"),I=tf.maxPool(C,p,g,y);return tf.maximum(tf.add(z,1),I)}),h=tf.tidy(()=>{const C=M.neg(),I=tf.pad(C,w,"reflect"),L=tf.maxPool(I,p,g,y).neg();return tf.minimum(tf.sub(M,1),L)}),tf.dispose([z,M]),s.includes(P)&&(u[P]=f.clone(),m[P]=h.clone())}s.includes(d)||tf.dispose([f,h]);const v=[],b=tf.scalar(r*r,"float32"),D=tf.scalar(1e-6);for(const P of s){const z=tf.sub(u[P],m[P]),M=tf.avgPool(z,r,1,"same"),C=tf.mul(M,b),I=tf.maximum(C.squeeze([0,3]),D);v.push(tf.log(I)),tf.dispose([z,M,C,I,u[P],m[P]])}tf.dispose([u[0],m[0]]);const A=tf.stack(v,0),E=a.reshape([-1,1,1]),x=tf.tile(E,[1,t,e]),F=Et(x,A),S=tf.sub(3,F),T=S.clipByValue(2,3);tf.dispose(v),tf.dispose([A,E,x,F,S]);const B=T.dataSync();return tf.dispose([i,T,...Object.values(u),...Object.values(m)].filter(Boolean)),new Float32Array(B)})}async function pt(o,e,t,n,r,s,l,i){const d=2*(3-o)+2,a=yt(e,e,d),u=await le(a,e,e,{windowSize:t,scales:r,method:l}),m=await le(a,e,e,{windowSize:n,scales:s,method:i});return{originalImage:a,fractalDimension1:u,fractalDimension2:m,parameters:{dimension:o,size:e,window1:t,window2:n,scales1:r,scales2:s,method1:l,method2:i}}}async function ht(o,e,t,n={}){const{windowSize:r=7,scales:s=[1,2,3]}=n,l=Math.floor(r/2),i=new Float32Array(e*t),c=[],d=[];c[0]=new Float32Array(o),d[0]=new Float32Array(o);for(let a=1;a<=s[s.length-1];a++){c[a]=new Float32Array(e*t),d[a]=new Float32Array(e*t);for(let u=0;u<t;u++)for(let m=0;m<e;m++){const f=u*e+m;let h=c[a-1][f]+1,p=d[a-1][f]-1;for(let g=-1;g<=1;g++)for(let y=-1;y<=1;y++){const w=Math.min(Math.max(u+g,0),t-1),v=Math.min(Math.max(m+y,0),e-1),b=w*e+v;h=Math.max(h,c[a-1][b]),p=Math.min(p,d[a-1][b])}c[a][f]=h,d[a][f]=p}}for(let a=0;a<t;a++)for(let u=0;u<e;u++){const m=[],f=[];for(let y of s){let w=0;for(let v=-l;v<=l;v++)for(let b=-l;b<=l;b++){const D=Math.min(Math.max(a+v,0),t-1),A=Math.min(Math.max(u+b,0),e-1),E=D*e+A;w+=c[y][E]-d[y][E]}w>0&&(m.push(Math.log(w)),f.push(Math.log(y)))}const{slope:h}=me(f,m),p=3-h,g=a*e+u;i[g]=Math.min(3,Math.max(2,p))}return i}function me(o,e){if(!Array.isArray(o)||!Array.isArray(e)||o.length!==e.length||o.length===0)return{slope:0,intercept:0};const t=o.length;let n=0,r=0,s=0,l=0;for(let a=0;a<t;a++){if(typeof o[a]!="number"||typeof e[a]!="number"||!isFinite(o[a])||!isFinite(e[a]))return{slope:0,intercept:0};n+=o[a],r+=e[a],s+=o[a]*e[a],l+=o[a]*o[a]}const i=t*l-n*n;if(i===0)return{slope:0,intercept:r/t};const c=(t*s-n*r)/i,d=(r-c*n)/t;return{slope:c,intercept:d}}async function gt(o,e,t,n={}){const{windowSize:r=7,scales:s=[1,2,3]}=n,l=new Float32Array(e*t),i=Math.floor(r/2);for(let c=0;c<t;c++)for(let d=0;d<e;d++){const a=new Float32Array(r*r);for(let v=0;v<r;v++)for(let b=0;b<r;b++){const D=c+v-i,A=d+b-i,E=Math.max(0,Math.min(t-1,D)),x=Math.max(0,Math.min(e-1,A));a[v*r+b]=o[E*e+x]}let u=new Float32Array(a),m=new Float32Array(a);const f=[],h=Math.max(...s);for(let v=1;v<=h;v++){const b=u,D=m;u=new Float32Array(r*r),m=new Float32Array(r*r);for(let A=0;A<r;A++)for(let E=0;E<r;E++){const x=A*r+E;let F=b[x]+1,S=D[x]-1;for(let T=-1;T<=1;T++)for(let B=-1;B<=1;B++){const P=A+T,z=E+B;if(P>=0&&P<r&&z>=0&&z<r){const M=P*r+z;F=Math.max(F,b[M]),S=Math.min(S,D[M])}}u[x]=F,m[x]=S}if(s.includes(v)){let A=0;for(let E=0;E<u.length;E++)A+=u[E]-m[E];f.push(A>0?A:1e-9)}}if(f.length!==s.length){l[c*e+d]=2;continue}const p=f.map(v=>Math.log(v)),g=s.map(v=>Math.log(v));if(g.length<2){l[c*e+d]=2;continue}const{slope:y}=me(g,p),w=3-y;l[c*e+d]=Math.min(3,Math.max(2,w))}return l}function yt(o,e,t){console.time("fBm Generation");const n=new Float32Array(o*e),r=new Float32Array(o*e);for(let d=0;d<e;d++)for(let a=0;a<o;a++){const u=a<o/2?a:a-o,m=d<e/2?d:d-e,f=Math.sqrt(u*u+m*m),h=d*o+a;if(f===0)n[h]=0,r[h]=0;else{const p=Math.pow(f,-t/2),g=Math.random()*2*Math.PI;n[h]=p*Math.cos(g),r[h]=p*Math.sin(g)}}wt(n,r,!0,o,e);const s=new Float32Array(o*e);for(let d=0;d<o*e;d++)s[d]=n[d];let l=1/0,i=-1/0;for(let d=0;d<s.length;d++)s[d]<l&&(l=s[d]),s[d]>i&&(i=s[d]);const c=new Uint8ClampedArray(o*e);for(let d=0;d<s.length;d++)c[d]=Math.round((s[d]-l)/(i-l)*255);return console.timeEnd("fBm Generation"),c}function wt(o,e,t=!1,n,r){for(let i=0;i<r;i++){const c=new Float32Array(n),d=new Float32Array(n);for(let a=0;a<n;a++){const u=i*n+a;c[a]=o[u],d[a]=e[u]}t?ye(c,d):ce(c,d);for(let a=0;a<n;a++){const u=i*n+a;o[u]=c[a],e[u]=d[a]}}const s=new Float32Array(n*r),l=new Float32Array(n*r);for(let i=0;i<r;i++)for(let c=0;c<n;c++)s[c*r+i]=o[i*n+c],l[c*r+i]=e[i*n+c];for(let i=0;i<n;i++){const c=new Float32Array(r),d=new Float32Array(r);for(let a=0;a<r;a++){const u=i*r+a;c[a]=s[u],d[a]=l[u]}t?ye(c,d):ce(c,d);for(let a=0;a<r;a++){const u=i*r+a;s[u]=c[a],l[u]=d[a]}}for(let i=0;i<r;i++)for(let c=0;c<n;c++)o[i*n+c]=s[c*r+i],e[i*n+c]=l[c*r+i]}function _(o,e,t){return(o*73856093^e*19349663^t*83492791)%1e6/1e6}function vt(o,e,t){const n=Math.floor(o),r=Math.floor(e),s=Math.floor(t),l=n+1,i=r+1,c=s+1,d=o-n,a=e-r,u=t-s,m=_(n,r,s),f=_(l,r,s),h=_(n,i,s),p=_(l,i,s),g=_(n,r,c),y=_(l,r,c),w=_(n,i,c),v=_(l,i,c),b=m*(1-d)+f*d,D=h*(1-d)+p*d,A=g*(1-d)+y*d,E=w*(1-d)+v*d,x=b*(1-a)+D*a,F=A*(1-a)+E*a;return x*(1-u)+F*u}function xt(o,e,t,n,r,s){let l=0,i=1,c=1;for(let d=0;d<r;d++)l+=i*vt(o*c*n,e*c*n,t*c*n),i*=s,c*=2;return l}function bt(o,e){const t=o.length;if(t!==e.length||(t&t-1)!==0)throw new Error("Invalid array length: must be power of 2");let n=-1;for(let c=0;c<32;c++)1<<c===t&&(n=c);if(n===-1)throw new Error("Length is not a power of 2");const r=new Float32Array(t/2),s=new Float32Array(t/2);for(let c=0;c<t/2;c++)r[c]=Math.cos(2*Math.PI*c/t),s[c]=Math.sin(2*Math.PI*c/t);function l(c,d){let a=0;for(let u=0;u<d;u++)a=a<<1|c&1,c>>>=1;return a}const i=t;for(let c=0;c<i;c++){const d=l(c,n);if(d>c){const a=o[c];o[c]=o[d],o[d]=a;const u=e[c];e[c]=e[d],e[d]=u}}for(let c=2;c<=t;c*=2){const d=c/2,a=t/c;for(let u=0;u<t;u+=c)for(let m=u,f=0;m<u+d;m++,f+=a){const h=o[m+d]*r[f]+e[m+d]*s[f],p=-o[m+d]*s[f]+e[m+d]*r[f];o[m+d]=o[m]-h,e[m+d]=e[m]-p,o[m]+=h,e[m]+=p}}}function ce(o,e){const t=o.length;if(t!==e.length)throw new Error("Mismatched lengths");if((t&t-1)===0)bt(o,e);else{const n=new Float32Array(t*t),r=new Float32Array(t*t);for(let i=0;i<t;i++)for(let c=0;c<t;c++){const d=-2*Math.PI*(i*c%t)/t;n[i*t+c]=Math.cos(d),r[i*t+c]=Math.sin(d)}const s=new Float32Array(t),l=new Float32Array(t);for(let i=0;i<t;i++){let c=0,d=0;for(let a=0;a<t;a++)c+=o[a]*n[a*t+i]+e[a]*r[a*t+i],d+=-o[a]*r[a*t+i]+e[a]*n[a*t+i];s[i]=c,l[i]=d}for(let i=0;i<t;i++)o[i]=s[i],e[i]=l[i]}}function ye(o,e){const t=o.length;for(let n=0;n<t;n++)e[n]=-e[n];ce(o,e);for(let n=0;n<t;n++)o[n]/=t,e[n]=-e[n]/t}function Ct(o={}){const{dims:e=[128,128,32],gridSize:t=64,octaves:n=6,amplitude:r=.1}=o,[s,l,i]=e;console.time("3D Volume Generation");const c=s*l*i,d=new Float32Array(c),a=.5;let u=0;for(let m=0;m<i;m++)for(let f=0;f<l;f++)for(let h=0;h<s;h++){const p=h/s,g=f/l,y=m/i,v=xt(p,g,y,t,n,a)*r,b=Math.max(0,Math.min(255,(v+1)*127.5));d[u++]=b}return console.timeEnd("3D Volume Generation"),console.log(`Generated 3D volume: ${s}x${l}x${i} = ${c} voxels`),d.d1=s,d.d2=l,d.d3=i,d}function we(o,e,t={}){const{method:n=0,windowSize:r=7,scales:s=[1,2,3],backend:l="webgl",...i}=t;switch(n){case 0:return Ft(o,e,{windowSize:r,scales:s,backend:l,...i});case 1:return Ve(o,e,{windowSize:r,scales:s,...i});default:throw new Error(`Unsupported method: ${n}. Use 0 for TensorFlow or 1 for CPU.`)}}function Ve(o,e,t={}){const{windowSize:n=7,scales:r=[1,2,3]}=t,[s,l,i]=e,c=Math.floor(n/2),d=s*l,a=s*l*i,u=new Float32Array(a),m=[],f=[];m[0]=new Float32Array(o),f[0]=new Float32Array(o);for(let h=1;h<=r[r.length-1];h++){m[h]=new Float32Array(a),f[h]=new Float32Array(a);for(let p=0;p<i;p++)for(let g=0;g<l;g++)for(let y=0;y<s;y++){const w=p*d+g*s+y;let v=m[h-1][w]+1,b=f[h-1][w]-1;for(let D=-1;D<=1;D++)for(let A=-1;A<=1;A++)for(let E=-1;E<=1;E++){const x=Math.min(Math.max(p+D,0),i-1),F=Math.min(Math.max(g+A,0),l-1),S=Math.min(Math.max(y+E,0),s-1),T=x*d+F*s+S;v=Math.max(v,m[h-1][T]),b=Math.min(b,f[h-1][T])}m[h][w]=v,f[h][w]=b}}for(let h=0;h<i;h++)for(let p=0;p<l;p++)for(let g=0;g<s;g++){const y=[],w=[];for(let A of r){let E=0;for(let x=-c;x<=c;x++)for(let F=-c;F<=c;F++)for(let S=-c;S<=c;S++){const T=Math.min(Math.max(h+x,0),i-1),B=Math.min(Math.max(p+F,0),l-1),P=Math.min(Math.max(g+S,0),s-1),z=T*d+B*s+P;E+=m[A][z]-f[A][z]}E>0&&(y.push(Math.log(E)),w.push(Math.log(A)))}const{slope:v}=me(w,y),b=4-v,D=h*d+p*s+g;u[D]=Math.min(4,Math.max(3,b))}return u}function Ft(o,e,t={}){const{windowSize:n=7,scales:r=[1,2,3],backend:s="webgl"}=t,[l,i,c]=e,d=tf.getBackend();tf.setBackend(s),console.log(`fd3dtf using TensorFlow.js backend: ${tf.getBackend()}`);try{return tf.tidy(()=>{const a=tf.tensor3d(o,[c,i,l],"float32"),u=Math.max(...r,0),m=[],f=[];m[0]=a.clone(),f[0]=a.clone();for(let x=1;x<=u;x++){const F=m[x-1],S=f[x-1],T=tf.pad(F,[[1,1],[1,1],[1,1]],"symmetric"),B=tf.maxPool3d(T.expandDims(0).expandDims(-1),[3,3,3],1,"valid").squeeze([0,-1]);m[x]=tf.maximum(F.add(1),B);const P=tf.pad(S,[[1,1],[1,1],[1,1]],"symmetric"),z=tf.neg(tf.maxPool3d(tf.neg(P.expandDims(0).expandDims(-1)),[3,3,3],1,"valid")).squeeze([0,-1]);f[x]=tf.minimum(S.sub(1),z)}const h=tf.log(tf.tensor1d(r,"float32")),p=[],g=tf.ones([n,n,n,1,1],"float32");for(const x of r){const F=m[x],S=f[x];if(!F||!S){console.warn(`Blankets for scale ${x} not found or already disposed. Skipping.`);continue}const B=tf.sub(F,S).expandDims(0).expandDims(-1),P=tf.conv3d(B,g,1,"same").squeeze([0,4]);p.push(tf.log(tf.maximum(P,1e-7)))}const y=tf.stack(p),w=h.reshape([r.length,1,1,1]),v=tf.tile(w,[1,c,i,l]),b=It(v,y),E=tf.sub(4,b).clipByValue(3,4).dataSync();for(let x=0;x<=u;x++)r.includes(x)||(m[x]&&m[x]!==a&&!m[x].isDisposed&&m[x].dispose(),f[x]&&f[x]!==a&&!f[x].isDisposed&&f[x].dispose());return new Float32Array(E)})}catch(a){return console.error("Error in fd3dtf:",a),console.warn("Falling back to CPU implementation"),d&&d!==tf.getBackend()&&tf.setBackend(d),Ve(o,e,t)}finally{d&&d!==tf.getBackend()&&tf.setBackend(d)}}function Et(o,e){return tf.tidy(()=>{const t=tf.scalar(o.shape[0],"float32"),n=tf.sum(o,0),r=tf.sum(e,0),s=tf.sum(tf.mul(o,e),0),l=tf.sum(tf.square(o),0),i=tf.sub(tf.mul(t,s),tf.mul(n,r)),c=tf.sub(tf.mul(t,l),tf.square(n)),d=1e-6,a=tf.where(tf.abs(c).lessEqual(d),tf.onesLike(c).mul(d),c);return tf.div(i,a)})}function It(o,e){return tf.tidy(()=>{const t=tf.scalar(o.shape[0],"float32"),n=tf.sum(o,0),r=tf.sum(e,0),s=tf.sum(tf.mul(o,e),0),l=tf.sum(tf.square(o),0),i=tf.sub(tf.mul(t,s),tf.mul(n,r)),c=tf.sub(tf.mul(t,l),tf.square(n)),d=tf.scalar(1e-10,"float32"),a=tf.maximum(tf.abs(c),d);return tf.div(i,a)})}async function Dt(o,e,t,n,r,s={}){s={windowSize:7,scales:[1,2,3],method:0,...s};const{windowSize:l,scales:i,method:c}=s;let d;if(o instanceof Float32Array)d=o;else if(ArrayBuffer.isView(o))d=new Float32Array(o);else if(Array.isArray(o))d=new Float32Array(o);else throw new Error("Input slice must be a Float32Array, TypedArray, or Array");return le(d,n,r,s)}async function se(o,e={}){if(!o||!o.data||!o.size||!Array.isArray(o.size))throw new Error("Invalid image object provided to calcfd");const[t,n,r]=o.size,s=o.data,l=t*n,i={imageType:{dimension:o.imageType.dimension,componentType:"float32",pixelType:o.imageType.pixelType,components:o.imageType.components},name:"FractalDimensionImage",origin:[...o.origin],spacing:[...o.spacing],direction:new Float64Array(o.direction),size:[t,n,r],data:new Float32Array(l*r)};for(let c=0;c<r;c++){const d=c*l,a=s.subarray(d,d+l),u=c*l;try{const m=await Dt(a,i,u,t,n,e);m&&m.length===l?i.data.set(m,u):m?console.warn(`Slice ${c}: Unexpected result format from computefd2d`):console.log(`Slice ${c}: Using direct buffer modification (TF/GPU method)`)}catch(m){console.error(`Error processing slice ${c}:`,m);const f=new Float32Array(l).fill(NaN);i.data.set(f,u)}}return i}async function St(o,e={}){try{const{resolution:t}=e;if(o.size.length===3){const n=await ie(o,t),r=await se(n,e);return{resampledImage:n,fdImage:r}}else if(o.size.length===4){const[n,r,s,l]=o.size,i=n*r*s,c=ve(o,0,i),d=await ie(c,t),a=await se(d,e),[u,m,f]=d.size,h=u*m*f,p=xe(o,d,l,h),g=xe(o,a,l,h);p.data.set(d.data,0),g.data.set(a.data,0);for(let y=1;y<l;y++){const w=ve(o,y,i),v=await ie(w,t),b=await se(v,e),D=y*h;p.data.set(v.data,D),g.data.set(b.data,D)}return{resampledImage:p,fdImage:g}}else throw new Error(`Unsupported number of dimensions: ${o.size.length}. Only 3D and 4D volumes are supported.`)}catch(t){throw console.error("Error in resampleandfd:",t),t}}function ve(o,e,t){const[n,r,s]=o.size,l=e*t,i=o.data.subarray(l,l+t);return{imageType:{dimension:3,componentType:o.imageType.componentType,pixelType:o.imageType.pixelType,components:o.imageType.components},name:`Volume_t${e}`,origin:o.origin.slice(0,3),spacing:o.spacing.slice(0,3),direction:new Float64Array(o.direction.slice(0,9)),size:[n,r,s],data:i}}function xe(o,e,t,n){const[r,s,l]=e.size,i=n*t;return{imageType:{dimension:4,componentType:e.imageType.componentType,pixelType:e.imageType.pixelType,components:e.imageType.components},name:e.name+"_4D",origin:[...o.origin],spacing:[...e.spacing,o.spacing[3]],direction:new Float64Array(o.direction),size:[r,s,l,t],data:new Float32Array(i)}}const be={handleFd2d(o,e){o.style.display="none";const t=this.createFd2dInputs();t.querySelector("#fd2d-calculate").addEventListener("click",()=>{this.executeFd2dCalculation()}),e.appendChild(t)},async executeFd2dCalculation(){const o=document.getElementById("fd-dim").value,e=document.getElementById("fd-size").value,t=document.getElementById("fd-win-1").value,n=document.getElementById("fd-win-2").value,r=document.getElementById("fd-scales-1").value.trim(),s=document.getElementById("fd-scales-2").value.trim(),l=document.getElementById("fd-method-1").value,i=document.getElementById("fd-method-2").value,c=U(r),d=U(s);if(c===null||d===null){alert("Please enter valid scale values (e.g., 1,2,3,4)");return}const a={dim:parseFloat(o),size:parseInt(e),window1:parseInt(t),window2:parseInt(n),method1:parseInt(l),method2:parseInt(i),scales1:c,scales2:d};console.log("FD 2D Parameters:",a);const u=await pt(a.dim,a.size,a.window1,a.window2,a.scales1,a.scales2,a.method1,a.method2),m=document.getElementById("viewer-grid");m.innerHTML="",m.style.display="grid",m.style.gridTemplateColumns="repeat(2, 1fr)",m.style.gridTemplateRows="auto auto auto auto auto",m.style.gap="6px",m.style.height="100%",m.style.padding="0px",m.style.overflowY="auto",m.style.overflowX="auto",m.style.alignContent="start",m.style.alignItems="stretch";const f=this.createFd2dContainers();f.forEach(h=>m.appendChild(h)),await this.createFd2dPlots(f,u,a)},createFd2dInputs(){const o=document.createElement("div");o.className="fd2d-inputs";const e="display: flex; gap: 10px; margin-bottom: 10px;",t="flex: 1; min-width: 0;";[[{name:"Dim",type:"number",value:"2.5",id:"fd-dim"},{name:"Size",type:"number",value:"256",id:"fd-size"}],[{name:"Window 1",type:"number",value:"7",id:"fd-win-1"},{name:"Window 2",type:"number",value:"7",id:"fd-win-2"}],[{name:"Scales 1",type:"text",value:"1,2,3",id:"fd-scales-1"},{name:"Scales 2",type:"text",value:"1,2,3",id:"fd-scales-2"}],[{name:"Method 1",type:"number",value:"0",id:"fd-method-1"},{name:"Method 2",type:"number",value:"0",id:"fd-method-2"}]].forEach(s=>{const l=document.createElement("div");l.style.cssText=e,s.forEach(i=>{const c=document.createElement("div");c.className="input-group",c.style.cssText=t;const d=document.createElement("label");d.textContent=i.name+":",d.style.display="block",d.style.marginBottom="3px",d.style.fontSize="12px";const a=document.createElement("input");a.type=i.type,a.value=i.value,a.id=i.id||"fd-"+i.name.replace(/\s+/g,"-").toLowerCase(),a.style.width="100%",a.style.padding="6px",a.style.fontSize="12px",a.style.borderRadius="4px",a.style.border="1px solid #ccc",c.appendChild(d),c.appendChild(a),l.appendChild(c)}),o.appendChild(l)});const r=O.createActionButton("Calculate","fd2d-calculate");return o.appendChild(r),o},async createFd2dPlots(o,e,t){await Ne();const[n,r,s,l,i,c,d,a,u,m]=o,{originalImageMatrix:f,fd1Matrix:h,fd2Matrix:p}=this.convertResultsToMatrices(e,t.size),g=this.getCommonHeatmapOptions(t.size),y=[[0,"rgb(255, 255, 0)"],[1,"rgb(0, 0, 255)"]];this.createOriginalImagePlots(n,r,f,t.dim,g),this.createFractalDimensionPlots(s,l,h,p,t,g,y),this.createHistogramPlots(i,c,e),this.createDifferencePlots(d,a,e,t.size,g),Je(u,m,{fd1Values:Array.from(e.fractalDimension1),fd2Values:Array.from(e.fractalDimension2)})},createFd2dContainers(){return[{className:"plot-container",height:"300px"},{className:"plot-container",height:"300px"},{className:"plot-container",height:"300px"},{className:"plot-container",height:"300px"},{className:"plot-container",height:"250px"},{className:"plot-container",height:"250px"},{className:"plot-container",height:"300px"},{className:"plot-container",height:"250px"},{className:"plot-container stats-container",height:"auto",padding:"8px"},{className:"plot-container stats-container",height:"auto",padding:"8px"}].map(e=>{const t=document.createElement("div");return t.className=e.className,t.style.width="100%",t.style.height=e.height,t.style.textAlign="left",t.style.marginBottom="0",e.padding&&(t.style.padding=e.padding),t})},convertResultsToMatrices(o,e){const t=[],n=[],r=[];for(let s=0;s<e;s++){const l=[],i=[],c=[];for(let d=0;d<e;d++){const a=s*e+d;l.push(o.originalImage[a]),i.push(o.fractalDimension1[a]),c.push(o.fractalDimension2[a])}t.push(l),n.push(i),r.push(c)}return{originalImageMatrix:t,fd1Matrix:n,fd2Matrix:r}},getCommonHeatmapOptions(o){return{autosize:!1,width:400,height:300,margin:{t:40,b:5,l:5,r:5},xaxis:{showticklabels:!1,ticks:"",showgrid:!1,zeroline:!1,range:[0,o]},yaxis:{showticklabels:!1,ticks:"",showgrid:!1,zeroline:!1,scaleanchor:"x",scaleratio:1,range:[0,o]}}},createOriginalImagePlots(o,e,t,n,r){const s=[{z:t,type:"heatmap",colorscale:"Greys",showscale:!0,zmin:0,zmax:255,colorbar:{title:"Intensity",len:1,y:.5,yanchor:"middle",tickvals:[0,128,255],ticktext:["0","128","255"]}}];Plotly.newPlot(o,s,{...r,title:`Original Image (D=${n})`},{responsive:!0}),Plotly.newPlot(e,s,{...r,title:"Original Image (Grayscale)"},{responsive:!0})},createFractalDimensionPlots(o,e,t,n,r,s,l){const i={type:"heatmap",colorscale:l,showscale:!0,zmin:2,zmax:3,colorbar:{title:"FD",len:1,tickvals:[2,2.25,2.5,2.75,3],ticktext:["2.0","2.25","2.5","2.75","3.0"],y:.5,yanchor:"middle"}};Plotly.newPlot(o,[{...i,z:t}],{...s,title:`Fractal Dimension 1 (Win=${r.window1}, Scales=${r.scales1.length})`},{responsive:!0}),Plotly.newPlot(e,[{...i,z:n}],{...s,title:`Fractal Dimension 2 (Win=${r.window2}, Scales=${r.scales2.length})`},{responsive:!0})},createHistogramPlots(o,e,t){const r=Array.from(t.fractalDimension1).filter(d=>d>=2&&d<=3),l=Array.from(t.fractalDimension2).filter(d=>d>=2&&d<=3),i={margin:{t:40,b:30,l:10,r:10},xaxis:{title:"Fractal Dimension",range:[2,3],showgrid:!1},yaxis:{showticklabels:!1,title:"",showgrid:!1,zeroline:!1}},c={type:"histogram",nbinsx:50,marker:{color:"rgba(100, 100, 255, 0.7)",line:{color:"rgba(0, 0, 200, 1)",width:1}}};Plotly.newPlot(o,[{...c,x:r}],{...i,title:`FD1 Histogram (Mean: ${(r.reduce((d,a)=>d+a,0)/r.length).toFixed(3)})`},{responsive:!0}),Plotly.newPlot(e,[{...c,x:l}],{...i,title:`FD2 Histogram (Mean: ${(l.reduce((d,a)=>d+a,0)/l.length).toFixed(3)})`},{responsive:!0})},createDifferencePlots(o,e,t,n,r){const s=[],l=[];for(let a=0;a<n;a++){const u=[];for(let m=0;m<n;m++){const f=a*n+m,h=t.fractalDimension1[f]-t.fractalDimension2[f];u.push(h);const p=(Math.random()*2-1)*1e-6;l.push(h+p)}s.push(u)}Plotly.newPlot(o,[{z:s,type:"heatmap",colorscale:[[0,"rgb(0, 0, 255)"],[.5,"rgb(255, 255, 255)"],[1,"rgb(255, 0, 0)"]],showscale:!0,zmin:-1,zmax:1,colorbar:{title:"FD Difference",tickvals:[-1,-.75,-.5,-.25,0,.25,.5,.75,1],ticktext:["-1.0","-0.75","-0.5","-0.25","0","0.25","0.5","0.75","1.0"],len:1,y:.5,yanchor:"middle"}}],{...r,title:"Fractal Dimension Difference (FD1 - FD2)"},{responsive:!0});const i=l.reduce((a,u)=>a+u,0)/l.length,c=l.reduce((a,u)=>a+Math.pow(u-i,2),0)/l.length,d=Math.sqrt(c);Plotly.newPlot(e,[{x:l,type:"histogram",nbinsx:50,marker:{color:"rgba(100, 100, 255, 0.7)",line:{color:"rgba(100, 100, 255, 1)",width:1}}}],{title:`FD Difference Histogram (Mean: ${i.toFixed(6)}, StDev: ${d.toFixed(6)})`,margin:{t:40,b:40,l:10,r:10},xaxis:{title:"FD1 - FD2",range:[-1,1],showgrid:!1},yaxis:{showticklabels:!1,title:"",showgrid:!1,zeroline:!1}},{responsive:!0})}},$t=be.handleFd2d.bind(be);function At(o){return new Promise((e,t)=>{if(document.querySelector(`script[src="${o}"]`)){e();return}const n=document.createElement("script");n.src=o,n.onload=()=>e(),n.onerror=()=>t(new Error(`Script load error for ${o}`)),document.head.appendChild(n)})}function Mt(){return`
        <style>
            #pdf-merger-container {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
                max-width: 800px;
                margin: 40px auto;
                padding: 20px;
                background-color: #f9f9f9;
                color: #333;
                border-radius: 8px;
            }
            #pdf-merger-container h1 {
                text-align: center;
                color: #444;
            }
            #drop-zone {
                border: 2px dashed #ccc;
                border-radius: 8px;
                padding: 40px;
                text-align: center;
                margin-bottom: 20px;
                cursor: pointer;
                transition: all 0.3s ease;
                background-color: #fff;
            }
            #drop-zone.highlight {
                border-color: #007bff;
                background-color: #f0f8ff;
            }
            #file-list {
                margin-top: 15px;
                font-size: 0.9em;
                color: #555;
            }
            #merge-btn {
                padding: 10px 20px;
                font-size: 1em;
                cursor: pointer;
                border: none;
                border-radius: 5px;
                background-color: #007bff;
                color: white;
                transition: background-color 0.3s;
            }
            #merge-btn:disabled {
                background-color: #aaa;
                cursor: not-allowed;
            }
            #status, #download-area {
                text-align: center;
                margin-top: 20px;
            }
            #download-link {
                display: none;
                padding: 12px 25px;
                text-decoration: none;
                background-color: #007bff;
                color: white;
                border-radius: 5px;
            }
        </style>
        <div id="pdf-merger-container">
            <h1>PDF Merger</h1>
            <div id="drop-zone">
                <p>Drag & drop PDF files here, or click to select</p>
                <input type="file" id="file-input" accept=".pdf" multiple style="display: none;">
                <div id="file-list"></div>
            </div>
            <div style="text-align: center;">
                <button id="merge-btn" disabled>Merge PDFs</button>
            </div>
            <div id="status"></div>
            <div id="download-area">
                <a id="download-link" download="merged.pdf">Download Merged PDF</a>
            </div>
        </div>
    `}async function Tt(){const{PDFDocument:o}=window.PDFLib,e=document.getElementById("drop-zone"),t=document.getElementById("file-input"),n=document.getElementById("file-list"),r=document.getElementById("merge-btn"),s=document.getElementById("status"),l=document.getElementById("download-link");let i=[];e.addEventListener("click",()=>t.click()),e.addEventListener("dragover",a=>{a.preventDefault(),e.classList.add("highlight")}),e.addEventListener("dragleave",()=>e.classList.remove("highlight")),e.addEventListener("drop",a=>{a.preventDefault(),e.classList.remove("highlight"),c(a.dataTransfer.files)}),t.addEventListener("change",a=>c(a.target.files)),r.addEventListener("click",d);function c(a){i=Array.from(a).filter(u=>u.type==="application/pdf"),i.length>0?(n.innerHTML=`Selected files:<ul>${i.map(u=>`<li>${u.name}</li>`).join("")}</ul>`,r.disabled=!1):(n.textContent="",r.disabled=!0)}async function d(){if(i.length!==0){s.textContent="Processing...",r.disabled=!0,l.style.display="none";try{const a=await Promise.all(i.map(p=>p.arrayBuffer().then(g=>o.load(g)))),u=await o.create();for(const p of a)(await u.copyPages(p,p.getPageIndices())).forEach(y=>u.addPage(y));const m=await u.save(),f=new Blob([m],{type:"application/pdf"}),h=URL.createObjectURL(f);l.href=h,l.style.display="inline-block",s.textContent=`Merged ${a.length} files successfully.`}catch(a){console.error("Error merging PDFs:",a),s.textContent=`Error: ${a.message}`}finally{r.disabled=!1}}}}async function Pt(){W();const o=document.getElementById("viewer-grid");o.innerHTML=Mt();try{await At("./lib/pdf-lib.min.js"),Tt()}catch(e){console.error(e),o.innerHTML=`<p style="color: red; text-align: center;">${e.message}</p>`}}const Bt=["./lib/jszip.min.js","./lib/dicomParser.min.js","./lib/plotly-cartesian.min.js"];function zt(o){return new Promise((e,t)=>{if(document.querySelector(`script[src="${o}"]`))return e();const n=document.createElement("script");n.src=o,n.onload=()=>e(),n.onerror=()=>t(new Error(`Failed to load script: ${o}`)),document.head.appendChild(n)})}async function Lt(){for(const o of Bt)await zt(o)}function kt(){return`
        <style>
            #dicom-viewer-container {
                width: 100%;
                height: 100%;
                padding: 20px;
                box-sizing: border-box;
                display: flex;
                flex-direction: column;
            }
            #drop-zone {
                border: 2px dashed #ccc; border-radius: 8px; padding: 30px; text-align: center; margin-bottom: 20px; cursor: pointer; transition: all 0.3s;
            }
            #drop-zone.highlight { border-color: #007bff; background-color: #f0f8ff; }
            #plot-container {
                display: flex; flex-wrap: nowrap; width: 100%; justify-content: space-between; align-items: flex-start;
            }
            .plot-wrapper {
                display: flex; flex-direction: column; width: 32%; border-radius: 4px; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.1); height: fit-content;
            }
            .plot-label { padding: 8px 10px; font-size: 0.9em; background: #f8f9fa; border-bottom: 1px solid #eee; text-align: center; color: #333; font-weight: 500; }
            .plot { width: 100%; aspect-ratio: 1 / 1; }
        </style>
        <div id="dicom-viewer-container">
            <h1>DICOM Zip File Viewer</h1>
            <div id="drop-zone">
                <p>Drag & drop a zip file containing DICOM images</p>
                <input type="file" id="file-input" accept=".zip" style="display: none;">
            </div>
            <div id="loading" style="text-align:center; display:none;">Processing...</div>
            <div id="plot-container"></div>
        </div>
    `}async function Vt(){const o=document.getElementById("drop-zone"),e=document.getElementById("file-input"),t=document.getElementById("plot-container"),n=document.getElementById("loading");o.addEventListener("click",()=>e.click()),e.addEventListener("change",a=>r(a.target.files)),["dragover","dragenter"].forEach(a=>{o.addEventListener(a,u=>{u.preventDefault(),o.classList.add("highlight")})}),["dragleave","drop"].forEach(a=>{o.addEventListener(a,u=>{u.preventDefault(),o.classList.remove("highlight")})}),o.addEventListener("drop",a=>r(a.dataTransfer.files));async function r(a){if(!(!a.length||!a[0].name.endsWith(".zip"))){n.style.display="block",t.innerHTML="";try{const u=await s(a[0]);c(u)}catch(u){console.error("Error processing ZIP:",u),t.innerHTML=`<p style="color:red; text-align:center">${u.message}</p>`}finally{n.style.display="none"}}}async function s(a){const u=await window.JSZip.loadAsync(a),m=Object.values(u.files).filter(g=>!g.dir&&(g.name.toLowerCase().endsWith(".dcm")||!g.name.includes(".")));if(m.length===0)throw new Error("No DICOM files found.");const f=[];for(const g of m)try{const y=await g.async("uint8array"),w=window.dicomParser.parseDicom(y,{untilTag:"x7fe00010"}),v=l(w);v!==null&&f.push({zPos:v,entry:g,originalIndex:f.length})}catch{}f.sort((g,y)=>g.zPos-y.zPos),f.forEach((g,y)=>{g.zIndex=y+1});const h=i(f.length),p=[];for(const g of h){const{entry:y}=f[g],w=await y.async("uint8array"),v=window.dicomParser.parseDicom(w),b=v.elements.x7fe00010,D=new Uint16Array(v.byteArray.buffer,b.dataOffset,b.length/2);p.push({pixelData:D,width:v.uint16("x00280011"),height:v.uint16("x00280010"),label:`Z: ${f[g].zPos.toFixed(2)}mm (${f[g].zIndex}/${f.length})`})}return p}function l(a){try{const u=a.string("x00200032");if(u)return parseFloat(u.split("\\")[2])}catch{}return null}function i(a){return[.4,.5,.6].map(u=>Math.round(a*u)).map(u=>Math.min(Math.max(0,u),a-1))}function c(a){a.forEach((u,m)=>{const f=document.createElement("div");f.className="plot-wrapper",f.innerHTML=`<div class="plot-label">${u.label}</div><div class="plot" id="plot-${m}"></div>`,t.appendChild(f),d(`plot-${m}`,u)})}function d(a,{pixelData:u,width:m,height:f}){const h=[];for(let p=0;p<f;p++)h.push(u.subarray(p*m,(p+1)*m));window.Plotly.newPlot(a,[{z:h,type:"heatmap",colorscale:"Greys",showscale:!1,hoverinfo:"none"}],{autosize:!0,margin:{l:0,r:0,t:0,b:0},xaxis:{visible:!1,fixedrange:!0},yaxis:{visible:!1,scaleanchor:"x",scaleratio:1,fixedrange:!0,autorange:"reversed"}},{staticPlot:!0,displayModeBar:!1})}}async function Nt(){W();const o=document.getElementById("viewer-grid");o.innerHTML=kt();try{await Lt(),Vt()}catch(e){console.error(e),o.innerHTML=`<p style="color: red; text-align: center;">${e.message}</p>`}}function Ot(){return`
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&display=swap');
        #game-wrapper {
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-family: 'Orbitron', monospace;
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
        }
        .game-container {
            position: relative;
            background: radial-gradient(circle at center, #0a0a1f 0%, #000 100%);
            border: 4px solid #00ffff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 
                0 0 20px #00ffff,
                0 0 40px #00ffff,
                inset 0 0 20px rgba(0, 255, 255, 0.1);
            animation: glow 2s ease-in-out infinite alternate;
        }
        @keyframes glow {
            from { box-shadow: 0 0 20px #00ffff, 0 0 40px #00ffff, inset 0 0 20px rgba(0, 255, 255, 0.1); }
            to { box-shadow: 0 0 30px #00ffff, 0 0 60px #00ffff, inset 0 0 30px rgba(0, 255, 255, 0.2); }
        }
        canvas#gameCanvas {
            border: 2px solid #ff00ff;
            background: linear-gradient(180deg, #000428 0%, #004e92 100%);
            box-shadow: inset 0 0 50px rgba(255, 0, 255, 0.3);
            cursor: none;
        }
        .ui {
            position: absolute;
            top: 30px;
            left: 30px;
            right: 30px;
            display: flex;
            justify-content: space-between;
            color: #00ffff;
            font-size: 18px;
            font-weight: bold;
            text-shadow: 0 0 10px #00ffff;
        }
        .game-over {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.9);
            border: 3px solid #ff00ff;
            padding: 30px;
            border-radius: 10px;
            text-align: center;
            color: #00ffff;
            font-size: 24px;
            font-weight: bold;
            text-shadow: 0 0 10px #00ffff;
            box-shadow: 0 0 30px #ff00ff;
            display: none;
        }
        .game-over button {
            background: linear-gradient(45deg, #ff00ff, #00ffff);
            border: none;
            color: #000;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 15px;
            transition: all 0.3s;
        }
        .game-over button:hover {
            transform: scale(1.1);
            box-shadow: 0 0 20px #fff;
        }
        .instructions {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            text-align: center;
            color: rgba(0, 255, 255, 0.8);
            font-size: 12px;
            text-shadow: 0 0 8px rgba(0, 255, 255, 0.7);
            pointer-events: none;
            z-index: 10;
            white-space: nowrap;
            padding-bottom: 5px; /* Add some space below the text */
        }
    </style>
    <div id="game-wrapper">
        <div class="game-container">
            <div class="ui">
                <div>SCORE: <span id="score">0</span></div>
                <div>LEVEL: <span id="level">1</span></div>
                <div>LIVES: <span id="lives">3</span></div>
            </div>
            <canvas id="gameCanvas" width="800" height="600"></canvas>
            <div class="game-over" id="gameOver">
                <div id="gameOverText">GAME OVER</div>
                <div>Final Score: <span id="finalScore">0</span></div>
                <button id="restart-button">PLAY AGAIN</button>
            </div>
            <div class="instructions">
                Use A/D or ←/→ to move • SPACE to start/pause • ESC to restart
            </div>
        </div>
    </div>
    `}function Rt(){const o={paddle:"data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmojBzyZ3O/JdCkGKYPQ9NWFMwgZbL3t5ZpMDgxTru/srHX/CH4/gdeumQ==",brick:"data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmojBzyZ3O/JdCkGKYPQ9NWFMwgZbL3t5ZpMDgxTru/srHX/CH4/gdeumQ==",wall:"data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmojBzyZ3O/JdCkGKYPQ9NWFMwgZbL3t5ZpMDgxTru/srHX/CH4/gdeumQ==",gameOver:"test/game-over-2-sound-effect-230463.mp3",levelComplete:"test/arcade-videogame-sound-160948.mp3",miss:"test/game-over-arcade-6435.mp3"},e=document.querySelector(".game-container"),t=document.getElementById("gameCanvas");if(!t||!e)return;const n=()=>{const C=e.getBoundingClientRect(),I=Math.min(C.width-40,1e3),$=Math.min(C.height-120,700);let L=I,V=L*(3/4);V>$&&(V=$,L=V*(4/3)),t.width=L,t.height=V};n(),window.addEventListener("resize",n);const r=t.getContext("2d");let s,l,i,c=[],d={},a=[],u,m=0;const f={};function h(){Object.keys(o).forEach(C=>{f[C]=new Audio(o[C]),f[C].volume=.8,f[C].preload="auto"})}function p(C){try{const I=f[C];I&&(I.paused||(I.pause(),I.currentTime=0),I.play().catch($=>console.error(`Audio play failed for ${C}:`,$)))}catch(I){console.error(`Sound error for ${C}:`,I)}}function g(C,I,$,L=8){for(let V=0;V<L;V++)a.push({x:C,y:I,dx:(Math.random()-.5)*10,dy:(Math.random()-.5)*10,color:$,life:1,decay:.02})}function y(){a=a.filter(C=>(C.x+=C.dx,C.y+=C.dy,C.life-=C.decay,C.life>0))}function w(){a.forEach(C=>{r.save(),r.globalAlpha=C.life,r.fillStyle=C.color,r.fillRect(C.x,C.y,3,3),r.restore()})}function v(){c=[];const C=["#ff0080","#00ff80","#8000ff","#ff8000","#0080ff"],I=6,$=Math.min(12,Math.floor(t.width/60)),L=(t.width-60)/$-5,V=18;for(let q=0;q<I;q++)for(let oe=0;oe<$;oe++)c.push({x:oe*(L+5)+30,y:q*(V+5)+40,width:L,height:V,color:C[q%C.length],destroyed:!1,points:(I-q+1)*10})}function b(){i.x=t.width/2,i.y=t.height-100,i.dx=(Math.random()>.5?1:-1)*i.speed,i.dy=-i.speed}function D(){if(!s.gameRunning||s.paused){u=requestAnimationFrame(D);return}A(),E(),u=requestAnimationFrame(D)}function A(){if(s.paused||s.gameOver)return;const I=Math.max(0,Math.min(m-l.width/2,t.width-l.width))-l.x;if(l.x+=I*.15,l.x=Math.max(0,Math.min(l.x,t.width-l.width)),(d.a||d.arrowleft)&&l.x>0&&(l.x-=l.speed),(d.d||d.arrowright)&&l.x<t.width-l.width&&(l.x+=l.speed),i.x+=i.dx,i.y+=i.dy,(i.x+i.dx>t.width-i.radius||i.x+i.dx<i.radius)&&(i.dx=-i.dx,p("wall"),i.x+=i.dx>0?1:-1,g(i.x,i.y,"#00ffff",5)),i.y<=i.radius&&(i.dy=-i.dy,p("wall"),g(i.x,i.y,"#00ffff",5)),i.y+i.radius>=l.y&&i.x>=l.x&&i.x<=l.x+l.width&&i.dy>0){let $=(i.x-l.x)/l.width;i.dx=($-.5)*10,i.dy=-Math.abs(i.dy),p("paddle"),g(i.x,i.y,"#ff00ff",6)}c.forEach($=>{!$.destroyed&&i.x>=$.x&&i.x<=$.x+$.width&&i.y>=$.y&&i.y<=$.y+$.height&&($.destroyed=!0,i.dy=-i.dy,s.score+=$.points,p("brick"),g($.x+$.width/2,$.y+$.height/2,$.color,10))}),c.every($=>$.destroyed)&&(s.level++,i.speed+=.5,p("levelComplete"),v(),b()),i.y>t.height&&s.lives>0&&(s.lives--,x(),s.lives<=0?(p("gameOver"),F()):(p("miss"),b())),y(),x()}function E(){const C=r.createLinearGradient(0,0,0,t.height);C.addColorStop(0,"#000428"),C.addColorStop(1,"#004e92"),r.fillStyle=C,r.fillRect(0,0,t.width,t.height),r.strokeStyle="rgba(0, 255, 255, 0.1)",r.lineWidth=1;for(let I=0;I<t.width;I+=40)r.beginPath(),r.moveTo(I,0),r.lineTo(I,t.height),r.stroke();for(let I=0;I<t.height;I+=40)r.beginPath(),r.moveTo(0,I),r.lineTo(t.width,I),r.stroke();c.forEach(I=>{I.destroyed||(r.save(),r.fillStyle=I.color,r.fillRect(I.x,I.y,I.width,I.height),r.shadowColor=I.color,r.shadowBlur=15,r.fillRect(I.x,I.y,I.width,I.height),r.restore())}),r.fillStyle="#00ffff",r.fillRect(l.x,l.y,l.width,l.height),r.beginPath(),r.arc(i.x,i.y,i.radius,0,Math.PI*2),r.fillStyle="#ff00ff",r.fill(),r.closePath(),w()}function x(){document.getElementById("score").innerText=s.score,document.getElementById("level").innerText=s.level,document.getElementById("lives").innerText=s.lives}function F(){s.gameOver=!0,s.gameRunning=!1,document.getElementById("finalScore").innerText=s.score,document.getElementById("gameOver").style.display="block"}function S(){document.getElementById("gameOver").style.display="none",s={score:0,level:1,lives:10,gameRunning:!1,gameOver:!1,paused:!1};const C=Math.max(80,Math.min(120,t.width*.15));l={x:t.width/2-C/2,y:t.height-30,width:C,height:16,speed:5};const I=Math.max(6,Math.min(10,t.width*.01));i={x:t.width/2,y:t.height-60,radius:I,dx:2,dy:-2,speed:2},v(),b(),x(),E()}function T(){s.gameOver||(s.paused=!s.paused,s.paused||D())}function B(C){d[C.key.toLowerCase()]=!0,C.code==="Space"&&(C.preventDefault(),s.gameRunning?T():(s.gameRunning=!0,D())),C.code==="Escape"&&S()}function P(C){d[C.key.toLowerCase()]=!1}const z=C=>{const I=t.getBoundingClientRect(),$=t.width/I.width;m=(C.clientX-I.left)*$},M=C=>{C.preventDefault();const I=t.getBoundingClientRect(),$=t.width/I.width;m=(C.touches[0].clientX-I.left)*$};return h(),S(),document.getElementById("restart-button").addEventListener("click",S),window.addEventListener("keydown",B),window.addEventListener("keyup",P),t.addEventListener("mousemove",z),t.addEventListener("touchmove",M,{passive:!1}),t.addEventListener("touchstart",M),()=>{cancelAnimationFrame(u),window.removeEventListener("keydown",B),window.removeEventListener("keyup",P),window.removeEventListener("resize",n),t.removeEventListener("mousemove",z),t.removeEventListener("touchmove",M),t.removeEventListener("touchstart",M)}}let ee=null;function _t(){typeof ee=="function"&&(ee(),ee=null),W();const o=document.getElementById("viewer-grid");o.innerHTML=Ot(),ee=Rt()}const Ce={handleFd3d(o,e){console.log("FD-3D"),k.clear(),this.setupFd3dGrid(),o.style.display="none";const t=document.createElement("div");t.className="fd3d-inputs";const n=[{name:"Dimension",type:"number",value:"64",step:"1"},{name:"Grid Size",type:"number",value:"16",step:"1"},{name:"Octaves",type:"number",value:"6",step:"1"},{name:"Amplitude",type:"number",value:"0.1",step:"0.1"}],r=O.createParamsGrid(n,"fd3d");t.appendChild(r),[[{name:"Window 1",type:"number",value:"7",step:"1"},{name:"Window 2",type:"number",value:"7",step:"1"}],[{name:"Scale 1",type:"text",value:"1,2,3"},{name:"Scale 2",type:"text",value:"1,2,3"}],[{name:"Method 1",type:"number",value:"0",step:"1"},{name:"Method 2",type:"number",value:"0",step:"1"}]].forEach(i=>{const c=O.createInputRow(i,"fd3d");t.appendChild(c)});const l=O.createActionButton("Calculate","fd3d-calculate");t.appendChild(l),e.appendChild(t),l.addEventListener("click",async()=>{try{await $e()}catch(M){console.error(M),alert("Could not load TensorFlow.js. Please check the network connection and file path.");return}console.log("FD 3D Calculate button clicked"),k&&k.clear(),R&&R.clear();const c=(await this.setupFd3dGrid()).map(M=>M.panel).filter(M=>M);if(c.length!==4){console.error("Failed to find all 4 panels");return}const d=parseInt(document.getElementById("fd3d-dimension").value),a=parseInt(document.getElementById("fd3d-grid-size").value),u=parseInt(document.getElementById("fd3d-octaves").value),m=parseFloat(document.getElementById("fd3d-amplitude").value),f=[d,d,Math.floor(d/4)],h=Ct({dims:f,gridSize:a,octaves:u,amplitude:m});try{const M={dimensions:f},C=`fractal3d-${d}-${a}-${u}`;await N.addFromArray(h,M,C),console.log(`Created volume with ID: ${C}`),await k.load(C,c[0],{colormap:"gray",controlSection:!0}),console.log("Loaded generated 3D volume into panel-1")}catch(M){console.error("Failed to create or load fractal volume:",M);return}const p=document.getElementById("fd3d-scale-1").value.trim(),g=document.getElementById("fd3d-scale-2").value.trim(),y=U(p),w=U(g),v=parseInt(document.getElementById("fd3d-method-1").value),b=parseInt(document.getElementById("fd3d-method-2").value),D=parseInt(document.getElementById("fd3d-window-1").value),A=parseInt(document.getElementById("fd3d-window-2").value);if(y===null||w===null)return;console.log("Calculating fractal dimensions using TensorFlow and CPU...");const E={windowSize:D,scales:y,method:v},x={windowSize:A,scales:w,method:b};console.time(`FD3D-Method${v} Calculation`);const F=we(h,f,E);console.timeEnd(`FD3D-Method${v} Calculation`),console.time(`FD3D-Method${b} Calculation`);const S=we(h,f,x);console.timeEnd(`FD3D-Method${b} Calculation`);const[T,B,P,z]=c;if(P&&F)try{const M=await N.addFromArray(F,{dimensions:f},`fd3d-method${v}-${d}-${D}`);await k.load(M,P,{colormap:"nih",cal_min:3,cal_max:4,controlSection:!0});const C=await N.getVolumeStatistics(M);console.log(`Method ${v} Volume Statistics:`,{Min:C.min.toFixed(4),Max:C.max.toFixed(4),Mean:C.mean.toFixed(4),Median:C.median.toFixed(4),"Std Dev":C.stdDev.toFixed(4),"Q1-Q3":`${C.q1.toFixed(4)} - ${C.q3.toFixed(4)}`}),console.log(`Loaded Method ${v} FD result into panel 3`)}catch(M){console.error(`Error displaying Method ${v} result:`,M)}if(z&&S)try{const M=await N.addFromArray(S,{dimensions:f},`fd3d-method${b}-${d}-${A}`);await k.load(M,z,{colormap:"nih",cal_min:3,cal_max:4,controlSection:!0});const C=await N.getVolumeStatistics(M);console.log(`Method ${b} Volume Statistics:`,{Min:C.min.toFixed(4),Max:C.max.toFixed(4),Mean:C.mean.toFixed(4),Median:C.median.toFixed(4),"Std Dev":C.stdDev.toFixed(4),"Q1-Q3":`${C.q1.toFixed(4)} - ${C.q3.toFixed(4)}`}),console.log(`Loaded Method ${b} FD result into panel 4`)}catch(M){console.error(`Error displaying Method ${b} result:`,M)}if(B&&S&&F)try{const M=new Float32Array(S.length);for(let V=0;V<S.length;V++)M[V]=S[V]-F[V];const C=await N.addFromArray(M,{dimensions:f},`fd3d-diff-method${b}-method${v}-${d}`),I={R:[255,255,0],G:[0,255,0],B:[0,255,255],A:[255,255,255],I:[0,128,255],name:"myCustomMap",levels:[0,.5,1]},$=await k.load(C,B,{cal_min:-.5,cal_max:.5,controlSection:!0});$&&($.addColormap("myCustomMap",I),$.volumes?.[0]&&($.volumes[0].colormap="myCustomMap",$.updateGLVolume()));const L=await N.getVolumeStatistics(C);console.log("Difference Volume Statistics:",{Min:L.min.toFixed(4),Max:L.max.toFixed(4),Mean:L.mean.toFixed(4),Median:L.median.toFixed(4),"Std Dev":L.stdDev.toFixed(4),"Q1-Q3":`${L.q1.toFixed(4)} - ${L.q3.toFixed(4)}`}),console.log("Loaded difference volume into panel 2"),console.log(`Loaded difference volume (Method ${b} - Method ${v}) into panel 2`)}catch(M){console.error("Error calculating or displaying difference volume:",M)}})},async setupFd3dGrid(){const o=await Te({},{enableDragDrop:!1,enableClick:!1});return o.forEach(e=>{e&&e.panel&&e.panel.setAttribute("data-no-controls","true")}),o},async createFd3dPanel(o,e={}){const t={enableDragDrop:!1,enableClick:!1,...e},n=await createStyledPanel(o,t);return!n||!n.panel?(console.error(`Failed to create fd3d panel ${o}`),null):n.panel}},Ht=Ce.handleFd3d.bind(Ce);function Fe(o,e){const t=O.createActionButton(o,e);return t.classList.add("panel-action-button"),t}function jt(o){const e=document.createDocumentFragment(),t=document.createElement("div");t.style.fontSize="12px",t.style.marginTop=o===1?"0":"5px",t.style.marginBottom="2px",t.textContent=`Panel ${o}:`,t.style.display="block",e.appendChild(t);const n=document.createElement("div");n.style.display="flex",n.style.gap="5px",n.style.marginBottom="3px";const r=Fe("NIFTI",`panel-${o}-nifti`),s=Fe("DICOM",`panel-${o}-dicom`);return n.appendChild(r),n.appendChild(s),e.appendChild(n),{fragment:e,niftiButton:r,dicomButton:s}}async function Ee(o,e){try{const t=document.getElementById(`panel-${o}`);if(!t)throw new Error(`Panel ${o} not found`);await(e==="NIFTI"?Le:ke)(t,{sliceType:"axial"}),console.log(`Triggered ${e} load for panel ${o}`)}catch(t){console.error(`Error triggering ${e} load for panel ${o}:`,t),alert(`Error: ${t.message}`)}}const Ie={async setupFd4vGrid(){const o=await Te(),{addDragDropToPanel:e}=await Ae(async()=>{const{addDragDropToPanel:t}=await import("./dragDrop-x4zc2jpM.js");return{addDragDropToPanel:t}},[]);return o.forEach((t,n)=>{const r=`panel-${n+1}`;e(t.panel,r)}),o},async handleFd4v(o,e){try{const i=await this.setupFd4vGrid();console.log("FD-4V grid setup complete with panels:",i)}catch(i){console.error("Error setting up FD-4V grid:",i),alert("Failed to initialize the 4-panel grid. Cannot proceed.");return}console.log("FD-4V"),o.style.display="none";const t=O.createActionButton("Load Sample","load-sample-fd4v");e.appendChild(t),t.addEventListener("click",async()=>{const i=["./data/1-ep2ddifftraDYNDISTCALCBVAL.nii.gz","./data/2-t2tsetra.nii.gz","./data/3-ep2ddifftraDYNDISTADC.nii.gz","./data/4-perfusion.nii.gz"];for(let c=0;c<4;c++){const d=c+1,a=`panel-${d}`,u=document.getElementById(a),m=i[c];if(!u){console.error(`Panel ${a} not found.`);continue}try{console.log(`Loading ${m} into ${a}...`);const f=await N.addFromFilename(m,a);if(f)await k.load([f],u,[{sliceType:"axial"}]),console.log(`Successfully loaded and displayed ${m} in ${a}`);else throw new Error("Volume loading returned no ID.")}catch(f){console.error(`Error loading sample for panel ${d}:`,f),alert(`Failed to load sample for panel ${d}. See console for details.`)}}});const n=document.createElement("div");n.className="fd4v-inputs",[[{name:"Resolution",type:"number",value:"1.5",step:"0.5"}],[{name:"Window Size",type:"number",value:"9"}],[{name:"Scales",type:"text",value:"1,2,3,4"}]].forEach(i=>{const c=O.createInputRow(i,"fd4v");n.appendChild(c)});const s=O.createActionButton("Calculate","fd4v-calculate");n.appendChild(s),s.addEventListener("click",async()=>{const i=parseFloat(document.getElementById("fd4v-resolution").value),c=parseInt(document.getElementById("fd4v-window-size").value);if(isNaN(i)||isNaN(c)||i<=0||c<=0){alert("Please enter valid positive numbers for Resolution and Window Size");return}const d=document.getElementById("fd4v-scales").value.trim(),a=U(d);if(a===null)return;console.log("FD4V Parameters:",{resolution:i,windowSize:c,scales:a});const u=[];for(let h=1;h<=4;h++){const p=document.getElementById(`panel-${h}`);if(p){const g=k.getVolumeIdForContainer(p),y=!!g;console.log(`Panel ${h} has volume data:`,y,g?`(Volume ID: ${g})`:""),y&&u.push({panelId:h,element:p,volumeId:g})}}if(console.log("Panels with volume data:",u),u.length===0){console.log("No volume data found in any panel");return}const m=[];for(const h of u){const p=h.panelId,g=h.volumeId;console.log(`Processing panel ${p} with volume ID: ${g}`);const y=await N.getVolume(g).image,w={resolution:i,windowSize:c,scales:a},{resampledImage:v,fdImage:b}=await St(y,w),D=await N.addFromItkImage(v,`resampled-${p}`),A=await N.addFromItkImage(b,`fdImage-${p}`);m.push({panelNumber:p,resampledVolumeId:D,fdVolumeId:A})}k.clear();const f=await this.setupFd4vGrid();for(const h of m){const p=`panel-${h.panelNumber}`,g=f.find(v=>v.panel&&v.panel.id===p);if(!g){console.error(`Could not find panel with ID ${p} in the newly created panels.`);continue}const y={sliceType:"axial",controlSection:!0,showVoxelCoordinates:!0,showWorldCoordinates:!0,showValue:!0,isOverlay:!1,isBaseVolume:!0},w={colormap:"nih",opacity:.5,cal_min:2,cal_max:3,sliceType:"axial",controlSection:!1,isOverlay:!0};await k.load([h.resampledVolumeId,h.fdVolumeId],g.panel,[y,w])}}),n.appendChild(s);const l=document.createElement("div");l.className="panel-controls",l.style.marginTop="5px",l.style.marginBottom="5px",l.style.lineHeight="1.2";for(let i=1;i<=4;i++){const{fragment:c,niftiButton:d,dicomButton:a}=jt(i);d.addEventListener("click",()=>Ee(i,"NIFTI")),a.addEventListener("click",()=>Ee(i,"DICOM")),l.appendChild(c)}e.appendChild(l),e.appendChild(n)}},qt=Ie.handleFd4v.bind(Ie);function De(o,e,t){let n,r;const s=c=>{n=c.clientX,r=parseInt(window.getComputedStyle(o).width,10),document.body.classList.add("resizing"),document.addEventListener("mousemove",l),document.addEventListener("mouseup",i),c.preventDefault()},l=c=>{const d=c.clientX-n;let a=t?r+d:r-d;const u=150,m=window.innerWidth*.4;a=Math.max(u,Math.min(m,a)),o.style.width=`${a}px`},i=()=>{document.body.classList.remove("resizing"),document.removeEventListener("mousemove",l),document.removeEventListener("mouseup",i)};e.addEventListener("mousedown",s)}const Gt={async _resetAndLoad(o){try{const e=await ue();e&&e.panel&&await o(e.panel)}catch(e){console.error("Error during reset and load:",e),alert("An error occurred while loading. Please check the console.")}},_createButtonContainer(o){const e=document.createElement("div");return e.className="secondary-actions",e.style.display="none",o.forEach(t=>{const n=O.createActionButton(t,t.replace(/\s+/g,"-").toLowerCase());e.appendChild(n)}),e},init(){this.initDataSidebar(),this.initActionSidebar(),this.initSidebarResize()},initSidebarResize(){const o=document.getElementById("left-sidebar"),e=document.getElementById("right-sidebar"),t=document.getElementById("left-resize-handle"),n=document.getElementById("right-resize-handle");o&&(o.style.width="12%"),e&&(e.style.width="12%"),o&&t&&De(o,t,!0),e&&n&&De(e,n,!1)},initDataSidebar(){const o=document.getElementById("data-button"),e=document.querySelector(".left-sidebar .sidebar-section");if(e.querySelector(".secondary-actions"))return;const t=["Load Sample","Load NIFTI","Load DICOM","Scan Files","List Volumes","Bonus 1","Bonus 2","Bonus 3"],n=this._createButtonContainer(t);e.appendChild(n),o.addEventListener("click",()=>{this._toggleSidebarSection(e,o,n)}),this.initDataButtonHandlers()},initDataButtonHandlers(){this._setupButtonHandler("load-sample",()=>this._resetAndLoad(Qe)),this._setupButtonHandler("load-nifti",()=>this._resetAndLoad(Le)),this._setupButtonHandler("load-dicom",()=>this._resetAndLoad(ke)),this._setupButtonHandler("scan-files",st),this._setupButtonHandler("list-volumes",Ye),this._setupButtonHandler("bonus-1",Pt),this._setupButtonHandler("bonus-2",Nt),this._setupButtonHandler("bonus-3",_t)},initActionSidebar(){const o=document.getElementById("action-button"),e=document.querySelector(".right-sidebar .sidebar-section");if(e.querySelector(".secondary-actions"))return;const t=["FD 2D","FD 3D","FD 4V"],n=this._createButtonContainer(t);e.appendChild(n),o.addEventListener("click",()=>{this._toggleSidebarSection(e,o,n)}),this.initActionButtonHandlers(n,e)},_toggleSidebarSection(o,e,t){if(Array.from(o.children).some(r=>r!==e&&r!==t))Array.from(o.children).forEach(r=>{r!==e&&r!==t&&o.removeChild(r)}),t.style.display="none";else{const r=t.style.display==="none";t.style.display=r?"block":"none"}},initActionButtonHandlers(o,e){this._setupButtonHandler("fd-2d",()=>$t(o,e)),this._setupButtonHandler("fd-3d",()=>Ht(o,e)),this._setupButtonHandler("fd-4v",()=>qt(o,e))},_setupButtonHandler(o,e){const t=document.getElementById(o);t&&t.addEventListener("click",e)}};try{document.addEventListener("DOMContentLoaded",async()=>{await ue(),Gt.init(),document.addEventListener("keydown",o=>{o.key==="F2"&&!["INPUT","TEXTAREA","SELECT"].includes(document.activeElement.tagName)&&(o.preventDefault(),R.toggleAllControlSections())}),console.log("Application initialized.")})}catch(o){console.error("Error during application initialization:",o)}export{Ue as a,We as l,k as v};
