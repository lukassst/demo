const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/action-fd2d-CnX10SwN.js","assets/fractal-D3i6GnW3.js","assets/action-fd3d-C8ZSXa3y.js","assets/action-fd4v-e9e2hMay.js"])))=>i.map(i=>d[i]);
(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();const he="modulepreload",ge=function(r){return"/demo/"+r},te={},B=function(e,t,n){let o=Promise.resolve();if(t&&t.length>0){let c=function(u){return Promise.all(u.map(l=>Promise.resolve(l).then(d=>({status:"fulfilled",value:d}),d=>({status:"rejected",reason:d}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),s=a?.nonce||a?.getAttribute("nonce");o=c(t.map(u=>{if(u=ge(u),u in te)return;te[u]=!0;const l=u.endsWith(".css"),d=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${u}"]${d}`))return;const m=document.createElement("link");if(m.rel=l?"stylesheet":he,l||(m.as="script"),m.crossOrigin="",m.href=u,s&&m.setAttribute("nonce",s),document.head.appendChild(m),l)return new Promise((p,h)=>{m.addEventListener("load",p),m.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${u}`)))})}))}function i(a){const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=a,window.dispatchEvent(s),!s.defaultPrevented)throw a}return o.then(a=>{for(const s of a||[])s.status==="rejected"&&i(s.reason);return e().catch(i)})};let R=null,H=null,W=null,j=null,q=null,U=null;async function se(){if(!(typeof window.dicomParser<"u"))return H||(H=new Promise((r,e)=>{const t=document.createElement("script");t.src="lib/dicomParser.min.js",t.onload=()=>{console.log("✓ dicomParser.js loaded successfully"),r()},t.onerror=()=>{console.error("✗ Failed to load dicomParser.js"),e(new Error("Failed to load dicomParser.js"))},document.head.appendChild(t)}),H)}async function Ue(){if(!(typeof window.tf<"u"))return R||(R=new Promise((r,e)=>{const t=document.createElement("script");t.src="lib/tf.min.js",t.onload=()=>{console.log("✓ TensorFlow.js loaded successfully"),r()},t.onerror=()=>{console.error("✗ Failed to load TensorFlow.js"),e(new Error("Failed to load TensorFlow.js"))},document.head.appendChild(t)}),R)}async function Ge(){if(!(typeof window.Plotly<"u"))return W||(W=new Promise((r,e)=>{const t=document.createElement("script");t.src="lib/plotly-cartesian.min.js",t.onload=()=>{console.log("✓ Plotly loaded successfully"),r()},t.onerror=()=>{console.error("✗ Failed to load Plotly"),e(new Error("Failed to load Plotly"))},document.head.appendChild(t)}),W)}async function ne(){if(!(typeof window.niivue<"u"))return q||(q=new Promise((r,e)=>{const t=document.createElement("script");t.src="lib/niivue.umd.js",t.onload=()=>{console.log("✓ NiiVue loaded successfully"),r()},t.onerror=()=>{console.error("✗ Failed to load NiiVue"),e(new Error("Failed to load NiiVue"))},document.head.appendChild(t)}),q)}async function ye(){if(!(typeof window.nifti<"u"))return j||(j=new Promise((r,e)=>{const t=document.createElement("script");t.src="lib/nifti-reader-global-min.js",t.onload=()=>{console.log("✓ nifti-reader.js loaded successfully"),r()},t.onerror=()=>{console.error("✗ Failed to load nifti-reader.js"),e(new Error("Failed to load nifti-reader.js"))},document.head.appendChild(t)}),j)}async function Y(){if(!(typeof window.itk<"u"))return U||(U=new Promise((r,e)=>{const t=document.createElement("script");t.src="lib/itk.js",t.onload=async()=>{console.log("✓ ITK.js loaded successfully");try{window.itk&&await window.itk.ready,r()}catch{console.error("✗ Failed to initialize ITK.js"),e(new Error("Failed to initialize ITK.js"))}},t.onerror=()=>{console.error("✗ Failed to load ITK.js"),e(new Error("Failed to load ITK.js"))},document.head.appendChild(t)}),U)}class we{constructor(){this.volumes=new Map,this.volumeCounter=0}generateVolumeId(e="vol"){return`${e}_${this.volumeCounter++}`}async addFromFile(e,t=null,n=null){await Y();try{const o=this.generateVolumeId("file");console.log(`Loading file ${e.name} for container: ${t} with new volume ID: ${o}`);const{image:i}=await itk.readImageFile(null,e);console.log("Volume loaded:",i);const a=n||{type:"file",name:e.name};return await this.addFromItkImage(i,o,a),o}catch(o){throw console.error(`Failed to add volume from file for container ${t}:`,o),o}}async addFromFilename(e,t=null){try{console.log(`Loading file from URL: ${e} for container: ${t}`);const n=await fetch(e);if(!n.ok)throw new Error(`Failed to fetch file: ${n.status} ${n.statusText}`);const o=await n.blob(),i=e.endsWith(".nii.gz")?"application/gzip":"image/nii",a=new File([o],e.split("/").pop(),{type:i}),s={type:"url",url:e};return await this.addFromFile(a,t,s)}catch(n){throw console.error(`Failed to add volume from filename for container ${t}:`,n),n}}async addFromDICOM(e,t=null){if(await Promise.all([Y(),se()]),typeof itk>"u"||typeof dicomParser>"u")throw console.error("ITK.js or dicom-parser.js is not loaded."),new Error("Required libraries not found.");let n=null;try{if(!e||e.length===0)return console.warn("No files provided for DICOM loading."),null;const o=Array.from(e).filter(l=>l&&l.size>0);if(o.length===0)throw new Error("No valid files found (all files are empty or corrupted).");o.length!==e.length&&console.warn(`Filtered out ${e.length-o.length} invalid/empty files.`),console.log(`Starting DICOM processing for ${o.length} files for container: ${t}.`),console.log(`Step 1/5: Reading DICOM metadata from ${o.length} files...`);const i=o.map(async(l,d)=>{let m=null,p=null,h=null;try{m=await l.arrayBuffer(),p=new Uint8Array(m),h=dicomParser.parseDicom(p,{untilTag:"x7fe00010"});const f=g=>(h.string(g)||"").trim();return{file:l,name:l.name,index:d,studyInstanceUID:f("x0020000d"),seriesDescription:f("x0008103e"),seriesInstanceUID:f("x0020000e"),temporalPosId:f("x00200100"),acquisitionNumber:f("x00200012"),triggerTime:f("x00181060"),acquisitionTime:f("x00080032"),instanceNumber:parseInt(f("x00200013"),10)||0,repetitionTime:parseFloat(f("x00180080"))||1,sliceLocation:parseFloat(f("x00201041"))||0,imagePosition:f("x00200032")}}catch(f){return console.warn(`Skipping file ${l.name}: ${f.message}`),null}finally{m&&(m=null),p&&(p=null),h&&(h=null)}}),a=(await Promise.all(i)).filter(l=>l&&l.studyInstanceUID);if(i.length=0,a.length===0)throw new Error("No files with valid DICOM metadata found.");console.log(`Successfully parsed ${a.length} DICOM files.`),a.sort((l,d)=>l.name.localeCompare(d.name,void 0,{numeric:!0})),console.log("Step 2/5: Grouping files by scan series...");const s=new Map;a.forEach(l=>{const d=`${l.studyInstanceUID}|${l.seriesDescription||"unknown"}`;s.has(d)||s.set(d,[]),s.get(d).push(l)}),a.length=0,console.log(`Found ${s.size} scan series to process.`),console.log("Step 3/5: Processing scan series...");let c=0;const u=s.size;for(const[l,d]of s.entries()){console.log(`Processing logical scan '${l}' with ${d.length} total files (${c+1}/${u}).`);const m=new Map;d.forEach(C=>{let b="defaultTimePoint";C.temporalPosId&&C.temporalPosId!==""?b=C.temporalPosId:C.acquisitionNumber&&C.acquisitionNumber!==""?b=C.acquisitionNumber:C.triggerTime&&C.triggerTime!==""?b=C.triggerTime:C.acquisitionTime&&C.acquisitionTime!==""&&(b=C.acquisitionTime),m.has(b)||m.set(b,[]),m.get(b).push(C)});const p=[],h=Array.from(m.keys()).sort((C,b)=>{const S=parseFloat(C),E=parseFloat(b);return!isNaN(S)&&!isNaN(E)?S-E:String(C).localeCompare(String(b),void 0,{numeric:!0})});if(h.length>1){console.log(`  Identified 4D dataset with ${h.length} time points.`);const C=h.map(E=>m.get(E).length),b=Math.min(...C),S=Math.max(...C);S!==b&&console.warn(`  Warning: Inconsistent slice counts (${b}-${S}) across time points`),console.log(`  Slice count validation: ${b} to ${S} slices per time point`)}else console.log("  Identified 3D dataset.");let f=0;const w=h.length;for(const C of h){const b=m.get(C);b.sort((E,I)=>{if(E.instanceNumber!==I.instanceNumber)return E.instanceNumber-I.instanceNumber;if(E.sliceLocation!==I.sliceLocation)return E.sliceLocation-I.sliceLocation;if(E.imagePosition&&I.imagePosition){const L=E.imagePosition.split("\\"),z=I.imagePosition.split("\\");if(L.length>=3&&z.length>=3){const A=parseFloat(L[2]),V=parseFloat(z[2]);if(!isNaN(A)&&!isNaN(V))return A-V}}return E.name.localeCompare(I.name,void 0,{numeric:!0})});const S=b.map(E=>E.file);console.log(`  Loading time point '${C}' (${f+1}/${w}) with ${S.length} files.`);try{const{image:E}=await itk.readImageDICOMFileSeries(S);p.push(E),S.length=0}catch(E){console.error(`  Failed to load 3D volume for time point ${C}:`,E)}f++,m.delete(C)}if(m.clear(),p.length===0){console.warn(`No 3D volumes loaded for scan '${l}'. Skipping.`);continue}if(p.length>1){const C=p[0].size;p.some((S,E)=>S.size[0]!==C[0]||S.size[1]!==C[1]||S.size[2]!==C[2])&&console.warn("  Warning: Some volumes have inconsistent dimensions for 4D assembly")}console.log("Step 4/5: Assembling final volume...");let g;if(p.length>1){console.log(`  Manually combining ${p.length} 3D volumes into a 4D image for scan '${l}'.`);const C=p[0],b=p.length,S=C.size[0],E=C.size[1],I=C.size[2],L=S*E*I;for(let D=1;D<b;D++){const O=p[D];if(O.size[0]!==S||O.size[1]!==E||O.size[2]!==I)throw p.forEach(ee=>{ee.data&&(ee.data=null)}),new Error(`Image dimensions mismatch: time point ${D} has dimensions ${O.size}, expected ${[S,E,I]}`)}const z=new C.data.constructor(L*b);for(let D=0;D<b;D++)z.set(p[D].data,D*L),p[D].data=null;const A=C.direction,V=new Float64Array([A[0],A[1],A[2],0,A[3],A[4],A[5],0,A[6],A[7],A[8],0,0,0,0,1]),J=d[0]?.repetitionTime||1;g={imageType:{dimension:4,componentType:C.imageType.componentType,pixelType:C.imageType.pixelType,components:C.imageType.components},name:C.name||"4D-DICOM",origin:[...C.origin,0],spacing:[...C.spacing,J],direction:V,size:[S,E,I,b],data:z},p.forEach(D=>{D&&(D.data=null,D.direction=null,D.origin=null,D.spacing=null)}),p.length=0,console.log(`  Created 4D image with size [${g.size}] and time spacing ${J}`)}else g=p[0],p.length=0;console.log("  Final ITK Image Metadata:",{imageType:g.imageType,spacing:g.spacing,origin:g.origin,direction:g.direction,size:g.size}),console.log("Step 5/5: Adding volume to registry...");const y=l.replace(/[^a-zA-Z0-9]/g,"").slice(-12),v=this.generateVolumeId(`dicom_${y}`),[x,$]=l.split("|"),F={type:"dicom",files:d.length,seriesDescription:$,studyUID:x};await this.addFromItkImage(g,v,F);const T=g.imageType.dimension;console.log(`  Successfully added ${T}D volume (ID: ${v}) to the registry for container ${t}.`),n||(n=v),d.length=0,c++}if(s.clear(),!n)throw new Error("DICOM processing completed, but no volumes were successfully loaded.");return console.log("Finished processing all DICOM files."),n}catch(o){throw console.error("An error occurred during 4D DICOM processing:",o),o}finally{typeof window.gc=="function"&&window.gc(),console.log("Exiting addFromDICOM function.")}}async addFromDICOM_(e,t=null){try{const n=t||this.generateVolumeId("dicom");console.log(`Loading DICOM series with ${e.length} files, ID: ${n}`);const{image:o}=await itk.readImageDICOMFileSeries(e);console.log("DICOM volume loaded:",o);const i={type:"dicom",files:e.length};return await this.addFromItkImage(o,n,i),n}catch(n){throw console.error("Failed to add volume from DICOM files:",n),n}}async addFromItkImage(e,t=null,n=null){await Y();try{const o=t||this.generateVolumeId("itk");console.log(`Adding ITK image with ID: ${o}`);const s=`${o}.${!1?"nii.gz":"nii"}`;console.time("createSafeImage");const c=await this._createSafeImageCopy(e);console.timeEnd("createSafeImage");const u=Array.isArray(c.direction[0])?c.direction.flat():c.direction,l={...c,direction:u};console.time("writeImageArrayBuffer");const{arrayBuffer:d}=await itk.writeImageArrayBuffer(null,l,s);if(console.timeEnd("writeImageArrayBuffer"),!d||d.byteLength===0)throw new Error("ArrayBuffer is empty or invalid");return this.volumes.set(o,{image:e,loadTime:new Date,buffer:d,source:n||{type:"itkImage",name:e.name||"unnamed"}}),o}catch(o){throw console.error("Failed to add volume from ITK image:",o),o}}async addFromArray(e,t,n=null){try{const o=n||this.generateVolumeId("array"),i={imageType:{dimension:t.dimensions.length||3,componentType:t.componentType||"float32",pixelType:t.pixelType||"Scalar",components:t.components||1},name:t.name||"ArrayVolume",origin:t.origin?[...t.origin]:[0,0,0],spacing:t.spacing?[...t.spacing]:[1,1,1],direction:t.direction?new Float64Array(t.direction):new Float64Array([1,0,0,0,1,0,0,0,1]),size:[...t.dimensions],data:e instanceof Float32Array?e:new Float32Array(e)},a={type:"array",dimensions:t.dimensions,componentType:t.componentType};return await this.addFromItkImage(i,o,a)}catch(o){throw console.error("Failed to add volume from array data:",o),o}}getVolume(e){return this.volumes.has(e)?this.volumes.get(e):null}getImageData(e){return this.volumes.has(e)?this.volumes.get(e).imageData:null}getVolumeIds(){return Array.from(this.volumes.keys())}getBuffer(e){const t=this.volumes.get(e);return t?t.buffer?t.buffer:(console.warn(`No buffer found for volume ${e}`),null):(console.warn(`Volume with ID ${e} not found`),null)}getMetaData(e){const t=this.volumes.get(e);if(!t)return console.warn(`Volume with ID ${e} not found`),null;if(!t.image)return console.warn(`No image data found for volume ${e}`),null;const{image:n,source:o}=t,{imageType:i,origin:a,spacing:s,direction:c,size:u}=n;return{dimensions:u?[...u]:null,spacing:s?[...s]:null,origin:a?[...a]:null,pixelType:i?i.componentType:null,components:i?i.components:null,dimensionality:i?i.dimension:null,voxelCount:u?u.reduce((d,m)=>d*m,1):null,direction:c?[...c]:null,name:t.fileName||e,source:o,loadTime:t.loadTime?t.loadTime.toISOString():null,hasBuffer:!!t.buffer,bufferSize:t.buffer?t.buffer.byteLength:null}}getVolumeSummaries(){return Array.from(this.volumes.entries()).map(([e,t])=>{const n=t.image;return{id:e,dimensions:n.size||[0,0,0],spacing:n.spacing||[1,1,1]}})}removeVolume(e){return this.volumes.delete(e)}cloneVolume(e,t=null){if(!this.volumes.has(e))return null;const n=this.volumes.get(e),o=t||this.generateVolumeId("clone"),i={...n.imageData,data:new n.imageData.data.constructor(n.imageData.data)};return this.volumes.set(o,{...n,imageData:i,clonedFrom:e,creationTime:new Date,source:{type:"clone",original:e}}),o}convertVolumeType(e,t,n=null){if(!this.volumes.has(e))return null;try{const o=this.volumes.get(e),i=n||this.generateVolumeId("converted"),a={int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,float32:Float32Array,float64:Float64Array};if(!a[t])throw new Error(`Unsupported component type: ${t}`);const s=a[t],c=new s(o.imageData.data.length);for(let l=0;l<o.imageData.data.length;l++)c[l]=o.imageData.data[l];const u={...o.imageData,data:c,imageType:{...o.imageData.imageType,componentType:t}};return this.volumes.set(i,{...o,image:this._createSafeImageCopy(o.image),imageData:u,convertedFrom:e,metadata:{...o.metadata,componentType:t},creationTime:new Date,source:{type:"converted",original:e}}),i}catch(o){return console.error("Failed to convert volume type:",o),null}}getVolumeStatistics(e){const t=this.getVolume(e);if(!t)throw new Error(`Volume with ID ${e} not found`);const n=t.image.data;n.length;let o=1/0,i=-1/0,a=0;for(let w=0;w<n.length;w++){const g=n[w];g<o&&(o=g),g>i&&(i=g),a+=g}const s=a/n.length;let c=0;for(let w=0;w<n.length;w++)c+=Math.pow(n[w]-s,2);c/=n.length;const u=Math.sqrt(c),l=[...n].sort((w,g)=>w-g),d=Math.floor(l.length/2);let m;l.length%2===0?m=(l[d-1]+l[d])/2:m=l[d];const p=this.calculatePercentile(l,25),h=this.calculatePercentile(l,75),f=h-p;return{min:this.roundValue(o),max:this.roundValue(i),mean:this.roundValue(s),median:this.roundValue(m),stdDev:this.roundValue(u),iqr:this.roundValue(f),q1:this.roundValue(p),q3:this.roundValue(h)}}calculatePercentile(e,t){const n=t/100*(e.length-1),o=Math.floor(n),i=n-o;return o>=e.length-1?e[e.length-1]:e[o]+i*(e[o+1]-e[o])}roundValue(e){return Math.round(e*100)/100}_createSafeImageCopy(e){return{imageType:{dimension:e.imageType.dimension,componentType:e.imageType.componentType,pixelType:e.imageType.pixelType,components:e.imageType.components},name:e.name,size:[...e.size],spacing:[...e.spacing],origin:[...e.origin],direction:Array.isArray(e.direction)?Array.isArray(e.direction[0])?e.direction.map(n=>[...n]):[...e.direction]:e.direction instanceof Float64Array?new Float64Array(e.direction):e.direction,data:new e.data.constructor(e.data)}}}const _=new we;class ve{constructor(){this.controls=new Map,this.niivueInstance=null,this._statusElementsCache=new Map}createControlSection(e,t,n={}){const{showWindowingSliders:o=!1,showTimeframeSlider:i=!1,showVoxelCoordinates:a=!0,showWorldCoordinates:s=!0,showValue:c=!0}=n,u=document.createElement("div");if(u.className="control-section hidden",u.id=`control-section-${e}`,this.controls.set(e,u),this.niivueInstance=t,this.setupLocationHandler(e,t),this.setSectionVisibility(e,!1),i&&t.volumes.length>0&&t.volumes[0].hdr.dims[4]>1){const m=document.createElement("div");m.className="timeframe-slider-container";const h=t.volumes[0].hdr.dims[4]-1,f=this.createSlider("Time:",0,h,t.currentFrame,"timeframe"),w=()=>{const g=parseInt(f.input.value,10);f.valueDisplay.textContent=g,t.setFrame(g)};f.input.addEventListener("input",w),t.onFrameChange=g=>{f.input.value=g,f.valueDisplay.textContent=g},m.appendChild(f.wrapper),u.appendChild(m)}if(o){const m=document.createElement("div");m.className="windowing-slider-container";const p=t.volumes[0],h=p.hasOwnProperty("robust_min")?p.robust_min:p.global_min,f=p.hasOwnProperty("robust_max")?p.robust_max:p.global_max,w=p.cal_max-p.cal_min,g=(p.cal_max+p.cal_min)/2,y=this.createSlider("WW:",1,(f-h)*2,w,"windowing"),v=this.createSlider("WL:",h,f,g,"windowing"),x=()=>{const $=parseFloat(y.input.value),F=parseFloat(v.input.value),T=F-$/2,C=F+$/2;y.valueDisplay.textContent=$.toFixed(0),v.valueDisplay.textContent=F.toFixed(0),t.volumes[0]&&(t.volumes[0].cal_min=T,t.volumes[0].cal_max=C,t.updateGLVolume())};y.input.addEventListener("input",x),v.input.addEventListener("input",x),m.appendChild(y.wrapper),m.appendChild(v.wrapper),u.appendChild(m)}const l=document.createElement("div");l.className="status-panel",l.id=`status-panel-${e}`;let d="";return a&&(d+=`<span class="status-value" id="voxel-coords-${e}"></span>`),s&&(d+=`<span class="status-value" id="world-coords-${e}"></span>`),c&&(d+=`<span class="status-value" id="voxel-value-${e}"></span>`),l.innerHTML=d,u.appendChild(l),this.controls.set(e,u),u}createSlider(e,t,n,o,i){const a=document.createElement("div");a.className=`${i}-slider-wrapper`;const s=document.createElement("label");s.textContent=e;const c=document.createElement("input");c.type="range",c.min=t,c.max=n,c.value=o,c.step=(n-t)/100,c.className=`${i}-slider`;const u=document.createElement("span");return u.className=`${i}-value`,u.textContent=o.toFixed(0),a.appendChild(s),a.appendChild(c),a.appendChild(u),{wrapper:a,input:c,valueDisplay:u}}getControlSection(e){return this.controls.get(e)}clear(){for(const e of[...this.controls.keys()])this.removeControlSection(e);this.controls.clear(),this._statusElementsCache.clear(),this.niivueInstance=null,console.log("All control sections and caches cleared.")}removeControlSection(e){const t=this.controls.get(e);t&&(t.remove(),this.controls.delete(e)),this._statusElementsCache.has(e)&&this._statusElementsCache.delete(e)}updateStatusPanel(e,t){if(!t)return;const n=this._getStatusElements(e);if(!n)return;const o=N.getViewer(e);if(!o?.volumes?.length){console.warn(`No volumes loaded for viewer ${e}`);return}const i=o.volumes[0],a=i.dims||[1,1,1],s=this._getVoxelCoords(t.vox),c=i.frame4D||0,u=a.length>3&&a[3]>1;this._updateVoxelDisplay(n.voxel,s,c,u),this._updateWorldDisplay(n.world,t.ras||t.mm),this._updateValueDisplay(n.value,t.values,i,s,a,c)}_getStatusElements(e){if(this._statusElementsCache.has(e)){const o=this._statusElementsCache.get(e);if(o.panel&&document.body.contains(o.panel))return o;this._statusElementsCache.delete(e)}const t=document.getElementById(`status-panel-${e}`);if(!t)return null;const n={viewId:e,panel:t,voxel:document.getElementById(`voxel-coords-${e}`),world:document.getElementById(`world-coords-${e}`),value:document.getElementById(`voxel-value-${e}`),timestamp:Date.now()};return this._statusElementsCache.set(e,n),n}_getVoxelCoords(e){if(!e)return[0,0,0];const t=Array.isArray(e)?e:e.length?Array.from(e):[0,0,0];return t.length>=3?t.slice(0,3).map(Math.round):[0,0,0]}_updateVoxelDisplay(e,t,n,o){e&&(e.textContent=o?`[${t[0]}, ${t[1]}, ${t[2]}, ${n}]`:`[${t[0]}, ${t[1]}, ${t[2]}]`)}_updateWorldDisplay(e,t){if(!e)return;if(!t){e.textContent="(0.0, 0.0, 0.0)";return}const n=Array.isArray(t)?t:t.length?Array.from(t):null;e.textContent=n&&n.length>=3?`(${n[0].toFixed(1)}, ${n[1].toFixed(1)}, ${n[2].toFixed(1)})`:"(0.0, 0.0, 0.0)"}_updateValueDisplay(e,t,n,o,i,a){if(e)try{if(t?.length>0){const v=t[0],x=typeof v=="object"&&v!==null&&"value"in v?Number(v.value):Number(v);e.textContent=x.toFixed(2);return}if(!n?.img||i.length<3){e.textContent="N/A";return}const[s,c,u]=o,[l,d,m]=i.slice(1,4),p=Math.max(0,Math.min(s,l-1)),h=Math.max(0,Math.min(c,d-1)),f=Math.max(0,Math.min(u,m-1)),w=l*d,g=w*m,y=a*g+f*w+h*l+p;e.textContent=y>=0&&y<n.img.length?Number(n.img[y]).toFixed(2):"OOB"}catch(s){console.error("Error updating voxel value:",s),e.textContent="ERR"}}setupLocationHandler(e,t){if(!t||!t.gl)return;this.niivueInstance||(this.niivueInstance=t);const n=t.onLocationChange;t.onLocationChange=o=>{n&&typeof n=="function"&&n.call(t,o),o&&this.updateStatusPanel(e,o)}}setSectionVisibility(e,t){const n=this.controls.get(e);n&&n.classList.toggle("hidden",!t)}toggleAllControlSections(e=null){if(this.controls.size===0||["INPUT","TEXTAREA","SELECT"].includes(document.activeElement?.tagName))return;let t;if(e!==null)t=e;else{const n=this.controls.values().next().value;t=n?n.classList.contains("hidden"):!0}for(const[n,o]of this.controls){if(t){const i=N.getViewer(n);if(i){const a=i.getCurrentLocation?i.getCurrentLocation():null;a&&this.updateStatusPanel(n,a),i.updateGLVolume&&i.updateGLVolume()}}this.setSectionVisibility(n,t)}}}const M=new ve,K={async delay(r){if(typeof r!="number"||r<0)throw new Error("Delay must be a non-negative number");return new Promise(e=>setTimeout(e,r))},applyStyles(r,e){if(!r||!r.style){console.error("Invalid element provided to applyStyles");return}typeof e=="string"?r.style.cssText=e:typeof e=="object"&&e!==null&&Object.assign(r.style,e)},setupScrolling(){const r=document.getElementById("viewer-grid");return r?(this.enableViewerGridScroll(r),!0):(console.warn("Viewer grid element not found"),!1)},enableViewerGridScroll(r){if(!r){console.warn("No viewer grid element provided");return}r.style.paddingBottom="8px",r.style.overflow===""&&(r.style.overflow="auto")}},X={createElement(r,e={},t={}){const n=globalThis.document.createElement(r);return Object.entries(e).forEach(([o,i])=>{i!=null&&(n[o]=i)}),Object.keys(t).length>0&&K.applyStyles(n,t),n},createInputField(r,e){if(!r||!r.name||!e)return console.error("Invalid field configuration or prefix"),this.createElement("div");const t=this.createElement("div",{className:"input-group"}),n=`${e}-${r.name.replace(/\s+/g,"-").toLowerCase()}`,o=this.createElement("label",{textContent:r.name+":",htmlFor:n},{display:"block",marginBottom:"3px",fontSize:"12px"}),i={type:r.type||"text",value:r.value||"",id:n};r.step&&(i.step=r.step),r.placeholder&&(i.placeholder=r.placeholder),r.required&&(i.required=!0);const a=this.createElement("input",i,{width:"100%",padding:"6px",fontSize:"12px",borderRadius:"4px",border:"1px solid #ccc"});return t.appendChild(o),t.appendChild(a),t},createInputRow(r,e){if(!Array.isArray(r)||r.length===0)return console.error("Invalid fieldsInRow array"),this.createElement("div");const t=this.createElement("div",{},{display:"flex",gap:"10px",marginBottom:"10px"});return r.forEach(n=>{const o=this.createInputField(n,e);K.applyStyles(o,{flex:"1",minWidth:"0"}),t.appendChild(o)}),t},createParamsGrid(r,e){if(!Array.isArray(r)||r.length===0)return console.error("Invalid params array"),this.createElement("div");const t=this.createElement("div",{},{display:"grid",gridTemplateColumns:"repeat(2, 1fr)",gridTemplateRows:"repeat(2, auto)",gap:"10px",marginBottom:"20px"});return r.forEach(n=>{const o=this.createInputField(n,e);t.appendChild(o)}),t},createActionButton(r,e,t={}){if(!r||!e)return console.error("Button text and id are required"),this.createElement("button");const n={textContent:r,id:e,className:"action-button",type:t.type||"button"};return t.disabled&&(n.disabled=!0),this.createElement("button",n)},createSpacer(r="15px"){return this.createElement("div",{},{height:r})},createSpinner(r={}){const{size:e="14px",color:t="#fff",speed:n="0.8s",borderWidth:o="2px"}=r,i=this.createElement("div",{},{width:e,height:e,border:`${o} solid rgba(255, 255, 255, 0.3)`,borderTopColor:"transparent",borderRightColor:"transparent",borderBottomColor:"transparent",borderLeftColor:t,borderRadius:"50%",display:"inline-block",boxSizing:"border-box",animation:`spin ${n} linear infinite`,flexShrink:"0",pointerEvents:"none"}),a=`spinner-style-${Date.now()}`,s=this.createElement("style",{id:a,textContent:`
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
            `});return document.head.appendChild(s),{spinner:i,style:s}},addSpinnerToButton(r,e={}){if(!r||!(r instanceof HTMLElement))return console.error("Invalid button element"),()=>{};const{position:t="end",size:n,color:o}=e,i=r.textContent.trim(),a=r.innerHTML;r.style.display;const s=this.createElement("div",{style:"position: relative; display: flex; align-items: center; width: 100%; height: 100%; white-space: nowrap;"}),c=this.createElement("span",{textContent:i,style:"position: relative; z-index: 1; transition: all 0.2s ease-in-out; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; flex: 1; text-align: left;"}),{spinner:u,style:l}=this.createSpinner({size:n||"14px",color:o||"#fff",borderWidth:"2px"}),d=this.createElement("div",{style:`
                position: absolute;
                right: 8px;
                top: 50%;
                transform: translateY(-50%);
                display: flex;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.2s ease-in-out;
                pointer-events: none;
                width: ${n||"14px"};
                height: ${n||"14px"};
                margin-left: 8px;
            `});d.appendChild(u),s.appendChild(c),s.appendChild(d);const m=r.style.minWidth;return r.style.paddingRight,r.style.position="relative",r.style.overflow="hidden",r.style.paddingRight="30px",r.innerHTML="",r.appendChild(s),r.disabled=!0,requestAnimationFrame(()=>{d.style.opacity="1"}),()=>{d.style.opacity="0",setTimeout(()=>{r.innerHTML=a,r.style.minWidth=m,r.style.paddingRight="",r.style.overflow="",r.disabled=!1,l&&l.parentNode&&l.parentNode.removeChild(l)},200)}},createPanel(r,e={}){const n={...{enableDragDrop:!1,useMargin:!0},...e},o=String(r||`panel-${Math.floor(Math.random()*1e3)}`),i=`niivue-container-${o.replace("panel-","")}`,a={width:n.useMargin?"calc(100% - 20px)":"100%",height:n.useMargin?"calc(100% - 20px)":"100%",overflow:"hidden",backgroundColor:"#ffffff",position:"relative",boxSizing:"border-box",display:"flex",flexDirection:"column"};n.useMargin&&(a.margin="10px");const s=this.createElement("div",{id:o,className:"viewer-panel"},a),c=this.createElement("div",{className:"viewer-section"},{width:"100%",flex:"1",minHeight:"0",position:"relative",overflow:"hidden",backgroundColor:"#f8f9fa",display:"block"}),u=this.createElement("div",{id:i,className:"niivue-container"},{width:"100%",height:"100%",position:"relative",overflow:"hidden"});return c.appendChild(u),s.appendChild(c),n.enableDragDrop&&B(async()=>{const{addDragDropToPanel:l}=await import("./dragDrop-BDTOEOzE.js");return{addDragDropToPanel:l}},[]).then(({addDragDropToPanel:l})=>{l(s,o)}).catch(l=>{console.error("Failed to load drag and drop module:",l)}),{panel:s,container:u}}};function ae(r,e={}){if(!(r instanceof HTMLElement))throw new TypeError("viewerGrid must be a valid HTMLElement");const{columns:t="repeat(2, 1fr)",rows:n="repeat(2, 1fr)",gap:o="10px",padding:i="10px",overflow:a="hidden",clearContent:s=!0}=e;s&&(r.innerHTML=""),Object.assign(r.style,{display:"flex",flexDirection:"column",height:"100%",width:"100%",flex:"1"});const c=document.createElement("div");return c.className="grid-container",Object.assign(c.style,{display:"grid",gridTemplateColumns:t,gridTemplateRows:n,gap:o,width:"100%",height:"100%",padding:i,boxSizing:"border-box",overflow:a}),r.appendChild(c),c}function le(){N&&N.clear(),M&&M.clear();const r=document.getElementById("viewer-grid");return r?(r.innerHTML="",r):(console.error("Viewer grid element not found"),null)}async function Q(r,e={}){const{title:t,enableDragDrop:n=!1,useMargin:o=!1}=e,{panel:i,container:a}=X.createPanel(r,{enableDragDrop:n,useMargin:o});if(t){const s=document.createElement("div");s.className="panel-header",s.textContent=t,i.prepend(s)}return{panel:i,container:a}}async function k(r={}){const e=le();if(!e)throw new Error("Failed to reset viewer grid");const t=ae(e,{columns:"1fr",rows:"1fr"});if(!t)throw new Error("Failed to create grid container.");const n={title:null,useMargin:!1,enableDragDrop:!0,...r},o=await Q("panel-1",n);if(!o||!o.panel)throw new Error("Failed to create panel.");return t.appendChild(o.panel),o}async function Ke(r={},e={}){const t=le();if(!t)throw new Error("Failed to reset viewer grid");const n={columns:"repeat(2, 1fr)",rows:"repeat(2, 1fr)",gap:"10px",...r},o=ae(t,n);if(!o)throw new Error("Failed to create grid container.");const i=[],a={title:null,useMargin:!1,enableDragDrop:!0,...e};for(let s=0;s<4;s++){const c=`panel-${s+1}`,u=await Q(c,a);u&&(o.appendChild(u.panel),i.push(u))}return i}class Ce{constructor(){this.registry=new Map,this.viewers=new Map,this.lastLoggedPositions=new Map,this.debounceDelay=200,this.enableSyncVerification=!1,this.coordsAreEqual=(e,t,n=1e-5)=>{if(!e||!t||e.length!==t.length)return!1;for(let o=0;o<e.length;o++)if(Math.abs(e[o]-t[o])>n)return!1;return!0}}get(e){return this.registry.get(e)||null}async findAvailablePanel(){const e=document.getElementById("viewer-grid");if(!e)return console.error("viewer-grid not found!"),null;const t=e.querySelectorAll(".panel");for(const n of t){const o=n.querySelector(".niivue-container");if(o&&!this.registry.has(o.id))return n}if(window.uiUtils&&typeof window.uiUtils.createPanel=="function"){console.log("No available panel found, creating a new one.");const n=await Q(`panel-${this.views.length+1}`,{enableDragDrop:!0});return n&&n.panel?(e.appendChild(n.panel),n.panel):null}return null}has(e){return this.registry.has(e)}synchronizeViewers(){const e=Array.from(this.registry.entries()).filter(([o,i])=>!!i);if(e.length<2)return;console.log(`Creating a bidirectional sync network among ${e.length} viewers`),e.forEach(([o,i])=>{i.id||(i.id=o)});const t=e.filter(([o,i])=>i.sliceType!==i.sliceTypeRender);console.log(`Found ${t.length} syncable viewers (excluding 3D render views)`);const n=this;for(let o=0;o<t.length;o++){const[i,a]=t[o],s=t.filter((c,u)=>u!==o).map(([c,u])=>u);if(a.volumes&&a.volumes.length>0?n.addBoundsCheckingToViewer(a):console.warn(`Viewer ${i} has no volumes loaded, skipping bounds checking`),a.syncWith(s),console.log(`Viewer ${i} synced with ${s.length} other viewers`),a.volumes&&a.volumes.length>0&&typeof a.volumes[0].frame4D<"u"&&a.volumes[0].nFrame4D>1){const c=(u,l)=>{s.forEach(d=>{try{if(!d||!d.volumes||!d.volumes[0])return;const m=d.volumes[0];typeof m.nFrame4D=="number"&&m.nFrame4D>1&&typeof m.frame4D=="number"&&l>=0&&l<m.nFrame4D&&m.frame4D!==l&&d.setFrame4D(m.id,l)}catch(m){console.error("Error in frame sync handler:",m)}})};a.onFrameChange=c}}console.log(`Bidirectional sync network established among ${t.length} syncable viewers`)}getVolumeIdForContainer(e){const t=typeof e=="string"?document.getElementById(e):e;if(!t)return console.warn("getVolumeIdForContainer: Panel element not found"),null;const n=t.querySelector(".niivue-container");if(!n)return console.warn("getVolumeIdForContainer: .niivue-container not found in panel"),null;if(!this.viewers||typeof this.viewers.entries!="function")return console.warn("ViewRegistry.viewers is not properly initialized"),null;for(const[o,i]of this.viewers.entries())if(Array.isArray(i)){for(const a of i)if(a&&a.container===n)return o}return null}async load(e,t,n={}){await ne();const o=typeof t=="string"?document.getElementById(t):t;if(!o)throw new Error("Panel container not found");const i=o.querySelector(".niivue-container");if(!i)throw new Error("NiiVue container (.niivue-container) not found within the panel");const a=o.id,s=Array.isArray(e)?e:[e],c=Array.isArray(n)?n:s.map(()=>({}));if(!Array.isArray(n)&&typeof n=="object"&&s.forEach((l,d)=>{c[d]={...n}}),c.length!==s.length)throw new Error("If providing an array of options, it must match the length of volumeIds array");this.viewers||(console.log("Initializing viewers map"),this.viewers=new Map);const u=l=>{l.innerHTML="";let d=this._findExistingCanvas(l);return d||(d=document.createElement("canvas"),d.width=l.clientWidth||400,d.height=l.clientHeight||400,d.style.width="100%",d.style.height="100%",d.style.background="none",d.setAttribute("data-niivue","true"),l.appendChild(d)),d};try{if(this.registry.has(a)){const y=this.registry.get(a);y&&typeof y.destroy=="function"&&y.destroy(),this.registry.delete(a)}const l=u(i),d={loadingText:null,show3Dcrosshair:!0,backColor:[248/255,248/255,248/255,1],isNearestInterpolation:!0,hideControlBar:!0,dragAndDropEnabled:!1,crosshairColor:[1,0,0,.5],isRadiologicalConvention:!0,isWorldSpace:!0,isResizeCanvas:!0,onImageLoaded:function(){const y=this,v=document.getElementById(a);if(!v){console.warn(`Container ${a} not found`);return}if(!v.querySelector(".control-section"))try{const x=Array.isArray(n)?n[0]:n;if(x&&x.controlSection===!1){console.log(`Skipping control section for ${a} as per options`);return}const $={showVoxelCoordinates:!0,showWorldCoordinates:!0,showValue:!0,...x};console.log(`Creating control section for ${a}`);const F=M.createControlSection(a,y,$);F&&(v.appendChild(F),console.log(`Control section created for ${a}`))}catch(x){console.error("Error creating control section:",x)}}},m=new window.niivue.Niivue(d),p=this,h=function(y){if(!y)return;const v=Date.now(),x=`[${new Date(v).toISOString()}] [${a}]`,$=p.lastLoggedPositions.get(a)||{mm:null,time:0};y.mm&&$.mm&&p.coordsAreEqual(Array.from(y.mm),$.mm)&&v-$.time<p.debounceDelay||(y.mm&&console.log(`${x} MM: [${Array.from(y.mm).map(T=>T.toFixed(2)).join(", ")}]`),y.vox&&console.log(`${x} Voxel: [${Array.from(y.vox).map(T=>Math.round(T)).join(", ")}]`),typeof y.frame<"u"&&console.log(`${x} Frame: ${y.frame}`),y.mm&&p.lastLoggedPositions.set(a,{mm:Array.from(y.mm),time:v})),p.enableSyncVerification&&p.verifySynchronization(this,y,v)};m.containerId=a,m.opts.isDebug=!0,m.onLocationChange=(function(y){try{h.call(this,y)}catch(v){console.error("Error in location change handler:",v)}}).bind(m),setTimeout(()=>{M.setupLocationHandler(a,m)},0),m.attachToCanvas(l),this.registry.set(a,m);const w=(c[0]||{}).sliceType||"axial";switch(m.setIsOrientationTextVisible(!1),m.setRadiologicalConvention(!0),w.toLowerCase()){case"axial":m.setSliceType(m.sliceTypeAxial);break;case"coronal":m.setSliceType(m.sliceTypeCoronal);break;case"sagittal":m.setSliceType(m.sliceTypeSagittal);break;case"render":case"3d":case"volume":m.setSliceType(m.sliceTypeRender);break;case"multi":case"multiplanar":m.setSliceType(m.sliceTypeMultiplanar);break;default:m.setSliceType(m.sliceTypeAxial)}const g=await Promise.all(s.map(async(y,v)=>{const x=_.getBuffer(y);if(!x||x.byteLength===0)throw new Error(`ArrayBuffer for volume ${y} is empty or invalid`);const T=`${y}.${!1?"nii.gz":"nii"}`,b={...{colormap:"gray",opacity:1,visible:!0},...c[v]};return{url:x,name:T,frame:0,interpolation:0,...b}}));return await m.loadVolumes(g),s.forEach((y,v)=>{const x={niivue:m,container:i,volumeId:y,options:c[v]};console.log(`Creating viewer entry for volume ${y} in container ${i.id}:`,{containerId:i.id,containerTagName:i.tagName,containerSize:`${i.clientWidth}x${i.clientHeight}`,volumeIndex:v}),this.viewers.has(y)||this.viewers.set(y,[]),this.viewers.get(y).push(x)}),console.log(`Associated ${s.length} volume(s) with container ${a}`),this.synchronizeViewersAdvanced2({sync2d:!0,sync3d:!0,syncFrames:!0}),m}catch(l){throw console.error("Error loading volumes:",l),l}}async add(e,t,n={}){await ne();const o=typeof t=="string"?document.getElementById(t):t;if(!o)throw new Error("Panel container not found");const i=o.id,a=this.getViewer(i);if(!a||a.volumes.length===0)return console.log(`No base image in ${i}, loading image...`),this.load(e,t,n);const s=_.getVolume(e);if(!s)throw new Error(`Volume ${e} not found in volumeManager.`);console.log(`Adding overlay ${s.name||e} to panel ${i}`);const c=s.data||s.buffer;if(!c)throw new Error(`No data or buffer found for volume ${e}`);console.log(`Adding overlay ${s.name} to panel ${i}`);try{const u=(s.name||e).endsWith(".nii")?s.name||e:`${s.name||e}.nii`;console.log("Loading volume with filename:",u);const l=new File([c],u,{type:"application/octet-stream"}),d={...n,isAdd:!0,url:u,colormap:"red",opacity:n.opacity||.7,cal_min:n.cal_min,cal_max:n.cal_max,colorbarVisible:!1,useNegativeCmap:!1,isOverlay:!0,frame4D:0,volume:{hdr:null,img:null}};return console.log("Loading with options:",d),await a.loadFromFile(l,d),a.updateGLVolume(),a}catch(u){throw console.error("Error loading volume from file:",u),u}}getViewer(e){return this.registry.get(e)||null}verifySynchronization(e,t,n){if(!e){console.warn("No source viewer provided for synchronization check.");return}if(!t){console.warn("No event data provided for synchronization check.");return}const o=.5;if(t&&typeof t.frame<"u"&&t.mm&&this.lastLoggedMm&&this.coordsAreEqual(Array.from(t.mm),this.lastLoggedMm)&&n-this.lastLogTime<500)return;if(e&&!e.id){for(const[s,c]of this.registry.entries())if(c===e){e.id=s;break}}const a=e&&e.id?e.id:"unknown";if(console.log(`[${n}] LocationChange event from viewer ID: ${a}`),t&&t.mm&&console.log(`  Source event position: [${t.mm[0].toFixed(2)}, ${t.mm[1].toFixed(2)}, ${t.mm[2].toFixed(2)}] mm`),t&&typeof t.frame<"u"&&console.log(`  Source viewer frame: ${t.frame}`),this.registry){console.log("  --- SYNC VERIFICATION - All viewer positions ---");const s=Array.from(this.registry.entries()).filter(([d,m])=>!!m);let c=0,u=0,l=[];if(s.forEach(([d,m])=>{const p=d||`viewer-${s.indexOf([d,m])}`,h=m.sliceType===m.sliceTypeRender;let f="unknown",w=!1,g=null;try{m.scene&&m.scene.crosshairPos&&(typeof m.frac2mm=="function"?(g=m.frac2mm(m.scene.crosshairPos),f=`[${g[0].toFixed(2)}, ${g[1].toFixed(2)}, ${g[2].toFixed(2)}] mm`,h?f+=" (render view - not synced)":(u++,l.push({viewerId:p,position:g}),w=!0)):f=`[${m.scene.crosshairPos[0].toFixed(3)}, ${m.scene.crosshairPos[1].toFixed(3)}, ${m.scene.crosshairPos[2].toFixed(3)}] (fractional)`)}catch(F){f=`Error: ${F.message}`}let y="N/A",v=!1;m.volumes&&m.volumes.length>0&&typeof m.volumes[0].frame4D<"u"&&(y=m.volumes[0].frame4D,t&&typeof t.frame<"u"&&m.volumes[0].frame4D===t.frame&&(v=!0));const x=w?"✓":h?"R":"✗",$=v?"✓":typeof t.frame>"u"?"-":"✗";console.log(`  ${x} Viewer ${p}: position ${f}, frame: ${y} ${$}${h?" (3D render)":""}`)}),l.length>1){const d=l[0].position;if(c=l.filter(p=>p.position.every((h,f)=>Math.abs(h-d[f])<o)).length,c===l.length)console.log(`  Cross-viewer sync: ✓ All ${l.length} viewers synchronized with each other`);else if(console.log(`  Cross-viewer sync: ✗ Only ${c}/${l.length} viewers synchronized with each other`),l.length===2){const p=l[0].position,h=l[1].position,f=[Math.abs(p[0]-h[0]),Math.abs(p[1]-h[1]),Math.abs(p[2]-h[2])];console.log(`  Position difference: [${f[0].toFixed(2)}, ${f[1].toFixed(2)}, ${f[2].toFixed(2)}] mm`)}}else l.length===1&&(c=1);console.log(`  Synchronization status: ${c}/${u} syncable viewers in sync`),console.log("  -------------------------------------------")}}_findExistingCanvas(e){const t=e.querySelector("canvas[data-niivue]");if(t)return t;const n=e.querySelectorAll("canvas");return n.length===1?n[0]:null}addBoundsCheckingToViewer(e){if(!e)return;if(e._boundsCheckingApplied){console.log(`Bounds checking already applied to viewer ${e.containerId||"unknown"}`);return}e._boundsCheckingApplied=!0;const t=e.onLocationChange,n=e.setVoxelPosition,o=e.setScene,i=1e3;e._boundsTracking||(e._boundsTracking={lastBoundsViolation:null,lastBoundsViolationTime:0});const a=(s,c)=>{if(!s.volumes||s.volumes.length===0||!c)return c;try{const u=s.volumes[0];if(!u.dims||u.dims.length<4)return c;let l;if(typeof u.mm2vox=="function")l=u.mm2vox(c);else if(typeof s.mm2frac=="function"&&typeof s.frac2vox=="function"){const w=s.mm2frac(c);w&&(l=[w[0]*u.dims[1],w[1]*u.dims[2],w[2]*u.dims[3]])}else return c;if(!l||l.length<3)return c;const d=u.dims,m=d[1]-1,p=d[2]-1,h=d[3]-1;if(l[0]<0||l[0]>m||l[1]<0||l[1]>p||l[2]<0||l[2]>h){const w=[Math.max(0,Math.min(Math.round(l[0]),m)),Math.max(0,Math.min(Math.round(l[1]),p)),Math.max(0,Math.min(Math.round(l[2]),h))];let g;if(typeof u.vox2mm=="function")g=u.vox2mm(w,u.matRAS);else if(typeof s.frac2mm=="function"){const $=[w[0]/d[1],w[1]/d[2],w[2]/d[3]];g=s.frac2mm($)}else return c;const y=Date.now(),v=`${l[0].toFixed(1)},${l[1].toFixed(1)},${l[2].toFixed(1)}`,x=s._boundsTracking;return(x.lastBoundsViolation!==v||y-x.lastBoundsViolationTime>i)&&(console.warn(`Clamping out-of-bounds coordinates in viewer ${s.containerId||"unknown"}: [${l[0].toFixed(1)}, ${l[1].toFixed(1)}, ${l[2].toFixed(1)}] -> [${w[0]}, ${w[1]}, ${w[2]}] (max: [${m}, ${p}, ${h}])`),x.lastBoundsViolation=v,x.lastBoundsViolationTime=y),g}return c}catch(u){return console.warn("Error in validateWorldCoordinates:",u),c}};if(e.onLocationChange=function(s){if(!s){t&&t.call(this,s);return}try{if(s.mm&&s.mm.length>=3){const c=a(this,s.mm);if(c!==s.mm){let u=s.vox;if(typeof this.volumes[0].mm2vox=="function")u=this.volumes[0].mm2vox(c);else if(typeof this.mm2frac=="function"&&this.volumes&&this.volumes[0]){const l=this.mm2frac(c);if(l){const d=this.volumes[0].dims;u=[l[0]*d[1],l[1]*d[2],l[2]*d[3]]}}s={...s,mm:c,vox:u}}}t&&t.call(this,s)}catch(c){console.error("Error in bounds-checked onLocationChange:",c),t&&t.call(this,s)}},n&&typeof n=="function"&&(e.setVoxelPosition=function(s){if(!s||!this.volumes||this.volumes.length===0)return n.call(this,s);try{const u=this.volumes[0].dims;if(u&&u.length>=4){const l=u[1]-1,d=u[2]-1,m=u[3]-1,p=[Math.max(0,Math.min(Math.round(s[0]),l)),Math.max(0,Math.min(Math.round(s[1]),d)),Math.max(0,Math.min(Math.round(s[2]),m))];return n.call(this,p)}}catch(c){console.warn("Error in bounds-checked setVoxelPosition:",c)}return n.call(this,s)}),o&&typeof o=="function"&&(e.setScene=function(s){if(s&&s.crosshairPos&&this.volumes&&this.volumes.length>0)try{const c=this.frac2mm(s.crosshairPos),u=a(this,c);u!==c&&(s={...s,crosshairPos:this.mm2frac(u)})}catch(c){console.warn("Error validating crosshair position in setScene:",c)}return o.call(this,s)}),e.scene&&e.scene.crosshairPos){const s=e.scene.crosshairPos,c=new Proxy(s,{set:function(u,l,d){if(typeof l=="string"&&["0","1","2"].includes(l))try{if(e.volumes&&e.volumes.length>0){const m=e.volumes[0],p=m.dims;if(p&&p.length>=4){const h=parseInt(l);d=Math.max(0,Math.min(d,1));const f=Array.from(u);f[h]=d;const w=e.frac2mm(f),g=m.mm2vox(w);if(g){const y=p[h+1]-1;(g[h]<0||g[h]>y)&&(d=Math.max(0,Math.min(Math.round(g[h]),y))/p[h+1])}}}}catch{}return u[l]=d,!0}});e.scene.crosshairPos=c}console.log(`Comprehensive bounds checking applied to viewer ${e.containerId||"unknown"}`)}remove(e){if(typeof e!="string"||!e.trim())throw new Error("containerId must be a non-empty string");if(!this.registry.has(e))return console.warn(`Container ${e} not found in registry`),!1;try{const t=this.registry.get(e);if(!t)return console.warn(`No NiiVue instance found for container: ${e}`),this.registry.delete(e),!1;try{typeof t.destroy=="function"&&t.destroy();const n=document.getElementById(e);n&&n.querySelectorAll("canvas[data-niivue]").forEach(i=>{i.parentNode&&i.parentNode.removeChild(i)})}catch(n){console.error(`Error during cleanup for container ${e}:`,n)}this.registry.delete(e);for(const[n,o]of this.viewers.entries()){const i=o.filter(a=>a.container.id!==e);i.length===0?this.viewers.delete(n):i.length!==o.length&&this.viewers.set(n,i)}return console.log("Successfully removed NiiVue instance from container:",e),!0}catch(t){throw console.error(`Failed to remove container ${e}:`,t),new Error(`Failed to remove container ${e}: ${t.message}`)}}clear(){for(const[e,t]of this.registry.entries())try{typeof t.destroy=="function"&&t.destroy();const n=t.gl.canvas;if(n){const o=n.getContext("webgl")||n.getContext("experimental-webgl");if(o){const a=o.getExtension("WEBGL_lose_context");a&&a.loseContext()}const i=n.cloneNode(!1);n.parentNode?.replaceChild(i,n)}}catch(n){console.warn("Error cleaning up Niivue instance:",n)}window.gc&&window.gc(),this.registry.clear(),this.viewers.clear(),console.log("All Niivue instances and viewers cleared")}get count(){return this.registry.size}updateOptions(e,t={}){if(!this.registry.has(e))return!1;const n=this.registry.get(e);return t.interpolation!==void 0&&n.setInterpolation(t.interpolation),t.colormap!==void 0&&n.volumes.length>0&&(n.volumes[0].colormap=n.colormaps[t.colormap]),t.opacity!==void 0&&n.volumes.length>0&&(n.volumes[0].opacity=t.opacity),n.updateGLVolume(),!0}synchronizeViewers2(){const e=Array.from(this.registry.entries()).filter(([n,o])=>!!o);if(e.length<2)return;console.log(`Creating broadcastTo sync network among ${e.length} viewers`),e.forEach(([n,o])=>{o.id||(o.id=n)});const t=e.filter(([n,o])=>o.sliceType!==o.sliceTypeRender);console.log(`Found ${t.length} syncable viewers for broadcastTo sync`);for(let n=0;n<t.length;n++){const[o,i]=t[n],a=t.filter((s,c)=>c!==n).map(([s,c])=>c);i.volumes&&i.volumes.length>0?this.addBoundsCheckingToViewer(i):console.warn(`Viewer ${o} has no volumes loaded, skipping bounds checking`);try{i.broadcastTo(a,{"2d":!0,"3d":!0}),console.log(`Viewer ${o} broadcasting to ${a.length} other viewers`)}catch(s){console.error(`Error setting up broadcastTo for viewer ${o}:`,s),console.log(`Falling back to syncWith for viewer ${o}`),i.syncWith(a)}if(i.volumes&&i.volumes.length>0&&typeof i.volumes[0].frame4D<"u"&&i.volumes[0].nFrame4D>1){const s=(c,u)=>{a.forEach(l=>{try{if(!l||!l.volumes||!l.volumes[0])return;const d=l.volumes[0];typeof d.nFrame4D=="number"&&d.nFrame4D>1&&typeof d.frame4D=="number"&&u>=0&&u<d.nFrame4D&&d.frame4D!==u&&l.setFrame4D(d.id,u)}catch(d){console.error("Error in frame sync handler:",d)}})};i.onFrameChange=s}}console.log(`BroadcastTo sync network established among ${t.length} syncable viewers`)}synchronizeViewersAdvanced(e={}){const{sync2d:t=!0,sync3d:n=!0,syncFrames:o=!0}=e,i=Array.from(this.registry.entries()).filter(([s,c])=>!!c);if(i.length<2)return;console.log(`Creating configurable broadcastTo sync network among ${i.length} viewers`),console.log(`Sync options: 2D=${t}, 3D=${n}, Frames=${o}`),i.forEach(([s,c])=>{c.id||(c.id=s)});let a=i;n||(a=i.filter(([s,c])=>c.sliceType!==c.sliceTypeRender)),console.log(`Found ${a.length} syncable viewers for configurable sync`);for(let s=0;s<a.length;s++){const[c,u]=a[s],l=a.filter((d,m)=>m!==s).map(([d,m])=>m);u.volumes&&u.volumes.length>0?this.addBoundsCheckingToViewer(u):console.warn(`Viewer ${c} has no volumes loaded, skipping bounds checking`);try{u.broadcastTo(l,{"2d":t,"3d":n}),console.log(`Viewer ${c} broadcasting to ${l.length} other viewers (2D: ${t}, 3D: ${n})`)}catch(d){console.error(`Error setting up broadcastTo for viewer ${c}:`,d),console.log(`Falling back to syncWith for viewer ${c}`),u.syncWith(l)}if(o&&u.volumes&&u.volumes.length>0&&typeof u.volumes[0].frame4D<"u"&&u.volumes[0].nFrame4D>1){const d=(m,p)=>{l.forEach(h=>{try{if(!h||!h.volumes||!h.volumes[0])return;const f=h.volumes[0];typeof f.nFrame4D=="number"&&f.nFrame4D>1&&typeof f.frame4D=="number"&&p>=0&&p<f.nFrame4D&&f.frame4D!==p&&h.setFrame4D(f.id,p)}catch(f){console.error("Error in frame sync handler:",f)}})};u.onFrameChange=d}}console.log(`Configurable broadcastTo sync network established among ${a.length} syncable viewers`)}synchronizeViewersAdvanced2(e={}){const{sync2d:t=!0,sync3d:n=!0,syncFrames:o=!0}=e,i=Array.from(this.registry.entries()).filter(([s,c])=>!!c);if(i.length<2)return;console.log(`Creating clean sync network among ${i.length} viewers`),console.log(`Sync options: 2D=${t}, 3D=${n}, Frames=${o}`),i.forEach(([s,c])=>{c.id||(c.id=s)});let a=i;n||(a=i.filter(([s,c])=>c.sliceType!==c.sliceTypeRender)),console.log(`Found ${a.length} syncable viewers`);for(let s=0;s<a.length;s++){const[c,u]=a[s],l=a.filter((d,m)=>m!==s).map(([d,m])=>m);u.broadcastTo(l,{"2d":t,"3d":n}),o&&u.volumes?.length>0&&u.volumes[0]?.nFrame4D>1&&(u.onFrameChange=(d,m)=>{l.forEach(p=>{const h=p.volumes?.[0];h?.nFrame4D>1&&h.frame4D!==m&&p.setFrame4D(h.id,m)})})}console.log(`Sync network established among ${a.length} viewers`)}disableSynchronization(){const e=Array.from(this.registry.entries()).filter(([t,n])=>!!n);console.log(`Disabling synchronization for ${e.length} viewers`),e.forEach(([t,n])=>{try{n.broadcastTo([],{"2d":!1,"3d":!1}),n.onFrameChange&&(n.onFrameChange=null),console.log(`Synchronization disabled for viewer ${t}`)}catch(o){console.error(`Error disabling synchronization for viewer ${t}:`,o)}}),console.log("Synchronization disabled for all viewers")}synchronizeViewersRobust(e={}){const{sync2d:t=!0,sync3d:n=!0,syncFrames:o=!0,validateBounds:i=!0}=e,a=Array.from(this.registry.entries()).filter(([c,u])=>!!u);if(a.length<2)return;console.log(`Creating robust sync network among ${a.length} viewers with bounds validation`),console.log(`Sync options: 2D=${t}, 3D=${n}, Frames=${o}, ValidateBounds=${i}`),a.forEach(([c,u])=>{u.id||(u.id=c)});let s=a;n||(s=a.filter(([c,u])=>u.sliceType!==u.sliceTypeRender)),console.log(`Found ${s.length} syncable viewers for robust sync`);for(let c=0;c<s.length;c++){const[u,l]=s[c],d=s.filter((h,f)=>f!==c).map(([h,f])=>f),m=l.onLocationChange;l.volumes&&l.volumes.length>0&&this.addBoundsCheckingToViewer(l);const p=l.onLocationChange;if(l.onLocationChange=function(h){if(!h){p&&p.call(this,h);return}try{if(p&&p.call(this,h),h._syncTriggered)return;if(i&&h.mm&&h.mm.length>=3)d.forEach(f=>{try{if(!f.volumes||f.volumes.length===0)return;const w=f.volumes[0];let g;if(typeof w.mm2vox=="function")g=w.mm2vox(h.mm);else if(typeof f.mm2frac=="function"){const v=f.mm2frac(h.mm);if(v&&w.dims){const x=w.dims;g=[v[0]*x[1],v[1]*x[2],v[2]*x[3]]}}if(!g)return;const y=w.dims;if(y&&y.length>=4){const v=y[1]-1,x=y[2]-1,$=y[3]-1;if(g[0]>=0&&g[0]<=v&&g[1]>=0&&g[1]<=x&&g[2]>=0&&g[2]<=$){if(t&&f.sliceType!==f.sliceTypeRender){const T=f.mm2frac(h.mm);if(T){f.scene.crosshairPos=T,f.drawScene();const C=f._originalLocationHandler;C&&C.call(f,{mm:h.mm,vox:g,frac:T,frame:h.frame,_syncTriggered:!0});try{M.updateStatusPanel(f.containerId,{mm:h.mm,vox:g,frac:T,frame:h.frame})}catch(b){console.warn("Error updating status panel for synchronized viewer:",b)}}}}else{const T=[Math.max(0,Math.min(Math.round(g[0]),v)),Math.max(0,Math.min(Math.round(g[1]),x)),Math.max(0,Math.min(Math.round(g[2]),$))];let C;if(typeof w.vox2mm=="function")C=w.vox2mm(T,w.matRAS);else if(typeof f.frac2mm=="function"){const b=[T[0]/y[1],T[1]/y[2],T[2]/y[3]];C=f.frac2mm(b)}if(C&&t&&f.sliceType!==f.sliceTypeRender){const b=f.mm2frac(C);if(b){f.scene.crosshairPos=b,f.drawScene();const S=f._originalLocationHandler;S&&S.call(f,{mm:C,vox:T,frac:b,frame:h.frame,_syncTriggered:!0});try{M.updateStatusPanel(f.containerId,{mm:C,vox:T,frac:b,frame:h.frame})}catch(E){console.warn("Error updating status panel for synchronized viewer:",E)}}}}}}catch(w){console.warn(`Error syncing to viewer ${f.containerId||"unknown"}:`,w)}});else try{this.broadcastTo(d,{"2d":t,"3d":n})}catch(f){console.warn(`Error using broadcastTo for viewer ${u}:`,f),this.syncWith(d)}}catch(f){console.error("Error in robust sync handler:",f)}},l._originalLocationHandler=m,o&&l.volumes&&l.volumes.length>0&&typeof l.volumes[0].frame4D<"u"&&l.volumes[0].nFrame4D>1){const h=(f,w)=>{d.forEach(g=>{try{if(!g||!g.volumes||!g.volumes[0])return;const y=g.volumes[0];typeof y.nFrame4D=="number"&&y.nFrame4D>1&&typeof y.frame4D=="number"&&w>=0&&w<y.nFrame4D&&y.frame4D!==w&&g.setFrame4D(y.id,w)}catch(y){console.error("Error in robust frame sync handler:",y)}})};l.onFrameChange=h}}console.log(`Robust sync network established among ${s.length} syncable viewers`)}synchronizeViewersRobust2(e={}){const{sync2d:t=!0,sync3d:n=!0,validateBounds:o=!0,worldSpace:i=!0,crosshair:a=!0,zoomPan:s=!0}=e,c=Array.from(this.registry.entries()).filter(([d,m])=>!!m).map(([d,m])=>(m.id||(m.id=d),m));if(c.length<2){console.warn("Need at least 2 viewers for synchronization");return}console.log(`Setting up simplified robust sync for ${c.length} viewers`),console.log(`Options: 2D=${t}, 3D=${n}, WorldSpace=${i}, ValidateBounds=${o}`);const u=d=>{if(!d||d.length!==3)return!1;for(let p=0;p<3;p++)if(!isFinite(d[p]))return!1;const m=1e-6;return d[0]>=-m&&d[0]<=1+m&&d[1]>=-m&&d[1]<=1+m&&d[2]>=-m&&d[2]<=1+m},l=d=>!d||d.length!==3?[.5,.5,.5]:[Math.max(0,Math.min(1,d[0])),Math.max(0,Math.min(1,d[1])),Math.max(0,Math.min(1,d[2]))];i&&c.forEach(d=>{typeof d.setSliceMM=="function"&&(d.opts&&d.opts.isWorldSpace||d.setSliceMM(!0))}),c.forEach(d=>{typeof d.broadcastTo=="function"&&d.broadcastTo([],{"2d":!1,"3d":!1})}),c.forEach((d,m)=>{const p=c.filter((h,f)=>f!==m);try{if(o){const h=d.onLocationChange;d.onLocationChange=function(f){if(h&&h.call(this,f),!(f&&f._syncTriggered)&&f&&f.mm&&i){const w=f.mm;p.forEach(g=>{try{if(typeof g.mm2frac=="function"&&typeof g.frac2mm=="function"){const y=g.mm2frac(w);let v=y;o&&!u(y)&&(console.warn(`Viewer ${g.id}: Crosshair outside bounds, clamping coordinates`),v=l(y)),g.scene.crosshairPos=y,g.drawScene();const x=g.frac2mm(v);if(!x||x.length<3||!x.every(Number.isFinite)){console.warn(`Viewer ${g.id}: Invalid mm coordinates generated, skipping sync for this viewer.`);return}let $=null;if(g.volumes&&g.volumes.length>0){const F=g.volumes[0];F.dims&&F.dims.length>=4&&($=[Math.round(v[0]*(F.dims[1]-1)),Math.round(v[1]*(F.dims[2]-1)),Math.round(v[2]*(F.dims[3]-1))])}try{M.updateStatusPanel(g.id,{mm:x,vox:$,frac:v,frame:f.frame||0})}catch(F){console.warn("Error updating status panel for synchronized viewer:",F)}g.onLocationChange&&x&&x.length>=3&&x.every(Number.isFinite)&&g.onLocationChange.call(g,{mm:x,vox:$,frac:v,frame:f.frame||0,_syncTriggered:!0})}}catch(y){console.warn(`Error syncing to viewer ${g.id}:`,y)}})}}}else typeof d.broadcastTo=="function"&&d.broadcastTo(p,{"2d":t,"3d":n,crosshair:a,zoomPan:t&&s,sliceType:t})}catch(h){console.error(`Error setting up sync for viewer ${d.id}:`,h)}}),console.log("Simplified robust sync network established successfully")}}const N=new Ce,ce=(r,e)=>async(...t)=>{try{return await r(...t)}catch(n){throw console.error(`${e}:`,n),n}};function de(r){let e;if(typeof r=="string"){if(e=document.getElementById(r),!e)throw new Error(`Panel with ID '${r}' not found`)}else if(r instanceof HTMLElement)e=r.closest(".viewer-panel")||r;else throw new Error("Expected HTMLElement or panel ID string");e.id||(e.id=`panel-${Date.now()}`);let t=e.querySelector(".niivue-container");return t||(t=Object.assign(document.createElement("div"),{className:"niivue-container",style:"width: 100%; height: 100%;"}),(e.querySelector(".viewer-section")||e).appendChild(t)),{panel:e,container:t}}const xe=ce(async(r,e,{sliceType:t="axial",...n}={})=>{const{panel:o}=de(e),i=await _.addFromFile(r,o.id);return await N.load(i,o,{sliceType:t,...n}),i},"Error loading NIfTI file"),be=ce(async(r,e,{sliceType:t="axial",...n}={})=>{const{panel:o}=de(e),i=Array.isArray(r)?r:[r],a=await _.addFromDICOM(i,o.id);return await N.load(a,o,{sliceType:t,...n}),a},"Error loading DICOM files");function ue(r=[],e=!1,t=!1,n,{id:o,useModernAPI:i=!0}={}){if(typeof n!="function")throw new Error("Callback must be a function");return i&&"showOpenFilePicker"in window?Ee(r,e,t,n):Se(r,e,t,n,o)}function Ee(r,e,t,n,o){let i=new AbortController,a=!1;const s=()=>({types:r.length?[{description:"Medical Images",accept:{"application/octet-stream":r}}]:void 0,multiple:t||e,signal:i.signal}),c=()=>{a||(i.abort(),a=!0)};return(async()=>{try{let u=[];try{if(t&&"showDirectoryPicker"in window)console.log("Attempting directory upload..."),u=await $e();else{console.log("Using file picker...");const d=await window.showOpenFilePicker(s());console.log(`Selected ${d.length} file(s)`),u=await Promise.all(d.map(async(m,p)=>{const h=await m.getFile();return console.log(`File ${p+1}: ${h.name}, size: ${h.size} bytes`),h}))}}catch(d){if(d.name==="AbortError"){console.log("File selection was cancelled by user");return}throw d}const l=(Array.isArray(u)?u:[u]).filter(d=>{const m=d&&d.size>0;return m||console.warn("Skipping invalid file:",d?d.name:"undefined"),m});if(console.log(`Found ${l.length} valid file(s)`),l.length===0)throw new Error("No valid files selected. Please select files with content.");n(l)}catch(u){u.name!=="AbortError"&&(console.error("Error with file selection:",u),n(null,u))}finally{c()}})(),c}async function $e(){try{const r=await window.showDirectoryPicker(),e=[];return await me(r,e),console.log(`Found ${e.length} files in directory`),e}catch(r){throw r.name!=="AbortError"&&console.error("Error processing directory:",r),r}}async function me(r,e,t=""){for await(const n of r.values()){const o=t?`${t}/${n.name}`:n.name;if(n.kind==="file")try{const i=await n.getFile();i.size>0?(e.push(i),console.log(`Added file: ${o} (${i.size} bytes)`)):console.warn(`Skipping empty file: ${o}`)}catch(i){console.error(`Error reading file ${o}:`,i)}else if(n.kind==="directory"){console.log(`Entering directory: ${o}`);try{await me(n,e,o)}catch(i){console.error(`Error processing directory ${o}:`,i)}}}}function Se(r,e,t,n,o){const i=Object.assign(document.createElement("input"),{type:"file",accept:r.join(","),multiple:t||e,style:"display: none;",id:o||""}),a=["webkitdirectory","mozdirectory","msdirectory","directory"].some(m=>m in i);t&&a&&(i.webkitdirectory=i.mozdirectory=i.msdirectory=i.directory=!0),document.body.appendChild(i);const s=new AbortController,{signal:c}=s,u=()=>{try{const m=i.files?Array.from(i.files):[];n(m.length?m:null)}catch(m){console.error("Error handling file selection:",m),n(null,m)}finally{d()}},l=()=>{setTimeout(()=>{document.activeElement!==i&&!i.files?.length&&(d(),n(null))},300)},d=()=>{c.aborted||(s.abort(),i.remove())};return i.addEventListener("change",u,{signal:c}),window.addEventListener("blur",l,{signal:c,once:!0}),i.click(),d}async function Fe(r){try{const e=await k({title:null});await N.load(r,e.panel.id,{sliceType:"multiplanar",colormap:"gray",opacity:1})}catch(e){console.error(`Error displaying volume ${r}:`,e),alert(`Failed to display volume: ${e.message}`)}}const Te={async loadSampleImage(r){if(!r||!r.id){console.error("loadSampleImage requires a valid panel argument.");return}const e=r.id,t="./data/sample-image.nii.gz";try{const n=await _.addFromFilename(t,e);if(n){await N.load(n,e,{sliceType:"multiplanar",colormap:"gray",opacity:1});const o=await _.getVolumeStatistics(n);console.log("Volume Statistics:",o)}}catch(n){console.error("Error loading sample image:",n),alert("Failed to load sample image. Please check the console for details.")}},async listVolumes(){const r=document.getElementById("viewer-grid");if(!r){console.error("Could not find the viewer-grid element.");return}try{r.innerHTML="",r.style.display="block",r.style.whiteSpace="normal",r.style.padding="10px";const e=[{text:"ID",width:"20%"},{text:"Geometry",width:"60%"},{text:"Actions",width:"20%"}],{container:t,tbody:n}=fe(e),o=_.getVolumeSummaries();if(o.length>0)for(const i of o)try{const a=Me(i);n.appendChild(a)}catch(a){console.error(`Error creating row for volume ${i.id}:`,a)}else n.appendChild(pe("No volumes loaded.",e.length));r.appendChild(t)}catch(e){console.error("Error listing volumes:",e),r.innerHTML='<div style="padding: 20px; color: red; text-align: center;">An error occurred while displaying volumes.</div>'}}},{loadSampleImage:De,listVolumes:Ie}=Te;function oe(r){if(!Array.isArray(r)||r.length===0)return null;const e=[...r].sort((u,l)=>u-l),t=e.length,n=4,i=e.reduce((u,l)=>u+l,0)/t,a=e.reduce((u,l)=>u+Math.pow(l-i,2),0)/t,s=u=>{const l=Math.floor(t*u);return e[Math.min(l,t-1)]},c=t%2===0?(e[t/2-1]+e[t/2])/2:e[Math.floor(t/2)];return{mean:i.toFixed(n),stdDev:Math.sqrt(a).toFixed(n),min:e[0].toFixed(n),max:e[t-1].toFixed(n),median:c.toFixed(n),p25:s(.25).toFixed(n),p75:s(.75).toFixed(n)}}function Z(r,e={}){const t=document.createElement("td");return t.style.padding=e.padding||"12px 8px",t.style.borderBottom=e.borderBottom||"1px solid #ddd",t.style.textAlign=e.textAlign||"left",t.style.fontSize=e.fontSize||"14px",t.style.lineHeight=e.lineHeight||"1.4",t.style.verticalAlign=e.verticalAlign||"top",e.width&&(t.style.width=e.width),typeof r=="string"||typeof r=="number"?t.textContent=r:r&&t.appendChild(r),t}function fe(r,e){const t=document.createElement("div");t.style.width="100%",t.style.marginBottom="20px";const n=document.createElement("table");n.style.width="100%",n.style.borderCollapse="collapse",n.style.backgroundColor="#ffffff";const o=Ae(r);n.appendChild(o);const i=document.createElement("tbody");return n.appendChild(i),t.appendChild(n),{container:t,table:n,tbody:i}}function Ae(r){const e=document.createElement("thead"),t=document.createElement("tr");return r.forEach(n=>{const o=document.createElement("th");o.textContent=n.text,o.style.padding="10px 8px",o.style.backgroundColor="#f0f0f0",o.style.textAlign="left",o.style.fontSize="14px",o.style.fontWeight="600",o.style.borderBottom="1px solid #ddd",n.width&&(o.style.width=n.width),t.appendChild(o)}),e.appendChild(t),e}function Xe(r,e,t){const n=a=>{if(!a){const c=document.createElement("div");return c.textContent="No data available",c.style.padding="20px",c.style.textAlign="center",c.style.color="#666",c}const s=document.createElement("table");s.className="stats-table",s.style.width="100%",s.style.borderCollapse="separate",s.style.borderSpacing="0 2px";for(const[c,u]of Object.entries(a)){const l=document.createElement("tr"),d=document.createElement("td");d.textContent=c.charAt(0).toUpperCase()+c.slice(1).replace(/([A-Z])/g," $1"),d.style.padding="2px 30px 2px 0",d.style.whiteSpace="nowrap",d.style.width="1%",d.style.fontSize="14px";const m=document.createElement("td");m.textContent=u,m.style.padding="2px 0",m.style.textAlign="left",m.style.width="auto",m.style.fontSize="14px",l.appendChild(d),l.appendChild(m),s.appendChild(l)}return s},o=oe(t.fd1Values),i=oe(t.fd2Values);try{r&&r.appendChild(n(o)),e&&e.appendChild(n(i))}catch(a){console.error("Error creating statistics tables:",a)}}function pe(r,e,t=!1){const n=document.createElement("tr"),o=document.createElement("td");return o.colSpan=e,o.textContent=r,o.style.textAlign="center",o.style.padding="20px",o.style.fontStyle="italic",t&&(o.style.color="red"),n.appendChild(o),n}function Me(r){if(!r||!r.id)return console.warn("Invalid volume data provided to createVolumeTableRow"),null;const e=document.createElement("tr");e.style.borderBottom="1px solid #ddd",e.style.height="40px",e.style.fontSize="14px",e.style.lineHeight="1.4",e.style.verticalAlign="top";const t=a=>a?`${a[0]} × ${a[1]} × ${a[2]}`:"N/A",n=a=>a&&Array.isArray(a)&&a.length>=3?`${a[0].toFixed(2)} × ${a[1].toFixed(2)} × ${a[2].toFixed(2)}`:"N/A";e.appendChild(Z(r.id,{width:"20%"}));const o=`${t(r.dimensions)} | ${n(r.spacing)}`;e.appendChild(Z(o,{width:"60%"}));const i=Pe(r,e);return i&&e.appendChild(i),e}function Pe(r,e){if(!r||!e)return console.warn("Invalid parameters provided to createActionCell"),null;const t=Z("",{width:"20%"}),n=document.createElement("div");n.style.display="flex",n.style.gap="4px",n.style.justifyContent="flex-start";const o=(i,a)=>{const s=X.createActionButton(i,`action-${i.toLowerCase()}-${Math.random().toString(36).substr(2,9)}`);return s.classList.add("compact-action-button"),a&&(s.onclick=a),s};try{const i=o("View",()=>{Fe(r.id)}),a=o("Remove",()=>{_.removeVolume(r.id),e.remove()});n.appendChild(i),n.appendChild(a),t.appendChild(n)}catch(i){console.error("Error creating action buttons:",i),t.textContent="Error"}return t}function Ye(r){const e=n=>{console.warn("parseScalesString:",n),alert(n)};if(!r||!r.trim())return e('Please enter valid scales (e.g., "1,2,4,8,16", "1 2 4 8 16", or "#5")'),null;const t=r.trim();if(t.startsWith("#")){const n=parseInt(t.substring(1),10);return!isNaN(n)&&n>0?Array.from({length:n},(o,i)=>i+1):(e("Invalid format for # notation. Use #N where N is a positive integer (e.g., #5)."),null)}try{const n=t.split(/[\s,]+/).filter(o=>o.trim()!=="").map(o=>parseInt(o.trim(),10)).filter(o=>!isNaN(o)&&o>0);return n.length===0?(e("Please enter at least one valid positive scale value"),null):n}catch(n){return e("Error parsing scales: "+n.message),null}}function _e(r,e,t){if(!t)return console.error("Container element is required"),null;t.innerHTML="",t.style.display="block",t.style.whiteSpace="normal",t.style.padding="10px";const n=Ne(r,e);return t.appendChild(n),K&&K.enableViewerGridScroll(t),n}function Ne(r=[],e=[]){const t=[{text:"File/Series",width:"35%"},{text:"Dimensions",width:"12%"},{text:"Spacing",width:"12%"},{text:"Details",width:"41%"}],{container:n,tbody:o}=fe(t),i=[...r].sort((s,c)=>(s.filename||"").localeCompare(c.filename||"")),a=[...e].sort((s,c)=>{const u=`${s.patientId||""} | ${s.seriesNumber||""} | ${s.seriesDescription||""}`,l=`${c.patientId||""} | ${c.seriesNumber||""} | ${c.seriesDescription||""}`;return u.localeCompare(l)});return i.length===0&&a.length===0?o.appendChild(pe("No NIFTI or DICOM files found.",t.length)):(i.length>0&&(o.appendChild(re(`NIfTI Files (${i.length})`)),i.forEach(s=>o.appendChild(Be(s)))),a.length>0&&(o.appendChild(re(`DICOM Series (${a.length})`)),a.forEach(s=>o.appendChild(Le(s))))),n}function Be(r){const e=document.createElement("tr"),t=P(),n=r.filename||r.path||"N/A";t.textContent=n,e.appendChild(t);const o=P();o.textContent=r.dimensions||"N/A",e.appendChild(o);const i=P();i.textContent=r.spacing||"N/A",e.appendChild(i);const a=P(),s=[];return r.size&&s.push(r.size),r.dataType&&s.push(`Type: ${r.dataType}`),r.bitDepth&&s.push(`${r.bitDepth}bit`),a.textContent=s.join(" | "),e.appendChild(a),e}function Le(r){const e=document.createElement("tr"),t=P(),n=(r.path||"").split("/"),o=n.length>0?n[n.length-1]:r.path||"N/A";t.textContent=o,e.appendChild(t);const i=P();i.textContent=r.dimensions||"N/A",e.appendChild(i);const a=P();a.textContent=r.spacing||"N/A",e.appendChild(a);const s=P(),c=[];return r.size&&c.push(r.size),r.fileCount&&c.push(`${r.fileCount} files`),r.patientId&&r.patientId!=="N/A"&&c.push(`Patient: ${r.patientId}`),r.seriesNumber&&r.seriesNumber!=="N/A"&&c.push(`Series: ${r.seriesNumber}`),r.seriesDescription&&r.seriesDescription!=="N/A"&&c.push(r.seriesDescription),s.textContent=c.join(" | "),e.appendChild(s),e}function re(r){const e=document.createElement("tr"),t=document.createElement("td");return t.colSpan=4,t.textContent=r,t.style.padding="12px 8px",t.style.backgroundColor="#f0f0f0",t.style.fontWeight="600",t.style.fontSize="14px",t.style.borderTop="1px solid #ddd",t.style.borderBottom="1px solid #ddd",e.appendChild(t),e}function P(){const r=document.createElement("td");return r.style.padding="12px 8px",r.style.borderBottom="1px solid #ddd",r.style.textAlign="left",r.style.fontSize="14px",r.style.lineHeight="1.4",r.style.verticalAlign="top",r}async function ze(r,e={}){return new Promise((t,n)=>{ue([".nii",".nii.gz"],!1,!1,async(o,i)=>{if(i)return console.error("Error selecting NIfTI file:",i),n(i);if(!o||o.length===0)return t(null);try{const a=o[0];if(!r)throw new Error("No panel provided to load NIfTI file into.");const s={sliceType:"multiplanar",colormap:"gray",opacity:1,...e};await xe(a,r,s),t(a)}catch(a){console.error("Error loading NIfTI file:",a),n(a)}},"nifti-loader")})}async function ke(r,e={}){return new Promise((t,n)=>{ue([".dcm"],!0,!0,async(o,i)=>{if(i)return console.error("Error selecting DICOM files:",i),n(i);if(!o||o.length===0)return t(null);try{if(!r)throw new Error("No panel provided to load DICOM files into.");const a={sliceType:"multiplanar",colormap:"gray",opacity:1,...e};await be(o,r,a),t(o)}catch(a){console.error("Error loading DICOM files:",a),n(a)}},"dicom-loader")})}function Ve(){const r=document.getElementById("scan-files");r&&Oe(r)}function Oe(r){if(r.disabled)return;const e=document.createElement("input");e.type="file",e.webkitdirectory=!0,e.multiple=!0,e.style.display="none",document.body.appendChild(e),e.addEventListener("change",async t=>{const n=t.target.files;if(!n||n.length===0){document.body.removeChild(e);return}const o=X.addSpinnerToButton(r,{position:"end",size:"16px",color:"#fff"});try{const a=n[0].webkitRelativePath.split("/"),s=a.length>0?a[0]:null;await Re(n)}catch(i){console.error("Error scanning files:",i)}finally{o(),document.body.removeChild(e)}}),e.click()}async function Re(r){if(!r||r.length===0)return;const e=performance.now(),t=document.getElementById("viewer-grid");if(!t)return;t.innerHTML="",t.style.padding="20px",t.style.height="100%",t.style.overflow="auto",t.style.display="block",t.style.whiteSpace="normal";const n=Array.from(r||[]),o=await He(n),i=await We(n),s=((performance.now()-e)/1e3).toFixed(1);console.log(`📊 Scan completed in ${s}s - Found ${o.length} NIfTI files and ${i.length} DICOM series`),_e(o,i,t)}async function He(r){const e=r.filter(o=>/(\.nii(\.gz)?$)|(\.hdr(\.gz)?$)/i.test(o.name));if(e.length===0)return[];await ye();const t=[],n=10;console.log(`Processing ${e.length} NIfTI files...`);for(let o=0;o<e.length;o+=n){const i=e.slice(o,o+n),a=await Promise.all(i.map(async s=>{try{let u=await G(s,4096);if(window.nifti.isCompressed(u))try{const l=await G(s,262144),d=await window.nifti.readHeaderAsync(l);if(!d)throw new Error("Failed to read compressed NIfTI header");const m=[d.dims[1],d.dims[2],d.dims[3]],p=[d.pixDims[1],d.pixDims[2],d.pixDims[3]];return{type:"nifti",path:s.webkitRelativePath||s.name,filename:s.name,dimensions:m.join(" × "),spacing:p.map(h=>h.toFixed(2)).join(" × "),size:`${(s.size/1024/1024).toFixed(1)}MB`,dataType:d.datatypeCode,bitDepth:d.numBitsPerVoxel,compressed:!0}}catch{if(s.size<50*1024*1024){const d=await G(s,s.size),m=window.nifti.decompress(d),p=window.nifti.readHeader(m);if(!p)throw new Error("Failed to read NIfTI header after full decompression");const h=[p.dims[1],p.dims[2],p.dims[3]],f=[p.pixDims[1],p.pixDims[2],p.pixDims[3]];return{type:"nifti",path:s.webkitRelativePath||s.name,filename:s.name,dimensions:h.join(" × "),spacing:f.map(w=>w.toFixed(2)).join(" × "),size:`${(s.size/1024/1024).toFixed(1)}MB`,dataType:p.datatypeCode,bitDepth:p.numBitsPerVoxel,compressed:!0}}else throw new Error("Compressed file too large for header-only reading")}else{if(!window.nifti.isNIFTI(u))throw new Error("Not a valid NIfTI file");const l=window.nifti.readHeader(u);if(!l)throw new Error("Failed to read NIfTI header");const d=[l.dims[1],l.dims[2],l.dims[3]],m=[l.pixDims[1],l.pixDims[2],l.pixDims[3]];return{type:"nifti",path:s.webkitRelativePath||s.name,filename:s.name,dimensions:d.join(" × "),spacing:m.map(p=>p.toFixed(2)).join(" × "),size:`${(s.size/1024/1024).toFixed(1)}MB`,dataType:l.datatypeCode,bitDepth:l.numBitsPerVoxel,compressed:!1}}}catch(c){return console.warn(`Skipping NIfTI file ${s.name}: ${c.message}`),null}}));t.push(...a.filter(Boolean)),o+n<e.length&&await new Promise(s=>setTimeout(s,5))}return t}async function We(r){await se();const e=new Map,t=r.filter(o=>/(\.dcm$)|(\.dicom$)|(\.ima$)/i.test(o.name)||!o.name.includes("."));if(t.length===0)return[];t.forEach(o=>{const i=o.webkitRelativePath||o.name,a=i.includes("/")?i.substring(0,i.lastIndexOf("/")):"";e.has(a)||e.set(a,[]),e.get(a).push(o)}),console.log(`Processing ${t.length} DICOM files in ${e.size} series...`);const n=[];for(const[o,i]of e.entries())if(i?.length)try{let a=null,s=null;for(const h of i)try{const f=await G(h,131072),w=new Uint8Array(f);if(!je(w))continue;const g={untilTag:"x00281050"},y=dicomParser.parseDicom(w,g);if(y.uint16("x00280010")&&y.uint16("x00280011")){a=y,s=h;break}}catch{continue}if(!a||!s){console.warn(`Could not find a parsable DICOM file in series ${o}`);continue}const c={patientId:(a.string("x00100020")||"N/A").trim(),seriesDescription:(a.string("x0008103e")||"N/A").trim(),seriesNumber:(a.string("x00200011")||"N/A").trim(),rows:a.uint16("x00280010")||0,columns:a.uint16("x00280011")||0,pixelSpacing:a.string("x00280030")||"",sliceThickness:a.string("x00180050")||"0"},u=c.pixelSpacing.split("\\"),l=u[0]?parseFloat(u[0]):0,d=u[1]?parseFloat(u[1]):0,m=parseFloat(c.sliceThickness)||0,p=i.reduce((h,f)=>h+f.size,0);n.push({type:"dicom",path:o||s.name,dimensions:`${c.columns} × ${c.rows} × ${i.length}`,spacing:[d.toFixed(2),l.toFixed(2),m.toFixed(2)].join(" × "),patientId:c.patientId,seriesDescription:c.seriesDescription,seriesNumber:c.seriesNumber,size:`${(p/1024/1024).toFixed(1)}MB`,fileCount:i.length})}catch(a){console.warn(`Error processing DICOM series ${o||"root"}:`,a.message);continue}return n}async function G(r,e){return await r.slice(0,Math.min(e,r.size)).arrayBuffer()}function je(r){return r.length>132?String.fromCharCode(r[128])==="D"&&String.fromCharCode(r[129])==="I"&&String.fromCharCode(r[130])==="C"&&String.fromCharCode(r[131])==="M":!1}function ie(r,e,t){let n,o;const i=c=>{n=c.clientX,o=parseInt(window.getComputedStyle(r).width,10),document.body.classList.add("resizing"),document.addEventListener("mousemove",a),document.addEventListener("mouseup",s),c.preventDefault()},a=c=>{const u=c.clientX-n;let l=t?o+u:o-u;const d=150,m=window.innerWidth*.4;l=Math.max(d,Math.min(m,l)),r.style.width=`${l}px`},s=()=>{document.body.classList.remove("resizing"),document.removeEventListener("mousemove",a),document.removeEventListener("mouseup",s)};e.addEventListener("mousedown",i)}const qe={_createButtonContainer(r){const e=document.createElement("div");return e.className="secondary-actions",e.style.display="none",r.forEach(t=>{const n=X.createActionButton(t,t.replace(/\s+/g,"-").toLowerCase());e.appendChild(n)}),e},init(){this.initSidebars(),this.initSidebarResize(),this.initButtonHandlers()},initSidebarResize(){const r=document.getElementById("left-sidebar"),e=document.getElementById("right-sidebar"),t=document.getElementById("left-resize-handle"),n=document.getElementById("right-resize-handle");r&&(r.style.width="12%"),e&&(e.style.width="12%"),r&&t&&ie(r,t,!0),e&&n&&ie(e,n,!1)},initSidebars(){this.initLeftSidebar(),this.initRightSidebar()},_toggleSidebarSection(r,e,t){if(Array.from(r.children).some(o=>o!==e&&o!==t))Array.from(r.children).forEach(o=>{o!==e&&o!==t&&r.removeChild(o)}),t.style.display="none";else{const o=t.style.display==="none";t.style.display=o?"block":"none"}},initLeftSidebar(){const r=document.getElementById("data-button"),e=document.querySelector(".left-sidebar .sidebar-section");if(!r||!e||e.querySelector(".secondary-actions"))return;const t=["Load Sample","Load NIFTI","Load DICOM","Scan Files","List Volumes","Bonus 1","Bonus 2","Bonus 3"],n=this._createButtonContainer(t);e.appendChild(n),r.addEventListener("click",()=>this._toggleSidebarSection(e,r,n))},initRightSidebar(){const r=document.getElementById("action-button"),e=document.querySelector(".right-sidebar .sidebar-section");if(!r||!e||e.querySelector(".secondary-actions"))return;const t=["FD 2D","FD 3D","FD 4V"],n=this._createButtonContainer(t);e.appendChild(n),r.addEventListener("click",()=>this._toggleSidebarSection(e,r,n))},initButtonHandlers(){this.initDataButtonHandlers(),this.initActionButtonHandlers()},initDataButtonHandlers(){this._setupButtonHandler("load-sample",async()=>{const{panel:r}=await k();await De(r)}),this._setupButtonHandler("load-nifti",async()=>{const{panel:r}=await k();await ze(r)}),this._setupButtonHandler("load-dicom",async()=>{const{panel:r}=await k();await ke(r)}),this._setupButtonHandler("scan-files",Ve),this._setupButtonHandler("list-volumes",Ie),this._setupButtonHandler("bonus-1",async()=>{const{handleBonus1Action:r}=await B(async()=>{const{handleBonus1Action:e}=await import("./action-bonus1-CNWugsYZ.js");return{handleBonus1Action:e}},[]);r()}),this._setupButtonHandler("bonus-2",async()=>{const{handleBonus2Action:r}=await B(async()=>{const{handleBonus2Action:e}=await import("./action-bonus2-BPtR9ueC.js");return{handleBonus2Action:e}},[]);r()}),this._setupButtonHandler("bonus-3",async()=>{const{handleBonus3Action:r}=await B(async()=>{const{handleBonus3Action:e}=await import("./action-bonus3-HbFnmLcy.js");return{handleBonus3Action:e}},[]);r()})},initActionButtonHandlers(){const r=document.querySelector(".right-sidebar .secondary-actions"),e=document.querySelector(".right-sidebar .sidebar-section");this._setupButtonHandler("fd-2d",async()=>{const{handleFd2d:t}=await B(async()=>{const{handleFd2d:n}=await import("./action-fd2d-CnX10SwN.js");return{handleFd2d:n}},__vite__mapDeps([0,1]));t(r,e)}),this._setupButtonHandler("fd-3d",async()=>{const{handleFd3d:t}=await B(async()=>{const{handleFd3d:n}=await import("./action-fd3d-C8ZSXa3y.js");return{handleFd3d:n}},__vite__mapDeps([2,1]));t(r,e)}),this._setupButtonHandler("fd-4v",async()=>{const{handleFd4v:t}=await B(async()=>{const{handleFd4v:n}=await import("./action-fd4v-e9e2hMay.js");return{handleFd4v:n}},__vite__mapDeps([3,1]));t(r,e)})},_setupButtonHandler(r,e){const t=document.getElementById(r);t&&t.addEventListener("click",async n=>{try{await e(n)}catch(o){console.error(`Error in ${r} handler:`,o),alert(`An error occurred: ${o.message}`)}})}};try{document.addEventListener("DOMContentLoaded",async()=>{await k(),qe.init(),document.addEventListener("keydown",r=>{r.key==="F2"&&!["INPUT","TEXTAREA","SELECT"].includes(document.activeElement.tagName)&&(r.preventDefault(),M.toggleAllControlSections())}),console.log("Application initialized.")})}catch(r){console.error("Error during application initialization:",r)}export{B as _,Ue as a,M as b,Xe as c,_ as d,ke as e,be as f,xe as g,Ge as l,Ye as p,le as r,Ke as s,ze as t,X as u,N as v};
