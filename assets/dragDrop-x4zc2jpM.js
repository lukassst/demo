import{v as c,l as u,a as m}from"./index-Cmr-YRtx.js";function T(e,r){if(!e||e.dataset.dragDropEnabled==="true")return;e.dataset.dragDropEnabled="true";const a=e.style.cssText,t=a+"border: 2px dashed #4a90e2; background-color: rgba(74, 144, 226, 0.1);",n=i=>{i.preventDefault(),i.stopPropagation()},o=i=>{n(i),e.style.cssText=t},s=i=>{n(i),e.style.cssText=a},d=r||e.id||`panel-${crypto.randomUUID().slice(0,8)}`,l=async i=>{n(i),e.style.cssText=a;try{await y(i,e,d)}catch(g){console.error("Error handling file drop:",g)}};e.addEventListener("dragover",o),e.addEventListener("dragleave",s),e.addEventListener("drop",l),e._dragOverHandler=o,e._dragLeaveHandler=s,e._dropHandler=l}async function y(e,r,a){if(!e.dataTransfer.items)return;a||r.id;const t=e.dataTransfer.items;if(t.length===1)try{const o=t[0].webkitGetAsEntry();if(o&&o.isDirectory){const s=await D(o);await f(s,r,a);return}}catch(o){console.error("Error handling directory drop:",o)}const n=Array.from(e.dataTransfer.files);if(n.length===1&&n[0].name.toLowerCase().endsWith(".nii.gz"))await v(n[0],r,a);else{const o=w(n);await f(o,r,a)}}async function D(e){const r=[],a=async t=>{if(t.isFile){const n=await new Promise((o,s)=>{t.file(o,s)});r.push(n)}else if(t.isDirectory){const n=t.createReader(),o=await new Promise((s,d)=>{n.readEntries(s,d)});await Promise.all(o.map(a))}};return await a(e),r}function h(e){const r=e.name.toLowerCase();return r.endsWith(".dcm")||r.endsWith(".dicom")||r.endsWith(".ima")||!r.includes(".")}function w(e){return e.filter(r=>h(r))}async function v(e,r,a){const t=a||r?.id||"unknown-panel";return c&&c.has(t)&&(console.log(`Cleaning up panel ${t} before loading new volume.`),c.remove(t)),m(e,t,{sliceType:"axial"})}async function f(e,r,a){const t=a||r?.id||"unknown-panel";return c&&c.has(t)&&(console.log(`Cleaning up panel ${t} before loading new volume.`),c.remove(t)),u(e,t,{sliceType:"axial"})}export{T as addDragDropToPanel,w as filterDicomFiles,D as getFilesFromDirectory,f as handleDicomDrop,y as handleFileDrop,v as handleNiftiDrop,h as isDicomFile};
